Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/generated/inferno.Configuration", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.HistoryModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Interpolation", "reference/generated/inferno.Module", "reference/generated/inferno.RemoteHook", "reference/generated/inferno.StateHook", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.full", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.interp_exp_decay", "reference/generated/inferno.interp_linear", "reference/generated/inferno.interp_nearest", "reference/generated/inferno.interp_previous", "reference/generated/inferno.learn.HardWeightDependence", "reference/generated/inferno.learn.LayerwiseUpdater", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.learn.SoftWeightDependence", "reference/generated/inferno.learn.WeightDependence", "reference/generated/inferno.learn.functional.UpdateBounding", "reference/generated/inferno.learn.functional.hard_lower_bounding", "reference/generated/inferno.learn.functional.hard_upper_bounding", "reference/generated/inferno.learn.functional.power_lower_bounding", "reference/generated/inferno.learn.functional.power_upper_bounding", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.trace_cumulative", "reference/generated/inferno.neural.functional.trace_cumulative_scaled", "reference/generated/inferno.neural.functional.trace_nearest", "reference/generated/inferno.neural.functional.trace_nearest_scaled", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.FoldingReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.PostMonitor", "reference/generated/inferno.observe.PreMonitor", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.scalar", "reference/generated/inferno.simple_exponential_smoothing", "reference/generated/inferno.sqrt", "reference/generated/inferno.stats.LogNormal", "reference/generated/inferno.stats.Normal", "reference/generated/inferno.stats.Poisson", "reference/generated/inferno.tensorize", "reference/generated/inferno.typing.ManyToMany", "reference/generated/inferno.typing.ManyToManyMethod", "reference/generated/inferno.typing.ManyToOne", "reference/generated/inferno.typing.ManyToOneMethod", "reference/generated/inferno.typing.OneToMany", "reference/generated/inferno.typing.OneToManyMethod", "reference/generated/inferno.typing.OneToOne", "reference/generated/inferno.typing.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/learn-functional", "reference/neural", "reference/neural-functional", "reference/observe", "reference/stats", "reference/typing", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/generated/inferno.Configuration.rst", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.HistoryModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Interpolation.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RemoteHook.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.interp_exp_decay.rst", "reference/generated/inferno.interp_linear.rst", "reference/generated/inferno.interp_nearest.rst", "reference/generated/inferno.interp_previous.rst", "reference/generated/inferno.learn.HardWeightDependence.rst", "reference/generated/inferno.learn.LayerwiseUpdater.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.learn.SoftWeightDependence.rst", "reference/generated/inferno.learn.WeightDependence.rst", "reference/generated/inferno.learn.functional.UpdateBounding.rst", "reference/generated/inferno.learn.functional.hard_lower_bounding.rst", "reference/generated/inferno.learn.functional.hard_upper_bounding.rst", "reference/generated/inferno.learn.functional.power_lower_bounding.rst", "reference/generated/inferno.learn.functional.power_upper_bounding.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.trace_cumulative.rst", "reference/generated/inferno.neural.functional.trace_cumulative_scaled.rst", "reference/generated/inferno.neural.functional.trace_nearest.rst", "reference/generated/inferno.neural.functional.trace_nearest_scaled.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.FoldingReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.PostMonitor.rst", "reference/generated/inferno.observe.PreMonitor.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.scalar.rst", "reference/generated/inferno.simple_exponential_smoothing.rst", "reference/generated/inferno.sqrt.rst", "reference/generated/inferno.stats.LogNormal.rst", "reference/generated/inferno.stats.Normal.rst", "reference/generated/inferno.stats.Poisson.rst", "reference/generated/inferno.tensorize.rst", "reference/generated/inferno.typing.ManyToMany.rst", "reference/generated/inferno.typing.ManyToManyMethod.rst", "reference/generated/inferno.typing.ManyToOne.rst", "reference/generated/inferno.typing.ManyToOneMethod.rst", "reference/generated/inferno.typing.OneToMany.rst", "reference/generated/inferno.typing.OneToManyMethod.rst", "reference/generated/inferno.typing.OneToOne.rst", "reference/generated/inferno.typing.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/learn-functional.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/stats.md", "reference/typing.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "Configuration", "DimensionalModule", "HistoryModule", "Hook", "Interpolation", "Module", "RemoteHook", "StateHook", "empty", "exp", "full", "holt_linear_smoothing", "interp_exp_decay", "interp_linear", "interp_nearest", "interp_previous", "HardWeightDependence", "LayerwiseUpdater", "MaxRateClassifier", "STDP", "SoftWeightDependence", "WeightDependence", "UpdateBounding", "hard_lower_bounding", "hard_upper_bounding", "power_lower_bounding", "power_upper_bounding", "ALIF", "AdEx", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Synapse", "SynapseConstructor", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding", "voltage_thresholding_slope_intercept", "BatchMixin", "ShapeMixin", "AdaptationMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "DelayedSpikeCurrentAccessorMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "CumulativeTraceReducer", "EMAReducer", "EventReducer", "FoldReducer", "FoldingReducer", "InputMonitor", "Monitor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "PostMonitor", "PreMonitor", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "scalar", "simple_exponential_smoothing", "sqrt", "LogNormal", "Normal", "Poisson", "tensorize", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.learn.functional", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.dists", "inferno.typing", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"inferno": [0, 2, 45, 94, 135, 139, 140], "provid": [0, 5, 8, 9, 10, 27, 108], "two": [0, 3, 6, 7, 8, 9, 35, 36, 138, 140], "main": 0, "wai": [0, 2, 10], "interact": [0, 12], "through": [0, 3, 35, 36, 46, 47, 48, 76, 77, 142], "its": [0, 2, 5, 6, 7, 10, 11, 22, 35, 42, 63, 64, 140, 142], "interfac": 0, "The": [0, 2, 3, 6, 7, 11, 12, 22, 23, 36, 38, 45, 51, 61, 62, 63, 64, 66, 67, 69, 71, 83, 87, 93, 94, 96, 99, 104, 105, 106, 112, 114, 137, 138, 140], "latter": [0, 45, 138, 140], "can": [0, 2, 3, 5, 6, 8, 10, 11, 21, 24, 25, 26, 32, 33, 41, 43, 78, 96, 97, 99, 101, 102, 106, 139, 140], "distinguish": 0, "have": [0, 3, 7, 22, 25, 26, 36, 45, 46, 47, 69, 71, 93, 94, 104, 105], "modul": [0, 6, 7, 8, 11, 12, 22, 23, 34, 35, 42, 45, 49, 50, 51, 55, 56, 57, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 97, 99, 101, 102, 106, 117, 119, 121, 123, 135], "name": [0, 5, 6, 7, 10, 22, 24, 34, 45, 50, 81, 83, 85, 87, 112, 113, 114], "which": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 22, 23, 24, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 50, 51, 52, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 105, 106, 108, 111, 114, 124, 137, 138, 139, 140, 142], "end": [0, 2, 16, 19, 21, 24, 28, 29, 32, 33, 36, 37, 38, 40, 41, 43, 44, 68, 69, 70, 71, 81, 91, 92, 98, 104, 105, 110, 137, 138, 139, 140, 142], "In": [0, 2, 7, 42, 51, 94, 139, 142], "gener": [0, 2, 3, 6, 11, 22, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 58, 59, 60, 63, 64, 65, 66, 67, 74, 75, 81, 89, 112, 113, 114, 124, 135, 138, 140], "i": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 85, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 112, 113, 114, 115, 137, 138, 139, 140, 142], "great": 0, "get": [0, 22, 42, 63, 64], "off": [0, 81], "ground": [0, 23], "quickli": 0, "lot": 0, "boilerpl": 0, "code": 0, "ensur": [0, 10], "tensor": [0, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 124, 125], "shape": [0, 6, 13, 15, 32, 33, 37, 38, 39, 40, 41, 43, 44, 49, 52, 53, 54, 77, 78, 89, 107, 109, 124, 125], "compat": [0, 6, 10], "automat": [0, 10, 23, 58, 59, 60], "reduct": 0, "batch": [0, 23, 24, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 67, 76, 77, 78, 85, 94], "axi": 0, "done": [0, 58, 59, 60], "you": [0, 10], "meanwhil": [0, 3], "more": [0, 3, 24, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 51, 52, 58, 59, 60, 101, 102, 135, 138], "control": [0, 5, 11, 41, 43, 52, 73, 75, 137, 140], "over": [0, 2, 7, 23, 24, 32, 33, 36, 41, 46, 47, 48, 78, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 137, 138, 139, 140, 142], "flow": 0, "logic": [0, 7, 69, 71, 74, 75, 94], "allow": [0, 42, 63, 64, 68, 70, 91, 94, 98, 138], "greater": [0, 26, 65], "custom": [0, 24, 32, 33, 41, 43, 78], "base": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 135], "class": [0, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 25, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123], "extend": [0, 10, 89, 124], "implement": [0, 2, 7, 10, 22, 26, 32, 33, 35, 39, 43, 49, 52, 53, 58, 60, 73, 74, 75, 94, 95, 135, 137, 138, 139], "subclass": [0, 5, 8, 11, 22, 26, 35, 36, 46, 47, 48, 49, 53, 95], "us": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 27, 32, 33, 35, 36, 37, 38, 39, 43, 45, 46, 47, 48, 52, 54, 58, 60, 63, 69, 71, 72, 73, 85, 94, 97, 112, 113, 114, 115, 139, 140], "from": [0, 2, 6, 7, 8, 10, 11, 13, 15, 17, 22, 23, 24, 35, 36, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 55, 56, 57, 63, 64, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 104, 105, 107, 109, 112, 113, 114, 124, 125, 140, 142], "balanc": 0, "dedic": 0, "thi": [0, 2, 3, 5, 6, 7, 8, 10, 11, 21, 22, 24, 25, 26, 32, 33, 35, 36, 41, 42, 43, 45, 46, 47, 48, 49, 51, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 97, 99, 101, 102, 106, 114, 124, 137, 138, 139, 140, 142], "certain": 0, "case": [0, 2, 11, 19, 21, 24, 28, 29, 32, 37, 38, 40, 41, 44, 68, 69, 70, 71, 81, 90, 91, 98, 104, 105, 137, 142], "mai": [0, 2, 6, 9, 10, 24, 36, 45], "faster": [0, 42, 51], "less": [0, 26, 63, 64], "type": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "check": [0, 6, 69, 71], "need": [0, 10, 42, 45, 63, 64], "paramet": [0, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 115, 124, 125, 137, 138, 140], "remain": [0, 32, 40, 41, 44, 49, 58, 59, 60, 74, 75, 80, 81, 92, 138], "same": [0, 2, 5, 7, 10, 11, 32, 36, 41, 45, 78, 91, 92, 93, 94, 98, 100, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 140], "multipl": [0, 2, 3, 36, 41, 45, 75, 94, 137], "call": [0, 7, 8, 10, 11, 12, 22, 34, 35, 36, 46, 47, 48, 50, 55, 56, 57, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 96, 97, 99, 101, 102, 106, 114, 139, 140], "pre": [0, 24, 35, 36, 46, 47, 48, 137], "comput": [0, 2, 6, 23, 35, 36, 42, 46, 47, 48, 51, 108, 112, 113, 114], "initi": [0, 22, 36, 46, 47, 48, 49, 55, 56, 57, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 94, 95, 98, 100, 103, 104, 105], "unlik": [0, 11, 12], "artifici": 0, "neuron": [0, 23, 32, 33, 35, 39, 40, 41, 43, 44, 45, 52, 58, 59, 60, 72, 73, 74, 75, 78, 79, 80, 81, 82, 137, 142], "typic": [0, 10, 138, 140], "found": [0, 10], "ann": 0, "snn": 0, "ar": [0, 2, 5, 6, 7, 22, 23, 24, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 58, 59, 60, 63, 64, 65, 66, 67, 69, 71, 74, 75, 81, 83, 85, 87, 94, 95, 96, 108, 112, 113, 114, 115, 135, 137, 138, 139, 140], "fundament": 0, "state": [0, 7, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 68, 69, 70, 71, 74, 75, 91, 92, 93, 94, 95, 97, 98, 100, 103, 104, 105, 106, 110], "biolog": [0, 2, 3, 139], "electr": [0, 138, 139, 140, 142], "potenti": [0, 2, 3, 24, 29, 31, 32, 33, 39, 40, 41, 43, 44, 49, 52, 58, 59, 60, 72, 73, 74, 75, 81, 137, 138, 139, 140, 142], "differ": [0, 7, 23, 24, 32, 33, 37, 38, 39, 41, 43, 44, 52, 58, 60, 68, 70, 72, 73, 75, 85, 91, 94, 98, 138, 139, 140], "between": [0, 7, 9, 17, 18, 19, 20, 35, 37, 38, 42, 45, 51, 63, 64, 65, 66, 67, 91, 92, 93, 94, 95, 98, 100, 104, 105, 137, 140], "interior": 0, "exterior": 0, "cell": [0, 32, 33, 39, 41, 43, 44, 52, 72, 73, 138, 139, 140], "drive": 0, "forc": 0, "behind": [0, 2], "action": [0, 2, 3, 32, 33, 39, 40, 41, 43, 44, 49, 52, 58, 59, 60, 74, 75, 81, 138, 139, 140, 142], "simplifi": [0, 142], "model": [0, 2, 3, 21, 25, 26, 28, 29, 30, 31, 45, 138], "when": [0, 2, 5, 7, 8, 10, 11, 12, 23, 24, 32, 33, 34, 35, 36, 41, 43, 45, 46, 47, 48, 50, 58, 59, 60, 74, 75, 78, 85, 91, 94, 96, 97, 98, 99, 101, 102, 106, 115, 137, 138, 139], "": [0, 2, 6, 8, 10, 11, 12, 16, 17, 18, 19, 20, 22, 33, 39, 42, 43, 51, 52, 58, 60, 63, 64, 65, 66, 67, 69, 71, 73, 92, 94, 97, 103, 104, 105, 106, 110, 138, 139, 140], "import": [0, 2, 10], "treat": [0, 2, 24, 37, 38, 85], "variabl": [0, 2, 10], "separ": [0, 36, 42, 51], "each": [0, 2, 6, 7, 8, 23, 37, 38, 42, 51, 94, 138, 139, 140, 142], "sampl": [0, 7, 9, 17, 18, 19, 20, 23, 42, 51, 63, 64, 66, 67, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 112, 113, 114, 124], "present": [0, 6, 7, 23, 24, 25, 26, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 94, 138], "dure": [0, 3, 32, 40, 41, 44, 49, 81], "fix": [0, 3, 32, 33, 39, 40, 41, 43, 44, 52, 114, 140], "hyperparamet": [0, 2, 135], "do": [0, 76, 77], "duplic": 0, "instead": [0, 2, 139], "broadcast": [0, 35, 38, 58, 59, 60, 61, 62], "some": [0, 2, 7, 9, 45, 69, 71, 92], "includ": [0, 7, 9, 10, 24, 27, 32, 33, 35, 36, 41, 43, 45, 46, 47, 48, 51, 66, 67, 77, 78, 94, 101, 102, 135], "adapt": [0, 3, 32, 33, 41, 43, 58, 59, 60, 61, 62, 68, 69, 70, 71, 78, 135], "behavior": [0, 5, 23, 24, 32, 33, 41, 42, 43, 45, 63, 64, 78, 135, 138, 139], "input": [0, 2, 6, 8, 13, 14, 15, 22, 23, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 107, 109, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 138, 139, 140, 142], "A": [0, 2, 11, 24, 32, 33, 41, 43, 78, 114], "common": [0, 2, 37, 38, 49, 53, 54], "exampl": [0, 11, 61, 62, 140], "an": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 75, 77, 78, 81, 85, 91, 93, 95, 98, 106, 114, 116, 117, 118, 119, 120, 121, 138, 139, 140, 142], "threshold": [0, 32, 33, 41, 43, 59, 60, 62, 74, 75, 135, 139, 140], "where": [0, 2, 6, 7, 11, 21, 23, 24, 25, 26, 29, 32, 35, 36, 40, 41, 42, 44, 45, 46, 47, 48, 51, 58, 59, 60, 63, 64, 65, 66, 67, 81, 85, 92, 94, 137, 138, 139, 140, 142], "defin": [0, 2, 5, 25, 26, 139], "minimum": [0, 6, 25, 26, 42, 63, 64, 108], "membran": [0, 3, 32, 33, 39, 40, 41, 43, 44, 49, 52, 58, 59, 60, 72, 73, 74, 75, 78, 79, 82, 138, 139, 140], "spike": [0, 2, 23, 24, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 58, 59, 60, 62, 63, 64, 65, 66, 67, 74, 75, 81, 83, 85, 86, 87, 88, 135, 139, 140, 142], "These": [0, 23, 38, 138, 139], "should": [0, 6, 7, 8, 10, 11, 12, 22, 23, 24, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 58, 59, 60, 63, 64, 78, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106], "share": [0, 6], "across": [0, 32, 33, 39, 41, 43, 44, 46, 47, 48, 52, 72, 73, 138, 139, 140], "all": [0, 2, 22, 45, 46, 48, 50, 63, 64, 65, 66, 67, 68, 69, 90, 91, 94, 97, 103, 104, 108, 115, 139], "contribut": [0, 2, 104, 105], "portion": 0, "updat": [0, 2, 7, 8, 11, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 43, 58, 59, 60, 68, 69, 70, 71, 74, 75, 78, 137], "also": [0, 3, 6, 7, 24, 32, 33, 35, 36, 41, 43, 46, 47, 48, 65, 69, 71, 78, 139, 140], "appli": [0, 3, 6, 11, 12, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 46, 47, 48, 50, 58, 59, 60, 61, 62, 94, 101, 102, 137, 138, 139, 140, 142], "weight": [0, 11, 21, 23, 24, 25, 26, 28, 29, 30, 31, 35, 36, 46, 47, 48, 55, 56, 57, 135], "bias": [0, 35, 36, 46, 47, 48, 55, 56], "handl": [0, 10], "either": [0, 2, 7, 8, 23, 55, 60, 85, 138], "reduc": [0, 2, 23, 24, 32, 33, 41, 58, 59, 60, 78, 94, 95, 96, 97, 99, 101, 102, 106], "output": [0, 8, 12, 13, 15, 16, 23, 35, 36, 42, 45, 46, 47, 48, 51, 63, 64, 65, 66, 67, 69, 71, 74, 75, 89, 93, 97, 99, 101, 102, 104, 105, 107, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 140], "along": [0, 11, 36, 50, 58, 59, 60, 77, 90, 94, 108], "dimens": [0, 6, 7, 23, 24, 32, 33, 35, 36, 41, 42, 43, 46, 47, 48, 50, 51, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 90, 94, 108], "former": [0, 45, 138], "effici": 0, "make": [0, 6], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 5, 135], "perform": [0, 2, 8, 11, 16, 23, 34, 36, 50, 68, 69, 70, 71, 94, 95, 110, 114], "But": 0, "might": 0, "necessari": 0, "hand": [0, 94], "detail": [0, 24, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 52, 58, 59, 60, 135], "inform": [0, 8, 49, 101, 102, 138], "process": [0, 22, 24, 42, 63, 64], "arxiv": [0, 138], "1909": 0, "02549": 0, "becaus": [0, 7], "unit": [0, 7, 91, 92, 93, 94, 98, 100, 104, 105, 142], "relev": 0, "match": [0, 2, 6, 46, 47, 48, 68, 69, 70, 71, 91, 93, 98, 104, 105], "theoret": 0, "continu": [0, 112], "descript": [0, 135], "specifi": [0, 6, 7, 8, 13, 15, 22, 23, 25, 50, 53, 89, 90, 96, 99, 106, 107, 109, 124, 125, 137], "length": [0, 2, 7, 9, 17, 18, 19, 20, 24, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 67, 72, 73, 74, 75, 81, 91, 92, 93, 94, 95, 98, 100, 104, 105, 137, 138, 139, 140, 142], "given": [0, 10, 21, 22, 23, 24, 25, 51, 53, 66, 67, 74, 75, 94, 95, 97, 103, 112, 113, 114, 135, 138, 139, 142], "millisecond": [0, 24, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 80, 91, 94, 98, 104, 105], "On": 0, "step": [0, 3, 7, 16, 23, 24, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 91, 92, 93, 94, 95, 98, 100, 104, 105, 110, 137, 138, 139, 140, 142], "amount": [0, 9, 23, 32, 33, 36, 41, 43, 58, 59, 114, 137], "ha": [0, 5, 7, 10, 21, 22, 25, 26, 32, 35, 36, 41, 46, 47, 48, 78, 81, 83, 85, 87, 94, 106, 140, 142], "elaps": 0, "subtract": 0, "inclus": [0, 34], "bound": [0, 21, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 38, 60, 85, 135], "zero": [0, 36, 46, 47, 48, 90, 91, 92, 94, 98, 100, 104, 105, 114], "equal": [0, 2, 63, 64], "consid": [0, 2, 16, 68, 69, 70, 71, 91, 93, 94, 98, 104, 105, 110, 114, 139], "out": [0, 36, 37, 38, 85, 137], "therefor": [0, 6, 7, 94], "evenli": 0, "divis": 0, "simualt": [0, 32, 33, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 52], "practic": [0, 2], "round": 0, "up": 0, "next": [0, 7, 18, 32, 95], "integ": [0, 3, 6, 7], "phenomenon": 2, "rate": [2, 23, 24, 26, 27, 41, 42, 51, 60, 63, 64, 66, 67, 114, 137, 138, 139, 140], "quantiti": 2, "decreas": [2, 138], "proport": [2, 23, 137, 138, 139], "current": [2, 3, 6, 7, 16, 22, 24, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 52, 53, 58, 61, 68, 69, 70, 71, 72, 73, 74, 75, 79, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 97, 98, 100, 103, 104, 105, 110, 135, 137, 139, 140], "valu": [2, 6, 7, 8, 10, 11, 14, 15, 16, 17, 23, 24, 25, 26, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 65, 68, 69, 70, 71, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 98, 100, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 124, 138, 139, 140, 142], "It": [2, 7, 45, 140], "describ": [2, 135], "differenti": 2, "equat": 2, "tau": [2, 17, 24, 68, 69, 70, 71, 91, 92, 98, 104, 105], "frac": [2, 17, 18, 23, 32, 33, 36, 39, 41, 43, 44, 52, 58, 59, 63, 64, 68, 69, 70, 71, 73, 92, 112, 113, 114, 137, 138, 139, 140], "dn": 2, "dt": [2, 7, 24, 32, 33, 35, 36, 39, 40, 41, 43, 44, 46, 47, 48, 49, 52, 53, 91, 94, 98, 104, 105, 137, 138, 139, 140], "n": [2, 42, 46, 47, 48, 61, 62, 63, 64, 112, 113, 114], "solut": [2, 137, 138, 139], "t": [2, 16, 17, 18, 19, 20, 23, 24, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 51, 52, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 81, 91, 92, 98, 104, 105, 110, 116, 117, 118, 119, 120, 121, 122, 123, 137, 138, 139, 140, 142], "n_0": [2, 7, 23, 42, 46, 47, 48, 51, 58, 59, 60, 63, 64, 65, 66, 67, 85, 94], "e": [2, 5, 10, 14, 26, 27, 51, 65, 66, 67, 112, 113, 114, 140], "0": [2, 7, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 58, 59, 60, 76, 77, 81, 90, 91, 92, 93, 98, 100, 104, 105, 125, 137, 140, 142], "oft": 2, "neural": [2, 45], "network": [2, 45], "simul": [2, 3, 23, 24, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 58, 59, 60, 72, 73, 74, 75, 91, 94, 98, 104, 105, 138, 139, 140, 142], "involv": 2, "discret": [2, 7, 91, 94, 98, 104, 105, 114, 140, 142], "timestep": [2, 32], "those": [2, 5, 32, 35, 36, 46, 47, 48], "thei": [2, 5, 65], "often": [2, 137, 140], "appear": 2, "form": [2, 8, 10], "exp": [2, 17, 23, 24, 32, 33, 39, 41, 44, 59, 68, 69, 70, 71, 72, 91, 92, 98, 104, 105, 112, 113, 137, 138, 139, 140], "left": [2, 17, 23, 32, 33, 36, 39, 41, 43, 44, 48, 52, 58, 59, 60, 68, 69, 70, 71, 72, 73, 75, 92, 94, 112, 113, 137, 138, 139, 140], "right": [2, 17, 23, 32, 33, 36, 39, 41, 43, 44, 48, 52, 58, 59, 60, 68, 69, 70, 71, 72, 73, 75, 92, 94, 112, 113, 137, 138, 139, 140], "underli": [2, 7, 36, 92, 94, 96, 97, 99, 101, 102, 106, 139, 140], "wa": [2, 8, 9, 21, 22, 25, 32, 33, 39, 41, 43, 44, 52, 58, 59, 60], "solv": 2, "analyt": 2, "approxim": [2, 33, 39, 43, 52, 58, 60, 65, 73, 138, 140], "via": [2, 5], "euler": [2, 33, 39, 43, 52, 58, 60, 73], "method": [2, 5, 7, 10, 22, 24, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 58, 60, 63, 64, 65, 73, 83, 85, 87, 94, 95, 115], "both": 2, "repres": [2, 5, 6, 35, 38, 49, 53, 77, 81, 140], "select": [2, 7, 19, 20, 53, 85, 94, 96, 99], "term": [2, 60, 137, 139], "long": [2, 137], "live": 2, "correspond": [2, 10, 25, 32, 33, 39, 40, 41, 43, 44, 45, 49, 52, 58, 59, 60, 74, 75, 81, 112, 113], "under": [2, 7, 137, 140], "relat": [2, 94, 135, 140], "ne": 2, "k": [2, 23, 58, 59, 60, 61, 62, 69, 71, 104, 105, 114, 117, 119, 121, 123], "That": [2, 137], "after": [2, 7, 8, 9, 11, 21, 22, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 52, 53, 55, 56, 57, 58, 59, 60, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 97, 99, 101, 102, 106, 108, 138, 139, 140], "repeat": 2, "applic": [2, 91, 92, 93, 98, 100, 104, 105], "1": [2, 7, 16, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 60, 61, 62, 63, 64, 65, 81, 90, 92, 107, 110, 112, 113, 114, 135, 137, 138, 140, 142], "start": [2, 140], "To": [2, 12, 13, 15, 42, 63, 64, 89, 107, 124, 125, 138, 139], "outsid": [2, 94], "notion": 2, "life": 2, "we": [2, 10], "ln": 2, "b": [2, 16, 23, 35, 36, 42, 46, 47, 48, 51, 58, 59, 60, 63, 64, 65, 66, 67, 85, 106], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 114], "sometim": 2, "lambda": [2, 23, 114, 139], "context": [2, 138], "frequent": 2, "aris": 2, "care": 2, "histori": [2, 7, 91, 92, 93, 94, 95, 98, 100, 104, 105], "activ": [2, 6], "formal": 2, "sum": [2, 23, 24, 32, 33, 41, 43, 78], "previou": [2, 7, 17, 18, 20, 23, 37, 38, 85, 95, 100], "occur": [2, 11, 12, 23, 24, 34, 37, 38, 45, 50, 85, 114, 138, 139, 140, 142], "howev": 2, "purpos": [2, 104, 105], "comparison": 2, "grow": 2, "complex": [2, 14, 15, 16, 50, 68, 69, 70, 71, 90, 91, 98, 104, 105, 109, 110, 111], "quadrat": [2, 43, 52, 73, 135], "respect": [2, 24, 36, 46, 47, 48, 55, 97], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 22, 23, 69, 71, 139], "than": [2, 11, 22, 23, 26, 63, 64, 65, 69, 71, 139, 140], "everi": [2, 6, 7, 42, 63, 64], "prior": [2, 7, 9, 11, 12, 17, 18, 19, 20, 32, 40, 41, 44, 49, 68, 69, 81, 85, 91, 92, 93, 94, 95, 98, 100, 104, 105], "leav": [2, 139], "sort": [2, 6], "simplest": 2, "dx": 2, "x": [2, 14, 21, 24, 28, 29, 43, 46, 47, 48, 68, 69, 70, 71, 91, 92, 98, 104, 105, 110, 111, 112, 113, 142], "sum_f": 2, "f": [2, 24, 32, 36, 40, 41, 42, 44, 51, 63, 64, 65, 68, 69, 70, 71, 81, 91, 98, 104, 105], "amplitud": [2, 21, 25, 26, 27, 28, 29, 30, 31, 68, 69, 70, 71, 91, 98, 104, 105], "construct": [2, 8, 13, 15, 37, 38, 53, 54, 89, 96, 97, 99, 101, 102, 106, 107, 124, 125], "evalu": [2, 8, 11, 32, 33, 41, 43], "otherwis": [2, 10, 19, 32, 35, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 51, 68, 69, 70, 71, 81, 91, 96, 98, 99, 104, 105], "interpret": 2, "follow": [2, 3, 7, 8, 51, 66, 67, 85, 92, 94, 112, 113, 137, 139], "whenev": 2, "add": [2, 10, 11, 22, 24, 68, 69, 71, 91, 104], "four": [2, 7, 8, 24], "variant": [2, 37, 38, 135], "discuss": 2, "below": [2, 138, 140], "featur": 2, "beyond": 2, "just": 2, "being": [2, 10, 23, 27, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 51, 52, 63, 64, 65, 66, 67, 77, 96, 97, 99, 101, 102, 106, 137], "previous": [2, 11, 12, 34, 50, 94], "come": 2, "fact": 2, "factor": [2, 16, 92, 110, 140], "x_": [2, 16, 24, 68, 69, 70, 71, 91, 92, 98, 104, 105, 110, 137], "begin": [2, 16, 19, 21, 24, 28, 29, 32, 33, 36, 37, 38, 40, 41, 43, 44, 68, 69, 70, 71, 81, 91, 92, 98, 104, 105, 110, 137, 138, 139, 140, 142], "x_t": [2, 68, 69, 70, 71, 91, 98, 104, 105], "lvert": [2, 68, 70, 91, 98], "f_": [2, 24, 32, 40, 41, 44, 68, 69, 70, 71, 81, 91, 98, 104, 105, 137], "rvert": [2, 68, 70, 91, 98], "leq": [2, 68, 70, 91, 98, 112, 113, 114], "epsilon": [2, 68, 70, 90, 91, 98], "text": [2, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 91, 98, 104, 105, 112, 113, 114, 137, 138, 139, 140, 142], "here": [2, 11, 12, 135], "target": [2, 7, 10, 68, 70, 91, 96, 97, 98, 99, 101, 102, 106, 112, 113], "permiss": 2, "error": [2, 10], "For": [2, 9, 11, 24, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 43, 44, 52, 58, 59, 60, 61, 62, 91, 92, 98, 104, 105, 106], "set": [2, 6, 7, 8, 13, 15, 32, 33, 36, 41, 42, 43, 46, 47, 51, 58, 59, 60, 63, 64, 68, 70, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 98, 100, 104, 105, 107, 124, 125, 137, 139, 140], "unspecifi": [2, 6, 115], "test": [2, 6, 69, 71, 91, 93, 98, 104, 105, 112, 113, 114], "wherea": 2, "chang": [2, 5, 10, 24, 35, 36, 46, 47, 48, 76, 77, 92, 137, 138, 142], "addit": [2, 22, 36, 41, 42, 46, 47, 48, 63, 64, 69, 71, 75, 138, 139], "replac": [2, 37, 38, 45, 85], "modifi": [2, 6, 8, 13, 15, 21, 25, 26, 89, 96, 97, 99, 101, 102, 106, 107, 109, 124, 125], "onli": [2, 5, 6, 8, 10, 11, 12, 34, 36, 37, 50, 94, 96], "most": [2, 7, 9, 17, 18, 19, 20, 24, 35, 36, 42, 46, 47, 48, 63, 64, 91, 92, 93, 94, 95, 98, 100, 104, 105, 137, 138], "recent": [2, 7, 9, 17, 18, 19, 20, 24, 35, 36, 46, 47, 48, 91, 92, 93, 94, 95, 98, 100, 104, 105, 137], "event": [2, 93, 114], "chosen": 2, "depend": [2, 8, 21, 24, 25, 28, 29, 30, 31, 32, 35, 36, 45, 46, 47, 48, 59, 60, 62, 76, 77, 99, 135, 139], "desir": [2, 50, 90, 112, 113], "properti": [2, 6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 25, 26, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 91, 94, 97, 98, 104, 105, 107, 109, 112, 113, 114, 124, 125, 139], "formul": 2, "abov": [2, 33, 39, 138, 140], "ani": [2, 3, 5, 7, 8, 10, 11, 12, 35, 36, 38, 46, 47, 48, 55, 56, 94, 95, 97, 99, 101, 102, 115, 139, 140, 142], "exactli": 2, "toler": [2, 7, 68, 69, 70, 71, 85, 91, 94, 98], "meet": [2, 7], "criterion": [2, 93, 104, 105], "compon": [2, 69, 71, 138, 139], "ad": [2, 6, 7, 22, 24, 36, 42, 55, 56, 57, 63, 64, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94], "sf": [2, 69, 71, 104, 105], "hold": 2, "align": [2, 16, 32, 33, 36, 41, 43, 92, 110, 137, 138, 139, 140], "neq": [2, 24, 142], "int_": 2, "infti": [2, 32, 41, 62, 138, 139, 140], "theta": [2, 21, 28, 29, 32, 41, 74, 75, 137, 138, 139, 140], "neg": [2, 6], "argument": [2, 6, 7, 8, 9, 11, 12, 22, 23, 27, 35, 36, 45, 46, 47, 48, 94, 97, 101, 102, 112, 113, 114], "posit": [2, 6, 7, 45], "geq": [2, 21, 28, 29, 74, 75], "deriv": [2, 83, 85, 87, 112, 140], "d": [2, 7, 85, 94, 138, 139], "And": [2, 36, 137], "integr": [2, 32, 33, 39, 40, 41, 44, 49, 52, 53, 69, 71, 72, 73, 135, 142], "kind": 3, "absolut": [3, 32, 33, 39, 40, 41, 43, 44, 52, 58, 59, 60, 68, 70, 72, 73, 74, 75, 81, 91, 98], "arp": [3, 32, 40, 41, 44, 81], "rel": [3, 9, 17, 18, 19, 20, 91, 92, 93, 95, 98, 100, 104, 105, 112, 113], "rrp": 3, "cannot": [3, 6, 7, 10, 21, 25, 76, 77, 138], "presynapt": [3, 24, 32, 33, 37, 38, 39, 40, 41, 43, 44, 52, 61, 72, 73, 74, 75, 137, 138, 139, 142], "doe": [3, 6, 45, 83, 87, 114, 142], "affect": [3, 69, 71, 135], "depolar": [3, 140], "repolar": 3, "hyperpolar": 3, "mean": [3, 24, 32, 33, 41, 78, 96, 97, 99, 101, 102, 106, 112, 113, 114], "while": [3, 32, 33, 39, 40, 41, 43, 44, 52, 74, 75], "difficult": 3, "fire": [3, 32, 33, 39, 40, 41, 44, 52, 62, 135, 138], "imposs": 3, "time": [3, 7, 9, 16, 17, 18, 19, 20, 23, 24, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 114, 135, 138, 139, 140, 142], "voltag": [3, 32, 33, 39, 40, 41, 43, 44, 49, 52, 58, 59, 60, 62, 72, 73, 74, 75, 82, 135, 139, 140], "reset": [3, 7, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 60, 74, 75, 94, 138, 139, 140], "determin": [3, 13, 15, 36, 46, 47, 48, 66, 89, 91, 98, 107, 109, 115, 124, 125], "strongli": 3, "sourc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "map": [5, 45, 94, 96, 99, 101, 102], "unpack": [5, 96], "function": [5, 7, 8, 9, 10, 11, 12, 14, 24, 27, 32, 33, 37, 38, 41, 43, 53, 58, 59, 60, 69, 71, 74, 75, 78, 85, 89, 93, 94, 97, 101, 102, 104, 105, 111, 112, 113, 114, 124, 137, 142], "conjunct": 5, "attr": [5, 106], "librari": [5, 7], "wrap": 5, "_asadict_": 5, "dict": [5, 6, 8, 10, 11, 45, 97, 112, 113, 114], "str": [5, 6, 7, 8, 10, 11, 22, 34, 45, 49, 50, 97, 106, 112, 113, 114], "field": [5, 139, 140], "converet": 5, "dictionari": [5, 6, 10, 45], "flatten": 5, "nest": [5, 106], "object": [5, 8, 9, 10, 12, 22, 45, 54, 57, 76, 78, 79, 80, 82, 84, 85, 88], "own": 5, "If": [5, 7, 8, 11, 22, 23, 25, 26, 32, 33, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 52, 55, 58, 59, 60, 63, 64, 78, 96, 99, 115], "conflict": [5, 45], "one": [5, 8, 24, 32, 33, 41, 43, 47, 48, 78, 96, 118, 119, 120, 121, 122, 123, 137, 138], "preserv": [5, 32, 33, 41, 43, 94], "overridden": [5, 22], "return": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "packag": 5, "attribut": [5, 6, 7, 23, 34, 50, 77, 78, 81, 85, 106, 140], "were": [5, 22, 23, 24], "regist": [5, 6, 7, 8, 10, 11, 12, 22, 34, 35, 36, 46, 47, 50, 55, 56, 57, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 96, 97, 99, 101, 102, 106], "constraint": [6, 7, 76, 77, 94], "tupl": [6, 13, 15, 16, 22, 23, 24, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 74, 75, 77, 78, 89, 90, 96, 101, 102, 107, 108, 112, 113, 115, 124, 125], "int": [6, 7, 13, 14, 15, 16, 23, 24, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 66, 67, 68, 69, 70, 71, 76, 77, 78, 89, 90, 91, 98, 104, 105, 107, 108, 109, 110, 111, 124, 125], "support": [6, 36, 37, 38, 46, 47, 48, 53, 54], "dimension": [6, 36], "constrain": [6, 7, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "buffer": [6, 7, 10, 76, 85], "dim": [6, 49, 50, 53, 54, 76, 77, 90, 108], "size": [6, 7, 13, 15, 23, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 67, 76, 77, 85, 89, 107, 124, 125], "rais": [6, 7, 8, 10, 14, 21, 22, 25, 26, 35, 49, 53, 95, 138], "valueerror": [6, 7, 26], "must": [6, 7, 8, 10, 22, 25, 26, 35, 36, 38, 46, 47, 48, 49, 53, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 69, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 99, 104, 105], "number": [6, 7, 14, 23, 35, 36, 42, 46, 47, 48, 51, 58, 59, 60, 63, 64, 65, 66, 67, 77, 85, 89, 94, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124], "element": [6, 7, 23, 36, 46, 47, 48, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 90, 91, 93, 98, 104, 105, 115], "runtimeerror": [6, 7, 8, 21, 25], "2": [6, 36, 41, 112, 113, 114, 135, 140], "first": [6, 37, 38, 61, 62, 63, 65, 66, 139], "second": [6, 139], "assign": [6, 10, 23, 24, 25, 26, 32, 41, 48, 78], "invalid": [6, 10], "reconstrain": 6, "bool": [6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 55, 56, 57, 63, 64, 68, 69, 70, 71, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 112, 113, 114, 124, 125], "torch": [6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 125], "classmethod": [6, 37, 38, 53, 112, 113, 114], "compatible_": 6, "compatible_lik": 6, "like": [6, 10, 13, 15, 24, 32, 33, 35, 36, 41, 43, 46, 47, 48, 53, 78, 89, 107, 109, 124, 125, 135], "none": [6, 7, 8, 11, 12, 13, 15, 16, 21, 22, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 47, 48, 50, 51, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 78, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 124, 125], "option": [6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 25, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 60, 63, 64, 65, 66, 67, 68, 70, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 124, 125], "default": [6, 7, 8, 11, 12, 13, 15, 22, 23, 24, 25, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 74, 75, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 124, 125], "insuffici": 6, "contain": [6, 16, 45, 74, 75], "nonposit": 6, "compatibl": 6, "compatible_like_": 6, "against": 6, "result": [6, 7, 23, 35, 36, 91, 92, 93, 94, 98, 100, 101, 102, 104, 105, 112, 113, 114], "low": 6, "high": 6, "increas": [6, 32, 33, 39, 41, 43, 52, 58, 59, 73, 138, 140], "order": [6, 50, 90, 94, 137], "constraints_repr": 6, "string": [6, 10, 34, 50], "represent": 6, "underscor": 6, "deregister_constrain": [6, 7], "deregist": [6, 8, 22], "fulli": [6, 10, 34, 50], "qualifi": [6, 10, 34, 50], "mindim": 6, "requir": [6, 9, 13, 15, 21, 22, 24, 25, 26, 36, 55, 56, 57, 69, 71, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 94, 107, 109, 124, 125], "static": 6, "mindims_": 6, "edit": 6, "exist": [6, 10, 22, 23, 32, 45, 94], "reshap": [6, 35, 36, 46, 47, 48], "accordingli": [6, 114], "remov": [6, 11], "new": [6, 7, 23, 24, 25, 26, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 68, 69, 70, 71, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 91, 94, 98, 104, 105], "had": 6, "extern": [6, 142], "longer": 6, "incompat": [6, 7], "register_constrain": [6, 7], "attributeerror": [6, 7, 10], "step_tim": [7, 17, 18, 19, 20, 24, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 67, 72, 73, 74, 75, 91, 92, 93, 94, 95, 98, 100, 103, 104, 105, 140], "float": [7, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 90, 91, 92, 93, 94, 95, 98, 100, 104, 105, 108, 109, 110, 111, 112, 113, 114], "history_len": [7, 91, 92, 93, 94, 95, 98, 100, 103, 104, 105], "dimensionalmodul": [7, 49, 76, 77, 79, 80, 81, 82], "keep": [7, 24, 32, 33, 41, 43, 78], "track": 7, "store": [7, 10, 22, 23, 24, 48, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106], "nonneg": [7, 63, 64, 65, 66, 67], "unconstrain": 7, "impli": [7, 138], "freed": 7, "other": [7, 10, 11, 23, 34, 50, 96, 99, 101, 102, 106, 139], "self": [7, 94], "hlen": [7, 94], "offset": [7, 35, 36, 46, 47, 48], "latest_first": 7, "true": [7, 8, 11, 12, 22, 23, 32, 33, 34, 39, 40, 41, 42, 43, 44, 50, 51, 52, 63, 64, 96, 97, 99, 101, 102, 106, 114], "retriev": [7, 22, 85, 94], "record": [7, 94, 96, 97, 99, 103, 106], "window": 7, "index": [7, 35, 36, 46, 47, 48, 94], "tick": 7, "back": [7, 139], "zeroth": 7, "fals": [7, 11, 12, 22, 23, 24, 34, 36, 37, 38, 42, 46, 47, 48, 50, 51, 55, 56, 57, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 94, 96, 99, 101, 102, 106], "observ": [7, 9, 17, 18, 19, 20, 24, 37, 38, 68, 69, 70, 71, 85, 91, 92, 93, 94, 95, 97, 98, 100, 103, 104, 105, 106, 112, 113], "hsize": 7, "slice": [7, 42, 51, 64, 67], "latest": [7, 16, 68, 69, 70, 71, 98, 105, 110], "By": [7, 11], "correct": 7, "configur": 7, "normal": [7, 11, 23, 34, 108, 112, 142], "circumst": 7, "pushto": 7, "insert": 7, "befor": [7, 8, 10, 22, 34, 36, 48, 50, 85, 94, 95, 96, 97, 99, 101, 102, 106, 108, 138, 140], "been": [7, 94], "sinc": [7, 11, 42, 63, 64, 93], "last": [7, 32, 35, 36, 40, 41, 44, 46, 47, 48, 49, 58, 59, 60, 81, 93, 94, 142], "data": [7, 9, 13, 15, 17, 18, 19, 20, 22, 24, 35, 36, 46, 47, 48, 78, 79, 82, 89, 90, 91, 92, 93, 94, 95, 98, 100, 104, 105, 107, 108, 109, 124, 125], "advanc": 7, "push": [7, 94, 103], "uniniti": [7, 13], "final": 7, "interpol": [7, 17, 18, 19, 20, 37, 38, 85, 91, 92, 93, 94, 95, 98, 100, 104, 105], "1e": [7, 90, 94], "07": [7, 94, 138], "maximum": [7, 23, 24, 25, 26, 36, 37, 38, 42, 46, 47, 48, 51, 53, 54, 65, 85, 94, 108], "onsid": 7, "7": [7, 94], "cdot": [7, 23, 36, 42, 46, 47, 48, 51, 58, 59, 60, 63, 64, 65, 66, 67, 85, 94, 137], "ldot": [7, 23, 42, 46, 47, 48, 51, 58, 59, 60, 63, 64, 65, 66, 67, 94], "enforc": [7, 45, 94], "gather": [7, 23, 94], "take": [7, 11, 45, 65, 83, 87, 96, 99, 111, 116, 117, 118, 119, 120, 121, 122, 123, 137], "nearest": [7, 19, 24, 37, 38, 98, 105], "produc": 7, "scalar": [7, 13, 15, 89, 107, 112, 113, 114, 115, 124, 125], "within": [7, 10], "without": [7, 22, 26, 27, 69, 71, 138, 139, 140], "ever": 7, "attempt": [7, 32, 41, 78], "regardless": [7, 12], "pass": [7, 8, 11, 12, 21, 22, 24, 25, 26, 32, 33, 35, 36, 41, 43, 45, 46, 47, 48, 78, 94, 96, 97, 101, 102, 142], "overwritten": 7, "exact": [7, 93], "manual": [7, 76, 77], "increment": 7, "specif": [7, 10, 112, 140], "prehook": [8, 12, 96, 97, 102, 106], "callabl": [8, 9, 11, 12, 24, 27, 32, 33, 41, 43, 78, 94, 97, 99, 101, 102, 115, 116, 117, 118, 119, 120, 121, 122, 123], "posthook": [8, 97, 99, 101, 106], "prehook_kwarg": [8, 97], "posthook_kwarg": [8, 97], "train_upd": [8, 12, 34, 50, 96, 97, 99, 101, 102, 106], "eval_upd": [8, 12, 34, 50, 96, 97, 99, 101, 102, 106], "forward": [8, 11, 12, 22, 23, 24, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 94, 96, 97, 99, 101, 102, 103, 106], "itself": [8, 11, 12, 35, 36, 46, 47, 48], "nn": [8, 10, 11, 12, 34, 50], "register_forward_hook": [8, 97, 101], "manag": [8, 22, 74, 75, 76, 77, 85], "removablehandl": 8, "keyword": [8, 9, 11, 22, 27, 35, 36, 45, 46, 47, 48, 97, 101, 102], "register_forward_pre_hook": [8, 97, 102], "run": [8, 11, 12, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 52, 53], "train": [8, 11, 12, 22, 32, 33, 34, 41, 42, 43, 45, 50, 51, 63, 64, 65, 66, 67, 96, 97, 99, 101, 102, 106, 135], "mode": [8, 11, 12, 32, 33, 34, 37, 38, 41, 43, 49, 50, 96, 97, 99, 101, 102, 106], "eval": [8, 12, 22, 34, 50, 96, 97, 99, 101, 102, 106], "signatur": [8, 21, 25, 26, 37, 38, 53], "arg": [8, 9, 10, 11, 27, 53, 54, 97, 103, 116, 117, 118, 119, 120, 121, 122, 123], "Or": 8, "with_kwarg": [8, 101, 102], "kwarg": [8, 9, 10, 11, 22, 24, 27, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 94, 97, 103, 116, 117, 118, 119, 120, 121, 122, 123], "see": [8, 89, 97, 101, 102, 124, 139, 140], "further": 8, "least": 8, "typeerror": [8, 10, 25], "instanc": [8, 10, 106], "alreadi": [8, 24], "on_ev": 8, "on_train": 8, "three": 8, "init": [8, 68, 69, 70, 71], "pytorch": [8, 10, 24, 32, 33, 41, 43, 78, 114], "warn": 8, "runtimewarn": 8, "ignor": [8, 12], "registr": [8, 22], "protocol": [9, 27, 54, 116, 117, 118, 119, 120, 121, 122, 123], "prev_data": [9, 17, 18, 19, 20, 91, 92, 93, 95, 98, 100, 104, 105], "next_data": [9, 17, 18, 19, 20, 91, 92, 93, 95, 98, 100, 104, 105], "subsequ": [9, 17, 18, 19, 20, 38, 91, 92, 93, 95, 98, 100, 104, 105], "sample_at": [9, 17, 18, 19, 20, 91, 92, 93, 95, 98, 100, 104, 105], "step_data": [9, 17, 18, 19, 20, 91, 92, 93, 95, 98, 100, 104, 105], "measur": [9, 94], "interp_previ": 9, "interp_nearest": [9, 94], "interp_linear": 9, "interp_exp_decai": 9, "partial": [9, 27, 36, 37, 38, 46, 47, 48, 53], "fill": [9, 15, 27, 89, 91, 92, 93, 95, 98, 100, 104, 105, 107, 109, 124, 125], "extens": 10, "so": [10, 92, 142], "extra": [10, 49], "similar": [10, 24, 32, 33, 41, 43, 69, 71, 78], "regular": [10, 11], "g": [10, 26, 27], "enabl": 10, "simpl": [10, 61, 62, 110], "export": 10, "__init__": 10, "made": [10, 94], "parent": 10, "child": 10, "constructor": [10, 36, 37, 38, 46, 47, 48, 53, 54, 55, 56, 57, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "get_extra": 10, "throw": 10, "similarli": 10, "get_submodul": 10, "look": 10, "referenc": 10, "refer": [10, 24, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 52, 58, 59, 60, 115, 135, 137], "path": 10, "termin": 10, "resolv": 10, "someth": 10, "get_extra_st": 10, "state_dict": [10, 22], "set_extra_st": 10, "your": 10, "build": [10, 45], "note": [10, 139, 142], "picklabl": 10, "work": [10, 96, 99, 135], "serial": 10, "backward": 10, "guarante": [10, 45], "break": 10, "pickl": 10, "register_extra": 10, "manner": [10, 95], "register_buff": 10, "except": [10, 11, 12, 34, 50, 69, 71, 139], "limit": [10, 24, 32, 33, 37, 38, 41, 43, 78, 85], "access": 10, "load_state_dict": 10, "hook": [11, 12, 22, 34, 50, 97, 101, 102, 106], "inner_train_upd": 11, "inner_eval_upd": 11, "as_prehook": [11, 12, 34, 50, 106], "prepend": [11, 12, 24, 34, 50, 96, 99, 101, 102, 106], "always_cal": [11, 12, 34, 50], "statehook": [11, 34, 50], "act": [11, 12], "inner": [11, 36, 46, 47, 48], "associ": [11, 22, 24, 42, 51], "trigger": [11, 12, 138, 139, 140], "layer": [11, 22, 24], "__call__": [11, 12], "even": [11, 12, 34, 50, 106], "whether": 11, "alter": [11, 36, 46, 47, 94], "add_inn": 11, "innerhook": 11, "condition": 11, "on_eval_inn": 11, "on_train_inn": 11, "remove_inn": 11, "singl": [12, 45, 94, 96, 99], "dtype": [13, 15, 89, 93, 104, 105, 107, 109, 112, 113, 114, 124, 125], "layout": [13, 15, 22, 24, 89, 107, 109, 124, 125], "devic": [13, 15, 89, 107, 109, 124, 125], "requires_grad": [13, 15, 55, 56, 57, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 107, 109, 124, 125], "overrid": [13, 15, 23, 89, 107, 109, 124, 125], "gradient": [13, 15, 55, 56, 57, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 107, 109, 124, 125], "ndarrai": [14, 111], "agnost": [14, 111], "exponenti": [14, 16, 17, 24, 32, 33, 39, 41, 42, 43, 44, 52, 58, 59, 60, 63, 64, 68, 69, 70, 71, 72, 73, 91, 92, 98, 104, 105, 110, 135, 138], "y": [14, 46, 47, 48, 111, 139], "numpi": [14, 111], "ob": [16, 91, 92, 93, 95, 98, 100, 104, 105, 110], "level": [16, 110], "trend": 16, "alpha": [16, 92, 110], "beta": 16, "holt": 16, "linear": [16, 32, 46, 47, 48, 58, 59, 60, 61, 62, 72, 92, 135, 140], "smooth": [16, 92, 110], "s_0": [16, 92, 110], "x_0": [16, 92, 110], "b_0": 16, "x_1": 16, "s_": [16, 92, 110], "s_t": [16, 92, 110], "b_": 16, "b_t": 16, "revis": [16, 110], "time_const": [17, 39, 40, 44, 52, 58, 59, 72, 73, 91, 98, 104, 105], "decai": [17, 23, 24, 32, 33, 39, 41, 43, 44, 52, 58, 59, 60, 68, 69, 70, 71, 72, 73, 91, 98, 104, 105, 138, 139], "d_": [17, 18, 19, 20, 137], "constant": [17, 24, 32, 33, 39, 41, 43, 44, 52, 58, 59, 60, 72, 73, 91, 92, 98, 104, 105, 137, 138, 139, 140], "linearlli": 18, "wmin": [21, 25, 26], "wmax": [21, 25, 26], "weightdepend": [21, 25], "hard": [21, 24, 28, 29, 135], "lower": [21, 24, 25, 26, 28, 30, 34, 60, 137, 138], "w_": [21, 25, 36, 137], "min": [21, 25, 28, 30, 34, 108, 137], "upper": [21, 25, 26, 29, 31, 34, 137], "max": [21, 24, 25, 29, 31, 32, 33, 34, 41, 43, 60, 78, 108, 137, 138], "a_": [21, 24, 25, 28, 29, 30, 31, 137], "w": [21, 24, 25, 28, 29, 30, 31, 36, 46, 47, 48, 137], "eta_": [21, 24, 25, 28, 29, 30, 31, 137], "exclud": [21, 22, 23, 25, 28, 29, 30, 31, 35, 36, 46, 47, 48, 49, 53, 54, 77], "updatebound": [21, 24, 25, 26], "abc": [22, 26, 35, 49, 53, 95, 103], "interdepend": 22, "attach": 22, "detach": 22, "monitor": [22, 24, 96, 99, 101, 102, 106, 138], "_register_state_dict_hook": 22, "add_monitor": [22, 24], "trainabl": [22, 24], "identifi": 22, "successfulli": [22, 24], "abstract": [22, 26, 35, 49, 53, 95, 103], "notimplementederror": [22, 26, 35, 49, 53, 95], "add_train": 22, "clear": [22, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 94, 97, 103], "submodul": [22, 45], "delet": [22, 35, 36, 46, 47, 48], "well": [22, 25, 56, 135], "del_monitor": 22, "dentifi": 22, "del_train": 22, "get_monitor": 22, "yield": [22, 42, 51, 64, 67], "captur": 22, "num_class": 23, "classifi": 23, "per": [23, 36, 85], "intern": [23, 48, 77], "calcul": [23, 24, 95, 139], "learn": [23, 24, 26, 27, 32, 33, 35, 36, 41, 43, 46, 47, 48], "multipli": [23, 69, 71, 139], "them": [23, 81, 96, 97, 99, 101, 102, 106, 135], "b_k": [23, 33, 43, 58, 60, 138, 140], "group": [23, 32, 33, 35, 37, 38, 39, 40, 41, 43, 44, 45, 49, 52, 53, 54, 58, 59, 60, 77], "total": [23, 138, 139, 140, 142], "possibl": [23, 94], "decay_r": 23, "scale": [23, 42, 50, 51, 66, 67, 69, 71, 90, 104, 105, 112, 113], "logit": 23, "label": 23, "infer": 23, "truth": 23, "predict": 23, "averag": [23, 58, 59, 60, 92], "nclass": 23, "ndim": 23, "l_1": 23, "raw": 23, "recalcul": 23, "lr_post": 24, "lr_pre": 24, "tc_post": 24, "tc_pre": 24, "delai": [24, 35, 36, 37, 38, 46, 47, 48, 53, 54, 55, 85, 135], "interp_toler": 24, "trace_mod": 24, "liter": [24, 37, 38], "cumul": [24, 91, 104, 112, 113, 114], "wd_lower": 24, "wd_upper": 24, "batch_reduct": [24, 32, 33, 41, 43, 78], "layerwiseupdat": 24, "plastic": [24, 135], "delta": [24, 32, 33, 37, 38, 39, 41, 42, 43, 44, 51, 52, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 72, 73, 91, 92, 98, 104, 105, 135, 137, 138, 139, 140], "bigl": 24, "post": [24, 35, 36, 46, 47, 48, 137], "bigr": 24, "trace": [24, 68, 69, 70, 71, 91, 98, 104, 105, 135], "vari": 24, "qquad": [24, 112, 113], "m": [24, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 67, 72, 73, 74, 75, 80, 81, 85, 138, 139, 140, 142], "postsynapt": [24, 32, 35, 40, 41, 44, 49, 58, 59, 60, 81, 137, 138], "ltp": [24, 26, 137], "ltd": [24, 26, 137], "tau_": [24, 137], "assum": [24, 32, 35, 36, 41, 46, 47, 48, 78, 94], "co": [24, 37, 38, 85], "origin": [24, 32, 33, 41, 43, 78, 94], "visit": [24, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 43, 44, 52, 58, 59, 60, 61, 62], "soft": [24, 25, 30, 31, 135], "zoo": [24, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 43, 44, 52, 58, 59, 60, 61, 62], "spike_post": 24, "spike_pr": 24, "trace_post": 24, "trace_pr": 24, "fail": [24, 94], "lrpost": 24, "lrpre": 24, "depress": [24, 28, 30, 137, 138], "minpow": 25, "maxpow": 25, "expon": [25, 30, 31], "mu_": [25, 30, 31, 137], "power": [25, 30, 31, 137], "effect": [25, 26, 36, 46, 47, 138, 140], "magnitud": [26, 137, 138], "hasmax": 26, "hasmin": 26, "power_upper_bound": 27, "power_lower_bound": 27, "hard_upper_bound": 27, "hard_lower_bound": 27, "v_": [28, 29, 30, 31, 32, 33, 39, 41, 43, 44, 52, 58, 60, 72, 73, 74, 75, 138, 139, 140], "v": [28, 29, 30, 31], "rest_v": [32, 33, 39, 40, 41, 43, 44, 52, 58, 60, 72, 73, 75], "reset_v": [32, 33, 39, 40, 43, 44, 52, 74], "thresh_eq_v": [32, 41, 140], "refrac_t": [32, 33, 39, 40, 41, 43, 44, 52, 74, 75, 81], "tc_membran": [32, 33, 41, 43], "tc_adapt": [32, 33, 43], "spike_incr": [32, 33, 41, 43, 58, 59], "resist": [32, 33, 39, 40, 41, 43, 44, 52, 72, 73, 139], "batch_siz": [32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 52, 53, 54, 76, 77], "adaptationmixin": [32, 33, 41, 43], "voltagemixin": [32, 33, 39, 40, 41, 43, 44, 52], "spikerefractorymixin": [32, 33, 39, 40, 41, 43, 44, 52], "leaki": [32, 40, 41, 44, 135], "dynam": [32, 33, 37, 38, 39, 40, 41, 43, 44, 49, 52, 53, 72, 73, 74, 75, 138, 139, 140], "v_m": [32, 33, 39, 41, 43, 44, 52, 58, 60, 72, 73, 74, 75, 138, 139, 140], "rest": [32, 33, 37, 38, 39, 40, 41, 43, 44, 45, 49, 52, 53, 58, 60, 72, 73, 75, 138, 139, 140], "r_mi": [32, 33, 39, 41, 43, 44, 52, 72, 73, 139, 140], "tau_m": [32, 33, 39, 41, 43, 44, 52, 72, 73, 139, 140], "theta_": [32, 41, 60, 62, 138, 139, 140], "sum_k": [32, 33, 41, 43, 138, 139, 140], "theta_k": [32, 41, 59, 60, 62, 138, 139], "tau_k": [32, 33, 43, 58, 59, 68, 69, 70, 71, 138, 139, 140], "leftarrow": [32, 33, 39, 41, 43, 44, 52, 58, 59, 60, 74, 75, 138, 139, 140], "d_k": [32, 41, 43, 138, 139, 140], "equilibrium": [32, 33, 39, 41, 43, 44, 52, 58, 60, 62, 72, 73, 75, 138, 139, 140], "mv": [32, 33, 39, 41, 43, 44, 52, 58, 59, 60, 62, 72, 73, 74, 75, 82, 138, 139, 140], "refractori": [32, 33, 39, 40, 41, 42, 43, 44, 49, 52, 58, 59, 60, 63, 64, 66, 67, 72, 73, 74, 75, 80, 81], "period": [32, 33, 39, 40, 41, 42, 43, 44, 49, 52, 58, 59, 60, 63, 64, 66, 67, 72, 73, 74, 75, 80, 81], "r_m": [32, 33, 39, 41, 43, 44, 52, 72, 73, 139], "omega": [32, 33, 39, 41, 43, 44, 52, 72, 73, 139], "keep_adapt": [32, 33, 41, 43], "refrac_lock": [32, 33, 39, 40, 41, 43, 44, 52], "na": [32, 33, 39, 40, 41, 43, 44, 52, 58, 61, 72, 73, 74, 75, 79, 83, 84, 86, 138, 139, 140, 142], "setter": [32, 41, 48, 78, 83, 87], "additon": [32, 41, 78], "lead": [32, 41, 78], "unreduc": [32, 41, 78], "bsize": [32, 35, 36, 40, 41, 44, 46, 47, 48, 49, 76, 77], "refrac": [32, 40, 41, 42, 44, 49, 58, 59, 60, 63, 64, 74, 75, 80, 81], "t_": [32, 40, 41, 44, 81, 137], "millivolt": [32, 40, 41, 44, 49, 82], "rheobase_v": [33, 39], "sharp": [33, 39, 140], "thresh_v": [33, 39, 40, 43, 44, 52, 74, 75, 140], "voltage_coupl": [33, 43, 58], "delta_t": [33, 39, 140], "v_t": [33, 39, 140], "i_x": [33, 38, 43, 138, 140, 142], "w_k": [33, 43, 58, 61, 138, 140], "a_k": [33, 58, 59, 60, 138, 140], "approach": [33, 39, 140], "rapidli": [33, 39], "steep": [33, 39, 140], "natur": [33, 39, 43, 52, 73, 112, 113, 114], "rheobas": [33, 39, 140], "strength": [33, 43, 52, 58, 73], "coupl": [33, 43, 58, 138, 140], "mu": [33, 43, 58, 112, 113, 138, 139, 140], "rang": [34, 94], "synaps": [35, 36, 37, 38, 45, 46, 47, 48, 54, 83, 84, 85, 86, 87, 88], "bia": [35, 36, 46, 47, 48, 55, 56], "learnabl": [35, 36, 46, 47, 48, 55, 56, 57], "binshap": [35, 36, 46, 47, 48], "boutshap": [35, 36, 46, 47, 48], "clearabl": [35, 36, 46, 47, 48], "delayedbi": [35, 36, 46, 47, 48], "maxmimum": [35, 36, 46, 47, 48], "valid": [35, 36, 46, 47, 48, 112, 113, 114], "compos": [35, 45], "py": [35, 36, 46, 47, 48], "meth": [35, 36, 46, 47, 48], "inshap": [35, 36, 46, 47, 48], "insiz": [35, 36, 46, 47, 48], "cach": [35, 36, 46, 47, 48], "refresh": [35, 36, 46, 47, 48], "like_input": [35, 36, 46, 47, 48], "syncurr": [35, 36, 46, 47, 48], "synspik": [35, 36, 46, 47, 48], "like_synapt": [35, 36, 46, 47, 48], "outshap": [35, 36, 46, 47, 48], "outsiz": [35, 36, 46, 47, 48], "postsyn_recept": [35, 36, 46, 47, 48], "l": 35, "presyn_recept": [35, 36, 46, 47, 48], "selector": [35, 36, 37, 38, 46, 47, 48, 53, 85], "synapt": [35, 36, 37, 38, 46, 47, 48, 53, 83, 84, 85, 86, 87], "height": 36, "width": 36, "channel": 36, "filter": [36, 45], "kernel": 36, "stride": 36, "pad": 36, "dilat": 36, "synapseconstructor": [36, 37, 38, 46, 47, 48, 53], "weight_init": [36, 46, 47, 48], "onetoon": [36, 46, 47, 48, 69, 71, 74, 75, 93, 94, 104, 105], "bias_init": [36, 46, 47, 48], "delay_init": [36, 46, 47, 48], "weightbiasdelaymixin": [36, 46, 47, 48], "connect": [36, 45, 46, 47, 48, 53, 54, 55, 56, 57, 137], "convolut": 36, "spatial": 36, "plane": 36, "expect": [36, 42, 45, 46, 47, 48, 51, 63, 64, 65, 66, 67, 96, 99, 112, 113, 114], "c": 36, "h": 36, "kh": 36, "kw": 36, "delay_": [36, 46, 47, 55], "creat": [36, 46, 47, 55, 56, 57, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88], "unless": [36, 46, 47], "later": [36, 46, 47], "uniform": [36, 46, 47, 48], "random": [36, 46, 47, 48, 89, 112, 113, 114, 124], "interv": [36, 42, 46, 47, 48, 51, 63, 64, 66, 67], "rand": [36, 46, 47, 48, 124], "still": [36, 42, 63, 64, 68, 70, 91, 98], "anoth": [36, 85], "h_": 36, "formula": 36, "document": 36, "lfloor": [36, 114], "p_h": 36, "d_h": 36, "k_h": 36, "s_h": 36, "rfloor": [36, 114], "p_w": 36, "d_w": 36, "k_w": 36, "s_w": 36, "ph": 36, "pw": 36, "side": [36, 139], "dh": 36, "dw": [36, 137], "sh": 36, "sw": 36, "oper": [36, 95], "reli": 36, "upon": [36, 140], "expand": 36, "consequenti": 36, "memori": [36, 42, 51], "spike_q": [37, 38], "interp_mod": [37, 38], "interp_tol": [37, 38], "current_overbound": [37, 38], "spike_overbound": [37, 38], "delayedspikecurrentaccessormixin": [37, 38], "spikederivedcurrentmixin": 37, "memoryless": [37, 38], "respond": [37, 38, 138], "instantan": [37, 38], "q": [37, 38, 142], "charg": [37, 38, 142], "carri": [37, 38, 142], "pc": [37, 38, 142], "cuba": [37, 38, 135], "partialconstructor": [37, 38, 53], "spikecurrentmixin": 38, "passthrough": [38, 100], "inject": 38, "glif": [40, 41, 135, 138, 139], "alia": 40, "lif": [40, 135], "reset_v_add": 41, "reset_v_mul": 41, "rc_adapt": 41, "lambda_k": [41, 139], "m_v": [41, 75, 139], "b_v": [41, 75, 139], "unitless": [41, 43, 52, 68, 69, 70, 71, 73, 75, 140], "frequenc": [42, 51, 63, 64, 65, 66, 67, 138], "compens": [42, 63, 64, 66, 67, 114], "generatormixin": [42, 51], "refractorystepmixin": 42, "encod": [42, 51], "poisson": [42, 51, 63, 64, 65, 66, 67], "distribut": [42, 51, 63, 64, 65, 66, 67, 112, 113, 114], "randomli": [42, 63, 64], "point": [42, 63, 64, 114, 140], "hz": [42, 51, 63, 64, 65, 66, 67], "inter": [42, 63, 64, 85], "pseudorandom": [42, 51, 63, 64, 66, 67, 89, 112, 113, 114, 124], "distanc": [42, 63, 64], "th": [42, 58, 59, 60, 63, 64], "onlin": [42, 51], "iter": [42, 51, 64, 67], "intens": [42, 51], "hertz": [42, 51], "pin": 42, "crit_v": [43, 52, 73], "affin": [43, 52, 73], "crit": [43, 52, 73, 140], "drift": [43, 52, 73], "toward": [43, 52, 73, 139, 140], "awai": [43, 52, 73, 140], "connection_kwarg": 45, "neuron_kwarg": 45, "sequenti": 45, "block": 45, "kei": 45, "written": 45, "avoid": 45, "alwai": [45, 85], "uniqu": 45, "architectur": 45, "explicitli": 45, "go": 45, "unexpect": 45, "in_shap": 46, "out_shap": 46, "interc": [46, 48], "prod": [46, 47, 48], "m_0": 46, "unbatch": [46, 47, 48], "transform": [46, 47, 48], "odot": [47, 48], "inputoutput": [47, 48], "i_n": 48, "lineardens": 48, "creation": 48, "mask": [48, 69, 71, 72, 73], "shapemixin": [49, 53], "extra_repr": 49, "p": [50, 90, 112, 113, 114], "norm": [50, 90], "stepmixin": 51, "replic": [51, 66, 67, 77], "bindsnet": [51, 66, 67], "parameter": [51, 66, 67, 137], "invers": [51, 66, 67, 139, 142], "historymodul": [53, 83, 84, 85, 86, 87, 88, 103], "nanoamper": [53, 79, 84, 85, 87], "current_at": [53, 85], "spike_at": [53, 85], "boolean": 53, "newli": 54, "weightbiasmixin": 55, "mixin": [55, 56, 57, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "inherit": [55, 56, 57, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "weight_": [55, 56, 57], "bias_": [55, 56], "weightmixin": 56, "maintain": [58, 59, 60, 74, 75], "doesn": [58, 59, 60], "adapt_r": 60, "rebound_r": 60, "adapt_reset_min": 60, "permit": [60, 69, 71], "adap": [61, 62], "i_": 61, "optioon": [63, 64], "nonsens": [63, 64], "1000": [63, 64], "inhomogen": 65, "_description_": 65, "clamp": 65, "exce": 65, "never": [66, 67], "condit": [68, 69, 70, 71, 140], "count": [68, 70, 77, 91, 98, 114], "incorpor": [68, 69, 70, 71, 91, 92, 93, 94, 95, 98, 100, 103, 104, 105, 139, 140], "matchfn": [69, 71], "trace_cumul": 69, "predic": [69, 71], "datatyp": [69, 71, 93, 104, 105], "trace_nearest": 71, "masked_input": [72, 73], "held": [74, 75], "v_slope": 75, "v_intercept": 75, "batchmixin": 77, "concept": 77, "_shape": 77, "bshape": 77, "adaptation_": 78, "adapt_batchreduc": 78, "current_": [79, 83, 84, 85, 86], "refrac_": [80, 81], "refractorymixin": 81, "driven": 82, "voltage_": 82, "currentmixin": [83, 86], "therefrom": [83, 87], "_to_spik": [83, 85], "noth": [83, 87], "primit": [84, 86, 88], "primitive_curr": 85, "primitive_spik": 85, "current_interp": 85, "spike_interp": 85, "current_overv": 85, "spike_overv": 85, "_to_curr": [85, 87], "spike_": [85, 86, 87, 88], "_current_interp": 85, "_spike_interp": 85, "_current_ob_v": 85, "_spike_ob_v": 85, "_primitive_curr": 85, "_primitive_spik": 85, "_interp_tol": 85, "spikemixin": [86, 87], "randn": 89, "12": [90, 138], "demonin": 90, "foldingreduc": [91, 92, 93, 98, 100, 104, 105], "fold": [91, 92, 93, 95, 98, 100, 104, 105], "entir": [91, 92, 93, 98, 100, 104, 105], "empti": [91, 92, 93, 95, 98, 100, 104, 105], "move": 92, "decoupl": 92, "infin": 93, "fold_fn": 94, "math": 94, "map_fn": 94, "keepshap": 94, "reiniti": [94, 97, 103], "storag": 94, "equival": [94, 139], "histor": 94, "dump": [94, 97, 103], "tempor": 94, "oldest": 94, "peek": [94, 97, 103], "view": [94, 97, 103], "fall": 94, "foldreduc": 95, "manytoon": 96, "receiv": 96, "sent": 96, "directli": 100, "content": [101, 102], "multiplicit": [104, 105], "dot": 106, "notat": 106, "turn": 106, "ti": 106, "resmin": 108, "resmax": 108, "srcmin": 108, "srcmax": 108, "unchang": 108, "amin": 108, "amax": 108, "shortcut": 109, "full": 109, "squar": 111, "root": 111, "continuousdistribut": [112, 113], "log": [112, 113, 114], "probabl": [112, 113, 114], "mathbb": [112, 113, 114], "r": [112, 113, 114, 139], "locat": [112, 113], "sigma": [112, 113], "_": [112, 113, 114], "cdf": [112, 113, 114], "loc": [112, 113], "erf": [112, 113], "sqrt": [112, 113], "standard": [112, 113], "deviat": [112, 113], "logcdf": [112, 113, 114], "logarithm": [112, 113, 114], "logpdf": [112, 113], "densiti": [112, 113], "pi": [112, 113], "likelihood": [112, 113], "mid": [112, 113, 114], "sim": [112, 113, 114], "params_mv": [112, 113], "varianc": [112, 113, 114], "mu_x": [112, 113], "sigma_x": [112, 113], "pdf": [112, 113], "variat": [112, 113, 114], "mathcal": [112, 113], "sample_mv": [112, 113], "non": [112, 113, 114, 115], "var": [112, 113, 114], "lnormal": 113, "discretedistribut": 114, "_0": 114, "gamma": 114, "logpmf": 114, "mass": 114, "pmf": 114, "metal": 114, "shader": 114, "although": [114, 140], "strictli": 114, "degener": 114, "convers": 115, "convert": 115, "leftmost": 115, "arbitrari": [116, 117, 118, 119, 120, 121], "uniformli": 124, "depth": 135, "academ": 135, "plan": 135, "futur": 135, "alif": 135, "3": [135, 140], "4": [135, 138, 140], "5": [135, 140], "nonlinear": 135, "qif": 135, "izhikevich": 135, "eif": 135, "adex": 135, "conduct": [135, 139], "coba": 135, "stdp": 135, "anti": 135, "hebbian": 135, "astdp": 135, "mstdp": 135, "elig": 135, "mstdpet": 135, "resum": 135, "tbd": 136, "categori": 137, "With": [137, 138, 139, 140], "w_t": 137, "dirac": [137, 142], "pp": 137, "adjust": 137, "neighbor": 137, "flip": 137, "sign": 137, "postsynpat": 137, "place": 137, "penal": 137, "penalti": 137, "law": 137, "heavisid": 137, "impos": 138, "regard": 138, "steadi": 138, "give": 138, "degre": 138, "freedom": 138, "modif": 138, "dampen": 138, "amplifi": 138, "addition": 138, "said": 138, "goe": 138, "dw_k": [138, 140], "approx": [138, 140], "subthreshold": [138, 140], "doi": [138, 139, 140], "10": [138, 139, 140], "1017": [138, 139, 140], "cbo9781107447615": [138, 139, 140], "6": [138, 140], "1152": 138, "jn": 138, "00686": 138, "2005": 138, "Be": [138, 139], "1038": [138, 139], "s41467": [138, 139], "017": [138, 139], "02717": [138, 139], "allen": [138, 139], "institut": [138, 139], "whitepap": [138, 139], "rebound": 138, "1162": 138, "neco": 138, "2008": 138, "680": 138, "neco_a_00196": 138, "1803": 138, "09574": 138, "021": 138, "24427": 138, "8": [138, 140], "00234": 138, "2019": 138, "dv_m": [139, 140], "basic": 139, "rule": 139, "slope": [139, 140], "show": [139, 140], "v_r": [139, 140], "60": [139, 140], "plot": [139, 140], "c_m": 139, "g_l": 139, "capacit": 139, "nf": 139, "phrase": 139, "leak": 139, "expos": 139, "isbn": [139, 140, 142], "9780262548083": [139, 140, 142], "020": 139, "17236": 139, "fraction": 139, "intercept": 139, "convent": 139, "conting": 139, "reach": 139, "critic": 140, "tendenc": 140, "stabl": 140, "unstabl": 140, "attract": 140, "repel": 140, "v_c": 140, "50": 140, "depeend": 140, "3390": 140, "brainsci12070863": 140, "7551": 140, "mitpress": 140, "2526": 140, "001": 140, "0001": 140, "close": 140, "rapid": 140, "upsw": 140, "rightarrow": 140, "easi": 140, "confus": 140, "unrel": 140, "occasion": 140, "denot": 140, "vartheta_": 140, "rh": 140, "thresh": 140, "usual": 140, "simuat": 140, "illustr": 140, "4249": 140, "scholarpedia": 140, "8427": 140, "1523": 140, "jneurosci": 140, "23": 140, "37": 140, "11628": 140, "2003": 140, "t_f": 142, "veri": 142, "role": 142, "deliv": 142, "dramat": 142}, "objects": {"inferno": [[5, 0, 1, "", "Configuration"], [6, 0, 1, "", "DimensionalModule"], [7, 0, 1, "", "HistoryModule"], [8, 0, 1, "", "Hook"], [9, 0, 1, "", "Interpolation"], [10, 0, 1, "", "Module"], [11, 0, 1, "", "RemoteHook"], [12, 0, 1, "", "StateHook"], [13, 3, 1, "", "empty"], [14, 3, 1, "", "exp"], [15, 3, 1, "", "full"], [16, 3, 1, "", "holt_linear_smoothing"], [17, 3, 1, "", "interp_exp_decay"], [18, 3, 1, "", "interp_linear"], [19, 3, 1, "", "interp_nearest"], [20, 3, 1, "", "interp_previous"], [128, 4, 0, "-", "learn"], [130, 4, 0, "-", "neural"], [89, 3, 1, "", "normal"], [90, 3, 1, "", "normalize"], [107, 3, 1, "", "ones"], [108, 3, 1, "", "rescale"], [109, 3, 1, "", "scalar"], [110, 3, 1, "", "simple_exponential_smoothing"], [111, 3, 1, "", "sqrt"], [133, 4, 0, "-", "stats"], [115, 3, 1, "", "tensorize"], [124, 3, 1, "", "uniform"], [125, 3, 1, "", "zeros"]], "inferno.Configuration": [[5, 1, 1, "", "_asadict_"]], "inferno.DimensionalModule": [[6, 1, 1, "", "compatible"], [6, 1, 1, "", "compatible_"], [6, 1, 1, "", "compatible_like"], [6, 1, 1, "", "compatible_like_"], [6, 2, 1, "", "constraints"], [6, 2, 1, "", "constraints_repr"], [6, 1, 1, "", "deregister_constrained"], [6, 2, 1, "", "mindims"], [6, 1, 1, "", "mindims_"], [6, 1, 1, "", "reconstrain"], [6, 1, 1, "", "register_constrained"]], "inferno.HistoryModule": [[7, 1, 1, "", "deregister_constrained"], [7, 2, 1, "", "dt"], [7, 1, 1, "", "history"], [7, 2, 1, "", "hlen"], [7, 2, 1, "", "hsize"], [7, 1, 1, "", "latest"], [7, 1, 1, "", "pushto"], [7, 1, 1, "", "register_constrained"], [7, 1, 1, "", "reset"], [7, 1, 1, "", "select"], [7, 1, 1, "", "tick"], [7, 1, 1, "", "update"]], "inferno.Hook": [[8, 1, 1, "", "deregister"], [8, 2, 1, "", "on_eval"], [8, 2, 1, "", "on_train"], [8, 1, 1, "", "posthook"], [8, 1, 1, "", "prehook"], [8, 1, 1, "", "register"], [8, 2, 1, "", "registered"]], "inferno.Module": [[10, 1, 1, "", "get_extra"], [10, 1, 1, "", "get_extra_state"], [10, 1, 1, "", "register_extra"], [10, 1, 1, "", "set_extra_state"]], "inferno.RemoteHook": [[11, 1, 1, "", "add_inner"], [11, 1, 1, "", "innerhook"], [11, 2, 1, "", "on_eval_inner"], [11, 2, 1, "", "on_train_inner"], [11, 1, 1, "", "remove_inner"]], "inferno.StateHook": [[12, 2, 1, "", "module"], [12, 1, 1, "", "register"]], "inferno.learn": [[21, 0, 1, "", "HardWeightDependence"], [22, 0, 1, "", "LayerwiseUpdater"], [23, 0, 1, "", "MaxRateClassifier"], [24, 0, 1, "", "STDP"], [25, 0, 1, "", "SoftWeightDependence"], [26, 0, 1, "", "WeightDependence"], [129, 4, 0, "-", "functional"]], "inferno.learn.HardWeightDependence": [[21, 1, 1, "", "lower"], [21, 1, 1, "", "upper"]], "inferno.learn.LayerwiseUpdater": [[22, 1, 1, "", "add_monitor"], [22, 1, 1, "", "add_monitors"], [22, 1, 1, "", "add_trainable"], [22, 1, 1, "", "attach"], [22, 1, 1, "", "clear"], [22, 1, 1, "", "del_monitor"], [22, 1, 1, "", "del_monitors"], [22, 1, 1, "", "del_trainable"], [22, 1, 1, "", "detach"], [22, 1, 1, "", "forward"], [22, 1, 1, "", "get_monitor"], [22, 1, 1, "", "get_monitors"], [22, 2, 1, "", "monitors"], [22, 2, 1, "", "trainables"]], "inferno.learn.MaxRateClassifier": [[23, 2, 1, "", "assignments"], [23, 1, 1, "", "forward"], [23, 1, 1, "", "infer"], [23, 1, 1, "", "learn"], [23, 2, 1, "", "nclass"], [23, 2, 1, "", "ndim"], [23, 2, 1, "", "occurances"], [23, 2, 1, "", "proportional"], [23, 2, 1, "", "proportions"], [23, 2, 1, "", "rates"], [23, 2, 1, "", "shape"]], "inferno.learn.STDP": [[24, 1, 1, "", "add_monitors"], [24, 2, 1, "", "dt"], [24, 1, 1, "", "forward"], [24, 2, 1, "", "lrpost"], [24, 2, 1, "", "lrpre"]], "inferno.learn.SoftWeightDependence": [[25, 1, 1, "", "lower"], [25, 2, 1, "", "maxpow"], [25, 2, 1, "", "minpow"], [25, 1, 1, "", "upper"]], "inferno.learn.WeightDependence": [[26, 2, 1, "", "hasmax"], [26, 2, 1, "", "hasmin"], [26, 1, 1, "", "lower"], [26, 1, 1, "", "upper"], [26, 2, 1, "", "wmax"], [26, 2, 1, "", "wmin"]], "inferno.learn.functional": [[27, 0, 1, "", "UpdateBounding"], [28, 3, 1, "", "hard_lower_bounding"], [29, 3, 1, "", "hard_upper_bounding"], [30, 3, 1, "", "power_lower_bounding"], [31, 3, 1, "", "power_upper_bounding"]], "inferno.neural": [[32, 0, 1, "", "ALIF"], [33, 0, 1, "", "AdEx"], [34, 0, 1, "", "Clamping"], [35, 0, 1, "", "Connection"], [36, 0, 1, "", "Conv2D"], [37, 0, 1, "", "DeltaCurrent"], [38, 0, 1, "", "DeltaPlusCurrent"], [39, 0, 1, "", "EIF"], [40, 0, 1, "", "GLIF1"], [41, 0, 1, "", "GLIF2"], [42, 0, 1, "", "HomogeneousPoissonEncoder"], [43, 0, 1, "", "Izhikevich"], [44, 0, 1, "", "LIF"], [45, 0, 1, "", "Layer"], [46, 0, 1, "", "LinearDense"], [47, 0, 1, "", "LinearDirect"], [48, 0, 1, "", "LinearLateral"], [49, 0, 1, "", "Neuron"], [50, 0, 1, "", "Normalization"], [51, 0, 1, "", "PoissonIntervalEncoder"], [52, 0, 1, "", "QIF"], [53, 0, 1, "", "Synapse"], [54, 0, 1, "", "SynapseConstructor"], [131, 4, 0, "-", "functional"]], "inferno.neural.ALIF": [[32, 2, 1, "", "adaptation"], [32, 2, 1, "", "bsize"], [32, 1, 1, "", "clear"], [32, 2, 1, "", "dt"], [32, 1, 1, "", "forward"], [32, 2, 1, "", "refrac"], [32, 2, 1, "", "spike"], [32, 2, 1, "", "voltage"]], "inferno.neural.AdEx": [[33, 1, 1, "", "clear"], [33, 2, 1, "", "dt"], [33, 1, 1, "", "forward"]], "inferno.neural.Connection": [[35, 2, 1, "", "bias"], [35, 2, 1, "", "biased"], [35, 2, 1, "", "binshape"], [35, 2, 1, "", "boutshape"], [35, 2, 1, "", "bsize"], [35, 1, 1, "", "clear"], [35, 2, 1, "", "delay"], [35, 2, 1, "", "delayedby"], [35, 2, 1, "", "dt"], [35, 1, 1, "", "forward"], [35, 2, 1, "", "inshape"], [35, 2, 1, "", "insize"], [35, 1, 1, "", "like_input"], [35, 1, 1, "", "like_synaptic"], [35, 2, 1, "", "outshape"], [35, 2, 1, "", "outsize"], [35, 1, 1, "", "postsyn_receptive"], [35, 1, 1, "", "presyn_receptive"], [35, 2, 1, "", "selector"], [35, 2, 1, "", "synapse"], [35, 2, 1, "", "syncurrent"], [35, 2, 1, "", "synspike"], [35, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[36, 2, 1, "", "bias"], [36, 2, 1, "", "biased"], [36, 2, 1, "", "binshape"], [36, 2, 1, "", "boutshape"], [36, 2, 1, "", "bsize"], [36, 1, 1, "", "clear"], [36, 2, 1, "", "delay"], [36, 2, 1, "", "delayedby"], [36, 2, 1, "", "dt"], [36, 1, 1, "", "forward"], [36, 2, 1, "", "inshape"], [36, 2, 1, "", "insize"], [36, 1, 1, "", "like_input"], [36, 1, 1, "", "like_synaptic"], [36, 2, 1, "", "outshape"], [36, 2, 1, "", "outsize"], [36, 1, 1, "", "postsyn_receptive"], [36, 1, 1, "", "presyn_receptive"], [36, 2, 1, "", "selector"], [36, 2, 1, "", "syncurrent"], [36, 2, 1, "", "synspike"], [36, 2, 1, "", "weight"]], "inferno.neural.DeltaCurrent": [[37, 1, 1, "", "clear"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[38, 1, 1, "", "clear"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "partialconstructor"]], "inferno.neural.EIF": [[39, 1, 1, "", "clear"], [39, 2, 1, "", "dt"], [39, 1, 1, "", "forward"]], "inferno.neural.GLIF1": [[40, 2, 1, "", "bsize"], [40, 1, 1, "", "clear"], [40, 2, 1, "", "dt"], [40, 1, 1, "", "forward"], [40, 2, 1, "", "refrac"], [40, 2, 1, "", "spike"], [40, 2, 1, "", "voltage"]], "inferno.neural.GLIF2": [[41, 2, 1, "", "adaptation"], [41, 2, 1, "", "bsize"], [41, 1, 1, "", "clear"], [41, 2, 1, "", "dt"], [41, 1, 1, "", "forward"], [41, 2, 1, "", "refrac"], [41, 2, 1, "", "spike"], [41, 2, 1, "", "voltage"]], "inferno.neural.HomogeneousPoissonEncoder": [[42, 2, 1, "", "compensated"], [42, 1, 1, "", "forward"], [42, 2, 1, "", "frequency"], [42, 2, 1, "", "refrac"]], "inferno.neural.Izhikevich": [[43, 1, 1, "", "clear"], [43, 2, 1, "", "dt"], [43, 1, 1, "", "forward"]], "inferno.neural.LIF": [[44, 2, 1, "", "bsize"], [44, 1, 1, "", "clear"], [44, 2, 1, "", "dt"], [44, 1, 1, "", "forward"], [44, 2, 1, "", "refrac"], [44, 2, 1, "", "spike"], [44, 2, 1, "", "voltage"]], "inferno.neural.Layer": [[45, 1, 1, "", "clear"], [45, 2, 1, "", "connection"], [45, 1, 1, "", "forward"], [45, 2, 1, "", "neuron"], [45, 2, 1, "", "synapse"]], "inferno.neural.LinearDense": [[46, 2, 1, "", "bias"], [46, 2, 1, "", "biased"], [46, 2, 1, "", "binshape"], [46, 2, 1, "", "boutshape"], [46, 2, 1, "", "bsize"], [46, 1, 1, "", "clear"], [46, 2, 1, "", "delay"], [46, 2, 1, "", "delayedby"], [46, 2, 1, "", "dt"], [46, 1, 1, "", "forward"], [46, 2, 1, "", "inshape"], [46, 2, 1, "", "insize"], [46, 1, 1, "", "like_input"], [46, 1, 1, "", "like_synaptic"], [46, 2, 1, "", "outshape"], [46, 2, 1, "", "outsize"], [46, 1, 1, "", "postsyn_receptive"], [46, 1, 1, "", "presyn_receptive"], [46, 2, 1, "", "selector"], [46, 2, 1, "", "syncurrent"], [46, 2, 1, "", "synspike"], [46, 2, 1, "", "weight"]], "inferno.neural.LinearDirect": [[47, 2, 1, "", "bias"], [47, 2, 1, "", "biased"], [47, 2, 1, "", "binshape"], [47, 2, 1, "", "boutshape"], [47, 2, 1, "", "bsize"], [47, 1, 1, "", "clear"], [47, 2, 1, "", "delay"], [47, 2, 1, "", "delayedby"], [47, 2, 1, "", "dt"], [47, 1, 1, "", "forward"], [47, 2, 1, "", "inshape"], [47, 2, 1, "", "insize"], [47, 1, 1, "", "like_input"], [47, 1, 1, "", "like_synaptic"], [47, 2, 1, "", "outshape"], [47, 2, 1, "", "outsize"], [47, 1, 1, "", "postsyn_receptive"], [47, 1, 1, "", "presyn_receptive"], [47, 2, 1, "", "selector"], [47, 2, 1, "", "syncurrent"], [47, 2, 1, "", "synspike"], [47, 2, 1, "", "weight"]], "inferno.neural.LinearLateral": [[48, 2, 1, "", "bias"], [48, 2, 1, "", "biased"], [48, 2, 1, "", "binshape"], [48, 2, 1, "", "boutshape"], [48, 2, 1, "", "bsize"], [48, 1, 1, "", "clear"], [48, 2, 1, "", "delay"], [48, 2, 1, "", "delayedby"], [48, 2, 1, "", "dt"], [48, 1, 1, "", "forward"], [48, 2, 1, "", "inshape"], [48, 2, 1, "", "insize"], [48, 1, 1, "", "like_input"], [48, 1, 1, "", "like_synaptic"], [48, 2, 1, "", "outshape"], [48, 2, 1, "", "outsize"], [48, 1, 1, "", "postsyn_receptive"], [48, 1, 1, "", "presyn_receptive"], [48, 2, 1, "", "selector"], [48, 2, 1, "", "syncurrent"], [48, 2, 1, "", "synspike"], [48, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[49, 2, 1, "", "bsize"], [49, 1, 1, "", "clear"], [49, 2, 1, "", "dt"], [49, 1, 1, "", "extra_repr"], [49, 1, 1, "", "forward"], [49, 2, 1, "", "refrac"], [49, 2, 1, "", "spike"], [49, 2, 1, "", "voltage"]], "inferno.neural.PoissonIntervalEncoder": [[51, 1, 1, "", "forward"], [51, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[52, 1, 1, "", "clear"], [52, 2, 1, "", "dt"], [52, 1, 1, "", "forward"]], "inferno.neural.Synapse": [[53, 1, 1, "", "clear"], [53, 2, 1, "", "current"], [53, 1, 1, "", "current_at"], [53, 2, 1, "", "delay"], [53, 2, 1, "", "dt"], [53, 1, 1, "", "forward"], [53, 1, 1, "", "partialconstructor"], [53, 2, 1, "", "spike"], [53, 1, 1, "", "spike_at"]], "inferno.neural.connections.mixins": [[55, 0, 1, "", "WeightBiasDelayMixin"], [56, 0, 1, "", "WeightBiasMixin"], [57, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[55, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[56, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[57, 2, 1, "", "weight"]], "inferno.neural.functional": [[58, 3, 1, "", "adaptive_currents_linear"], [59, 3, 1, "", "adaptive_thresholds_linear_spike"], [60, 3, 1, "", "adaptive_thresholds_linear_voltage"], [61, 3, 1, "", "apply_adaptive_currents"], [62, 3, 1, "", "apply_adaptive_thresholds"], [63, 3, 1, "", "enc_homogeneous_poisson_exp_interval"], [64, 3, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [65, 3, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [66, 3, 1, "", "enc_poisson_interval"], [67, 3, 1, "", "enc_poisson_interval_online"], [68, 3, 1, "", "trace_cumulative"], [69, 3, 1, "", "trace_cumulative_scaled"], [70, 3, 1, "", "trace_nearest"], [71, 3, 1, "", "trace_nearest_scaled"], [72, 3, 1, "", "voltage_integration_linear"], [73, 3, 1, "", "voltage_integration_quadratic"], [74, 3, 1, "", "voltage_thresholding"], [75, 3, 1, "", "voltage_thresholding_slope_intercept"]], "inferno.neural.mixins": [[76, 0, 1, "", "BatchMixin"], [77, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[76, 2, 1, "", "bsize"]], "inferno.neural.mixins.ShapeMixin": [[77, 2, 1, "", "bshape"], [77, 2, 1, "", "bsize"], [77, 2, 1, "", "count"], [77, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[78, 0, 1, "", "AdaptationMixin"], [79, 0, 1, "", "CurrentMixin"], [80, 0, 1, "", "RefractoryMixin"], [81, 0, 1, "", "SpikeRefractoryMixin"], [82, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptationMixin": [[78, 2, 1, "", "adaptation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[79, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[80, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[81, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[82, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[83, 0, 1, "", "CurrentDerivedSpikeMixin"], [84, 0, 1, "", "CurrentMixin"], [85, 0, 1, "", "DelayedSpikeCurrentAccessorMixin"], [86, 0, 1, "", "SpikeCurrentMixin"], [87, 0, 1, "", "SpikeDerivedCurrentMixin"], [88, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[83, 2, 1, "", "spike"]], "inferno.neural.synapses.mixins.CurrentMixin": [[84, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin": [[85, 1, 1, "", "current_at"], [85, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[87, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.SpikeMixin": [[88, 2, 1, "", "spike"]], "inferno.observe": [[91, 0, 1, "", "CumulativeTraceReducer"], [92, 0, 1, "", "EMAReducer"], [93, 0, 1, "", "EventReducer"], [94, 0, 1, "", "FoldReducer"], [95, 0, 1, "", "FoldingReducer"], [96, 0, 1, "", "InputMonitor"], [97, 0, 1, "", "Monitor"], [98, 0, 1, "", "NearestTraceReducer"], [99, 0, 1, "", "OutputMonitor"], [100, 0, 1, "", "PassthroughReducer"], [101, 0, 1, "", "PostMonitor"], [102, 0, 1, "", "PreMonitor"], [103, 0, 1, "", "Reducer"], [104, 0, 1, "", "ScaledCumulativeTraceReducer"], [105, 0, 1, "", "ScaledNearestTraceReducer"], [106, 0, 1, "", "StateMonitor"]], "inferno.observe.CumulativeTraceReducer": [[91, 2, 1, "", "dt"], [91, 1, 1, "", "fold"], [91, 1, 1, "", "initialize"], [91, 1, 1, "", "interpolate"]], "inferno.observe.EMAReducer": [[92, 1, 1, "", "fold"], [92, 1, 1, "", "initialize"], [92, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[93, 1, 1, "", "fold"], [93, 1, 1, "", "initialize"], [93, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[94, 1, 1, "", "clear"], [94, 2, 1, "", "data"], [94, 2, 1, "", "dt"], [94, 1, 1, "", "dump"], [94, 1, 1, "", "forward"], [94, 2, 1, "", "hlen"], [94, 1, 1, "", "peek"], [94, 1, 1, "", "push"], [94, 1, 1, "", "view"]], "inferno.observe.FoldingReducer": [[95, 1, 1, "", "fold"], [95, 1, 1, "", "initialize"], [95, 1, 1, "", "interpolate"]], "inferno.observe.Monitor": [[97, 1, 1, "", "clear"], [97, 1, 1, "", "dump"], [97, 1, 1, "", "peek"], [97, 2, 1, "", "reducer"], [97, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[98, 2, 1, "", "dt"], [98, 1, 1, "", "fold"], [98, 1, 1, "", "initialize"], [98, 1, 1, "", "interpolate"]], "inferno.observe.PassthroughReducer": [[100, 1, 1, "", "fold"], [100, 1, 1, "", "initialize"], [100, 1, 1, "", "interpolate"]], "inferno.observe.Reducer": [[103, 1, 1, "", "clear"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "forward"], [103, 1, 1, "", "peek"], [103, 1, 1, "", "push"], [103, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[104, 2, 1, "", "dt"], [104, 1, 1, "", "fold"], [104, 1, 1, "", "initialize"], [104, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[105, 2, 1, "", "dt"], [105, 1, 1, "", "fold"], [105, 1, 1, "", "initialize"], [105, 1, 1, "", "interpolate"]], "inferno.stats": [[112, 0, 1, "", "LogNormal"], [113, 0, 1, "", "Normal"], [114, 0, 1, "", "Poisson"]], "inferno.stats.LogNormal": [[112, 1, 1, "", "cdf"], [112, 1, 1, "", "logcdf"], [112, 1, 1, "", "logpdf"], [112, 1, 1, "", "mean"], [112, 1, 1, "", "params_mv"], [112, 1, 1, "", "pdf"], [112, 1, 1, "", "sample"], [112, 1, 1, "", "sample_mv"], [112, 1, 1, "", "validate"], [112, 1, 1, "", "variance"]], "inferno.stats.Normal": [[113, 1, 1, "", "cdf"], [113, 1, 1, "", "logcdf"], [113, 1, 1, "", "logpdf"], [113, 1, 1, "", "mean"], [113, 1, 1, "", "params_mv"], [113, 1, 1, "", "pdf"], [113, 1, 1, "", "sample"], [113, 1, 1, "", "sample_mv"], [113, 1, 1, "", "validate"], [113, 1, 1, "", "variance"]], "inferno.stats.Poisson": [[114, 1, 1, "", "cdf"], [114, 1, 1, "", "logcdf"], [114, 1, 1, "", "logpmf"], [114, 1, 1, "", "mean"], [114, 1, 1, "", "pmf"], [114, 1, 1, "", "sample"], [114, 1, 1, "", "validate"], [114, 1, 1, "", "variance"]], "inferno.typing": [[116, 0, 1, "", "ManyToMany"], [117, 0, 1, "", "ManyToManyMethod"], [118, 0, 1, "", "ManyToOne"], [119, 0, 1, "", "ManyToOneMethod"], [120, 0, 1, "", "OneToMany"], [121, 0, 1, "", "OneToManyMethod"], [122, 0, 1, "", "OneToOne"], [123, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"]}, "titleterms": {"pragmat": 0, "consider": 0, "function": [0, 2, 129, 131], "object": 0, "orient": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 128, 137], "simul": 0, "refractori": [0, 3], "period": [0, 3], "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 140], "decai": 2, "constant": 2, "trace": [2, 131, 137], "cumul": 2, "nearest": 2, "scale": 2, "dirac": 2, "delta": [2, 141, 142], "heavisid": 2, "step": 2, "relationship": 2, "neuron": [3, 49, 130, 131, 135, 138, 139, 140], "system": 3, "dynam": [3, 131], "welcom": 4, "inferno": [4, 127, 128, 129, 130, 131, 132, 133, 134], "": 4, "document": 4, "configur": 5, "dimensionalmodul": 6, "historymodul": 7, "shape": [7, 23, 35, 36, 42, 46, 47, 48, 51, 58, 59, 60, 63, 64, 65, 66, 67, 85, 94], "hook": [8, 130], "interpol": [9, 127], "modul": [10, 137], "remotehook": 11, "statehook": 12, "empti": 13, "exp": 14, "full": 15, "holt_linear_smooth": 16, "interp_exp_decai": 17, "interp_linear": 18, "interp_nearest": 19, "interp_previ": 20, "hardweightdepend": 21, "layerwiseupdat": 22, "maxrateclassifi": 23, "stdp": [24, 137], "softweightdepend": 25, "weightdepend": 26, "updatebound": 27, "hard_lower_bound": 28, "hard_upper_bound": 29, "power_lower_bound": 30, "power_upper_bound": 31, "alif": [32, 139], "adex": [33, 140], "clamp": 34, "connect": [35, 130], "conv2d": 36, "deltacurr": 37, "deltapluscurr": 38, "eif": [39, 140], "glif1": [40, 139], "glif2": [41, 139], "homogeneouspoissonencod": 42, "izhikevich": [43, 140], "lif": [44, 139], "layer": 45, "lineardens": 46, "lineardirect": 47, "linearlater": 48, "normal": [50, 89, 90, 113], "poissonintervalencod": 51, "qif": [52, 140], "synaps": [53, 130, 135, 141, 142], "synapseconstructor": 54, "weightbiasdelaymixin": 55, "weightbiasmixin": 56, "weightmixin": 57, "adaptive_currents_linear": 58, "adaptive_thresholds_linear_spik": 59, "adaptive_thresholds_linear_voltag": 60, "apply_adaptive_curr": 61, "apply_adaptive_threshold": 62, "enc_homogeneous_poisson_exp_interv": 63, "enc_homogeneous_poisson_exp_interval_onlin": 64, "enc_inhomogenous_poisson_bernoulli_approx": 65, "enc_poisson_interv": 66, "enc_poisson_interval_onlin": 67, "trace_cumul": 68, "trace_cumulative_sc": 69, "trace_nearest": 70, "trace_nearest_sc": 71, "voltage_integration_linear": 72, "voltage_integration_quadrat": 73, "voltage_threshold": 74, "voltage_thresholding_slope_intercept": 75, "batchmixin": 76, "shapemixin": 77, "adaptationmixin": 78, "currentmixin": [79, 84], "refractorymixin": 80, "spikerefractorymixin": 81, "voltagemixin": 82, "currentderivedspikemixin": 83, "delayedspikecurrentaccessormixin": 85, "spikecurrentmixin": 86, "spikederivedcurrentmixin": 87, "spikemixin": 88, "cumulativetracereduc": 91, "emareduc": 92, "eventreduc": 93, "foldreduc": 94, "foldingreduc": 95, "inputmonitor": 96, "monitor": [97, 132], "nearesttracereduc": 98, "outputmonitor": 99, "passthroughreduc": 100, "postmonitor": 101, "premonitor": 102, "reduc": [103, 132], "scaledcumulativetracereduc": 104, "scalednearesttracereduc": 105, "statemonitor": 106, "ones": 107, "rescal": 108, "scalar": 109, "simple_exponential_smooth": 110, "sqrt": 111, "lognorm": 112, "paramet": [112, 113, 114, 128, 129], "support": [112, 113, 114], "poisson": 114, "tensor": [115, 127], "manytomani": 116, "manytomanymethod": 117, "manytoon": 118, "manytoonemethod": 119, "onetomani": 120, "onetomanymethod": 121, "onetoon": 122, "onetoonemethod": 123, "uniform": 124, "zero": 125, "api": 126, "refer": [126, 138, 139, 140, 142], "infrastructur": 127, "gener": [127, 139], "math": 127, "learn": [128, 129, 135, 136, 137], "compon": [128, 130, 132], "updat": 128, "spike": [128, 131, 137, 138], "depend": [128, 129, 137, 138], "plastic": [128, 137], "bound": [128, 137], "classifi": 128, "neural": [130, 131], "encod": [130, 131], "type": [130, 134], "mixin": 130, "observ": 132, "dist": 133, "distribut": 133, "callabl": 134, "model": [135, 139, 140, 141, 142], "method": [135, 136, 137], "zoo": 135, "overview": [135, 136, 137, 138], "resum": 136, "like": [136, 137], "formul": [137, 138, 139, 140, 141, 142], "delai": 137, "anti": 137, "hebbian": 137, "astdp": 137, "descript": [137, 139, 140, 142], "mstdp": 137, "elig": 137, "mstdpet": 137, "weight": 137, "soft": 137, "hard": 137, "adapt": [138, 139, 140], "current": [138, 142], "linear": [138, 139], "threshold": 138, "voltag": 138, "leaki": 139, "integr": [139, 140], "fire": [139, 140], "altern": 139, "1": 139, "2": 139, "3": 139, "glif3": 139, "4": 139, "glif4": 139, "5": 139, "glif5": 139, "nonlinear": 140, "quadrat": 140, "conduct": 141, "base": [141, 142], "coba": 141, "variant": [141, 142], "cuba": 142}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Functional or Object-Oriented?": [[0, "functional-or-object-oriented"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Traces": [[2, "scaling-traces"]], "Cumulative Scaled Trace": [[2, "cumulative-scaled-trace"]], "Nearest Scaled Trace": [[2, "nearest-scaled-trace"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "Configuration": [[5, "configuration"]], "DimensionalModule": [[6, "dimensionalmodule"]], "HistoryModule": [[7, "historymodule"]], "Shape": [[7, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [23, null], [35, null], [35, null], [35, null], [35, null], [36, null], [36, null], [36, null], [36, null], [36, null], [36, null], [36, null], [42, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [47, null], [47, null], [47, null], [47, null], [47, null], [47, null], [47, null], [48, null], [48, null], [48, null], [48, null], [48, null], [48, null], [48, null], [51, null], [58, null], [59, null], [60, null], [63, null], [64, null], [65, null], [66, null], [67, null], [85, null], [85, null], [94, null]], "Hook": [[8, "hook"]], "Interpolation": [[9, "interpolation"], [127, "interpolation"]], "Module": [[10, "module"]], "RemoteHook": [[11, "remotehook"]], "StateHook": [[12, "statehook"]], "empty": [[13, "empty"]], "exp": [[14, "exp"]], "full": [[15, "full"]], "holt_linear_smoothing": [[16, "holt-linear-smoothing"]], "interp_exp_decay": [[17, "interp-exp-decay"]], "interp_linear": [[18, "interp-linear"]], "interp_nearest": [[19, "interp-nearest"]], "interp_previous": [[20, "interp-previous"]], "HardWeightDependence": [[21, "hardweightdependence"]], "LayerwiseUpdater": [[22, "layerwiseupdater"]], "MaxRateClassifier": [[23, "maxrateclassifier"]], "STDP": [[24, "stdp"]], "SoftWeightDependence": [[25, "softweightdependence"]], "WeightDependence": [[26, "weightdependence"]], "UpdateBounding": [[27, "updatebounding"]], "hard_lower_bounding": [[28, "hard-lower-bounding"]], "hard_upper_bounding": [[29, "hard-upper-bounding"]], "power_lower_bounding": [[30, "power-lower-bounding"]], "power_upper_bounding": [[31, "power-upper-bounding"]], "ALIF": [[32, "alif"]], "AdEx": [[33, "adex"]], "Clamping": [[34, "clamping"]], "Connection": [[35, "connection"]], "Conv2D": [[36, "conv2d"]], "DeltaCurrent": [[37, "deltacurrent"]], "DeltaPlusCurrent": [[38, "deltapluscurrent"]], "EIF": [[39, "eif"]], "GLIF1": [[40, "glif1"]], "GLIF2": [[41, "glif2"]], "HomogeneousPoissonEncoder": [[42, "homogeneouspoissonencoder"]], "Izhikevich": [[43, "izhikevich"]], "LIF": [[44, "lif"]], "Layer": [[45, "layer"]], "LinearDense": [[46, "lineardense"]], "LinearDirect": [[47, "lineardirect"]], "LinearLateral": [[48, "linearlateral"]], "Neuron": [[49, "neuron"]], "Normalization": [[50, "normalization"]], "PoissonIntervalEncoder": [[51, "poissonintervalencoder"]], "QIF": [[52, "qif"]], "Synapse": [[53, "synapse"]], "SynapseConstructor": [[54, "synapseconstructor"]], "WeightBiasDelayMixin": [[55, "weightbiasdelaymixin"]], "WeightBiasMixin": [[56, "weightbiasmixin"]], "WeightMixin": [[57, "weightmixin"]], "adaptive_currents_linear": [[58, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[59, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[60, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[61, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[62, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[63, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[64, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[65, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[66, "enc-poisson-interval"]], "enc_poisson_interval_online": [[67, "enc-poisson-interval-online"]], "trace_cumulative": [[68, "trace-cumulative"]], "trace_cumulative_scaled": [[69, "trace-cumulative-scaled"]], "trace_nearest": [[70, "trace-nearest"]], "trace_nearest_scaled": [[71, "trace-nearest-scaled"]], "voltage_integration_linear": [[72, "voltage-integration-linear"]], "voltage_integration_quadratic": [[73, "voltage-integration-quadratic"]], "voltage_thresholding": [[74, "voltage-thresholding"]], "voltage_thresholding_slope_intercept": [[75, "voltage-thresholding-slope-intercept"]], "BatchMixin": [[76, "batchmixin"]], "ShapeMixin": [[77, "shapemixin"]], "AdaptationMixin": [[78, "adaptationmixin"]], "CurrentMixin": [[79, "currentmixin"], [84, "currentmixin"]], "RefractoryMixin": [[80, "refractorymixin"]], "SpikeRefractoryMixin": [[81, "spikerefractorymixin"]], "VoltageMixin": [[82, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[83, "currentderivedspikemixin"]], "DelayedSpikeCurrentAccessorMixin": [[85, "delayedspikecurrentaccessormixin"]], "SpikeCurrentMixin": [[86, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[87, "spikederivedcurrentmixin"]], "SpikeMixin": [[88, "spikemixin"]], "normal": [[89, "normal"]], "normalize": [[90, "normalize"]], "CumulativeTraceReducer": [[91, "cumulativetracereducer"]], "EMAReducer": [[92, "emareducer"]], "EventReducer": [[93, "eventreducer"]], "FoldReducer": [[94, "foldreducer"]], "FoldingReducer": [[95, "foldingreducer"]], "InputMonitor": [[96, "inputmonitor"]], "Monitor": [[97, "monitor"]], "NearestTraceReducer": [[98, "nearesttracereducer"]], "OutputMonitor": [[99, "outputmonitor"]], "PassthroughReducer": [[100, "passthroughreducer"]], "PostMonitor": [[101, "postmonitor"]], "PreMonitor": [[102, "premonitor"]], "Reducer": [[103, "reducer"]], "ScaledCumulativeTraceReducer": [[104, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[105, "scalednearesttracereducer"]], "StateMonitor": [[106, "statemonitor"]], "ones": [[107, "ones"]], "rescale": [[108, "rescale"]], "scalar": [[109, "scalar"]], "simple_exponential_smoothing": [[110, "simple-exponential-smoothing"]], "sqrt": [[111, "sqrt"]], "LogNormal": [[112, "lognormal"]], "Parameters": [[112, null], [113, null], [114, null]], "Support": [[112, null], [113, null], [114, null]], "Normal": [[113, "normal"]], "Poisson": [[114, "poisson"]], "tensorize": [[115, "tensorize"]], "ManyToMany": [[116, "manytomany"]], "ManyToManyMethod": [[117, "manytomanymethod"]], "ManyToOne": [[118, "manytoone"]], "ManyToOneMethod": [[119, "manytoonemethod"]], "OneToMany": [[120, "onetomany"]], "OneToManyMethod": [[121, "onetomanymethod"]], "OneToOne": [[122, "onetoone"]], "OneToOneMethod": [[123, "onetoonemethod"]], "uniform": [[124, "uniform"]], "zeros": [[125, "zeros"]], "API Reference": [[126, "api-reference"]], "inferno": [[127, "inferno"]], "Infrastructure": [[127, "infrastructure"]], "General Math": [[127, "general-math"]], "Tensors": [[127, "tensors"]], "inferno.learn": [[128, "module-inferno.learn"]], "Components": [[128, "components"], [130, "components"], [132, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[128, "updaters-spike-timing-dependent-plasticity"]], "Parameter Update Bounding": [[128, "parameter-update-bounding"]], "Classifiers": [[128, "classifiers"]], "inferno.learn.functional": [[129, "module-inferno.learn.functional"]], "Parameter Dependence": [[129, "parameter-dependence"]], "inferno.neural": [[130, "module-inferno.neural"]], "Neurons": [[130, "neurons"], [135, "neurons"]], "Synapses": [[130, "synapses"], [135, "synapses"]], "Connections": [[130, "connections"]], "Encoders": [[130, "encoders"]], "Hooks": [[130, "hooks"]], "Types": [[130, "types"]], "Mixins": [[130, "mixins"]], "inferno.neural.functional": [[131, "module-inferno.neural.functional"]], "Encodings": [[131, "encodings"]], "Neuronal Dynamics": [[131, "neuronal-dynamics"]], "Spike Trace": [[131, "spike-trace"]], "inferno.observe": [[132, "inferno-observe"]], "Monitors": [[132, "monitors"]], "Reducers": [[132, "reducers"]], "inferno.dists": [[133, "module-inferno.stats"]], "Distributions": [[133, "distributions"]], "inferno.typing": [[134, "inferno-typing"]], "Callable Types": [[134, "callable-types"]], "Model and Method Zoo": [[135, "model-and-method-zoo"]], "Overview": [[135, "overview"], [136, "overview"], [137, "overview"], [138, "overview"]], "Learning Methods": [[135, "learning-methods"]], "ReSuMe-Like Learning Methods": [[136, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[137, "stdp-like-learning-methods"]], "Spike Timing-Dependent Plasticity (STDP)": [[137, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[137, "formulation"], [137, "id1"], [137, "id2"], [137, "id3"], [137, "id5"], [138, "formulation"], [138, "id1"], [138, "id3"], [138, "id5"], [139, "formulation"], [139, "id1"], [139, "id4"], [140, "formulation"], [140, "id1"], [140, "id4"], [140, "id7"], [141, "formulation"], [142, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[137, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Anti-Hebbian Spike Timing-Dependent Plasticity (aSTDP)": [[137, "anti-hebbian-spike-timing-dependent-plasticity-astdp"]], "Description": [[137, "description"], [137, "id4"], [139, "description"], [139, "id2"], [139, "id5"], [140, "description"], [140, "id2"], [140, "id5"], [140, "id8"], [142, "description"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[137, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[137, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Weight Dependence, Soft Bounding": [[137, "weight-dependence-soft-bounding"]], "Weight Dependence, Hard Bounding": [[137, "weight-dependence-hard-bounding"]], "Neuronal Adaptation": [[138, "neuronal-adaptation"]], "Adaptive Current, Linear": [[138, "adaptive-current-linear"]], "References": [[138, "references"], [138, "id2"], [138, "id4"], [138, "id6"], [139, "references"], [139, "id3"], [139, "id6"], [140, "references"], [140, "id3"], [140, "id6"], [140, "id9"], [142, "references"]], "Adaptive Current, Linear Spike-Dependent": [[138, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[138, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[138, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[139, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[139, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[139, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[139, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[139, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[139, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[139, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[139, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[139, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[140, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[140, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[140, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[140, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[140, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[141, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[141, "delta-coba-variant"]], "Synapse Models, Current-Based": [[142, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[142, "delta-cuba-variant"]]}, "indexentries": {"configuration (class in inferno)": [[5, "inferno.Configuration"]], "_asadict_() (configuration method)": [[5, "inferno.Configuration._asadict_"]], "dimensionalmodule (class in inferno)": [[6, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[6, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[6, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[6, "inferno.DimensionalModule.constraints"]], "constraints_repr (dimensionalmodule property)": [[6, "inferno.DimensionalModule.constraints_repr"]], "deregister_constrained() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.deregister_constrained"]], "mindims (dimensionalmodule property)": [[6, "inferno.DimensionalModule.mindims"]], "mindims_() (dimensionalmodule static method)": [[6, "inferno.DimensionalModule.mindims_"]], "reconstrain() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.register_constrained"]], "historymodule (class in inferno)": [[7, "inferno.HistoryModule"]], "deregister_constrained() (historymodule method)": [[7, "inferno.HistoryModule.deregister_constrained"]], "dt (historymodule property)": [[7, "inferno.HistoryModule.dt"]], "history() (historymodule method)": [[7, "inferno.HistoryModule.history"]], "hlen (historymodule property)": [[7, "inferno.HistoryModule.hlen"]], "hsize (historymodule property)": [[7, "inferno.HistoryModule.hsize"]], "latest() (historymodule method)": [[7, "inferno.HistoryModule.latest"]], "pushto() (historymodule method)": [[7, "inferno.HistoryModule.pushto"]], "register_constrained() (historymodule method)": [[7, "inferno.HistoryModule.register_constrained"]], "reset() (historymodule method)": [[7, "inferno.HistoryModule.reset"]], "select() (historymodule method)": [[7, "inferno.HistoryModule.select"]], "tick() (historymodule method)": [[7, "inferno.HistoryModule.tick"]], "update() (historymodule method)": [[7, "inferno.HistoryModule.update"]], "hook (class in inferno)": [[8, "inferno.Hook"]], "deregister() (hook method)": [[8, "inferno.Hook.deregister"]], "on_eval (hook property)": [[8, "inferno.Hook.on_eval"]], "on_train (hook property)": [[8, "inferno.Hook.on_train"]], "posthook() (hook method)": [[8, "inferno.Hook.posthook"]], "prehook() (hook method)": [[8, "inferno.Hook.prehook"]], "register() (hook method)": [[8, "inferno.Hook.register"]], "registered (hook property)": [[8, "inferno.Hook.registered"]], "interpolation (class in inferno)": [[9, "inferno.Interpolation"]], "module (class in inferno)": [[10, "inferno.Module"]], "get_extra() (module method)": [[10, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[10, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[10, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[10, "inferno.Module.set_extra_state"]], "remotehook (class in inferno)": [[11, "inferno.RemoteHook"]], "add_inner() (remotehook method)": [[11, "inferno.RemoteHook.add_inner"]], "innerhook() (remotehook method)": [[11, "inferno.RemoteHook.innerhook"]], "on_eval_inner (remotehook property)": [[11, "inferno.RemoteHook.on_eval_inner"]], "on_train_inner (remotehook property)": [[11, "inferno.RemoteHook.on_train_inner"]], "remove_inner() (remotehook method)": [[11, "inferno.RemoteHook.remove_inner"]], "statehook (class in inferno)": [[12, "inferno.StateHook"]], "module (statehook property)": [[12, "inferno.StateHook.module"]], "register() (statehook method)": [[12, "inferno.StateHook.register"]], "empty() (in module inferno)": [[13, "inferno.empty"]], "exp() (in module inferno)": [[14, "inferno.exp"]], "full() (in module inferno)": [[15, "inferno.full"]], "holt_linear_smoothing() (in module inferno)": [[16, "inferno.holt_linear_smoothing"]], "interp_exp_decay() (in module inferno)": [[17, "inferno.interp_exp_decay"]], "interp_linear() (in module inferno)": [[18, "inferno.interp_linear"]], "interp_nearest() (in module inferno)": [[19, "inferno.interp_nearest"]], "interp_previous() (in module inferno)": [[20, "inferno.interp_previous"]], "hardweightdependence (class in inferno.learn)": [[21, "inferno.learn.HardWeightDependence"]], "lower() (hardweightdependence method)": [[21, "inferno.learn.HardWeightDependence.lower"]], "upper() (hardweightdependence method)": [[21, "inferno.learn.HardWeightDependence.upper"]], "layerwiseupdater (class in inferno.learn)": [[22, "inferno.learn.LayerwiseUpdater"]], "add_monitor() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.add_monitor"]], "add_monitors() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.add_monitors"]], "add_trainable() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.add_trainable"]], "attach() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.attach"]], "clear() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.clear"]], "del_monitor() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.del_monitor"]], "del_monitors() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.del_monitors"]], "del_trainable() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.del_trainable"]], "detach() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.detach"]], "forward() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.forward"]], "get_monitor() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.get_monitor"]], "get_monitors() (layerwiseupdater method)": [[22, "inferno.learn.LayerwiseUpdater.get_monitors"]], "monitors (layerwiseupdater property)": [[22, "inferno.learn.LayerwiseUpdater.monitors"]], "trainables (layerwiseupdater property)": [[22, "inferno.learn.LayerwiseUpdater.trainables"]], "maxrateclassifier (class in inferno.learn)": [[23, "inferno.learn.MaxRateClassifier"]], "assignments (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.assignments"]], "forward() (maxrateclassifier method)": [[23, "inferno.learn.MaxRateClassifier.forward"]], "infer() (maxrateclassifier method)": [[23, "inferno.learn.MaxRateClassifier.infer"]], "learn() (maxrateclassifier method)": [[23, "inferno.learn.MaxRateClassifier.learn"]], "nclass (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.nclass"]], "ndim (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.ndim"]], "occurances (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.occurances"]], "proportional (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.proportional"]], "proportions (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.proportions"]], "rates (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.rates"]], "shape (maxrateclassifier property)": [[23, "inferno.learn.MaxRateClassifier.shape"]], "stdp (class in inferno.learn)": [[24, "inferno.learn.STDP"]], "add_monitors() (stdp method)": [[24, "inferno.learn.STDP.add_monitors"]], "dt (stdp property)": [[24, "inferno.learn.STDP.dt"]], "forward() (stdp method)": [[24, "inferno.learn.STDP.forward"]], "lrpost (stdp property)": [[24, "inferno.learn.STDP.lrpost"]], "lrpre (stdp property)": [[24, "inferno.learn.STDP.lrpre"]], "softweightdependence (class in inferno.learn)": [[25, "inferno.learn.SoftWeightDependence"]], "lower() (softweightdependence method)": [[25, "inferno.learn.SoftWeightDependence.lower"]], "maxpow (softweightdependence property)": [[25, "inferno.learn.SoftWeightDependence.maxpow"]], "minpow (softweightdependence property)": [[25, "inferno.learn.SoftWeightDependence.minpow"]], "upper() (softweightdependence method)": [[25, "inferno.learn.SoftWeightDependence.upper"]], "weightdependence (class in inferno.learn)": [[26, "inferno.learn.WeightDependence"]], "hasmax (weightdependence property)": [[26, "inferno.learn.WeightDependence.hasmax"]], "hasmin (weightdependence property)": [[26, "inferno.learn.WeightDependence.hasmin"]], "lower() (weightdependence method)": [[26, "inferno.learn.WeightDependence.lower"]], "upper() (weightdependence method)": [[26, "inferno.learn.WeightDependence.upper"]], "wmax (weightdependence property)": [[26, "inferno.learn.WeightDependence.wmax"]], "wmin (weightdependence property)": [[26, "inferno.learn.WeightDependence.wmin"]], "updatebounding (class in inferno.learn.functional)": [[27, "inferno.learn.functional.UpdateBounding"]], "hard_lower_bounding() (in module inferno.learn.functional)": [[28, "inferno.learn.functional.hard_lower_bounding"]], "hard_upper_bounding() (in module inferno.learn.functional)": [[29, "inferno.learn.functional.hard_upper_bounding"]], "power_lower_bounding() (in module inferno.learn.functional)": [[30, "inferno.learn.functional.power_lower_bounding"]], "power_upper_bounding() (in module inferno.learn.functional)": [[31, "inferno.learn.functional.power_upper_bounding"]], "alif (class in inferno.neural)": [[32, "inferno.neural.ALIF"]], "adaptation (alif property)": [[32, "inferno.neural.ALIF.adaptation"]], "bsize (alif property)": [[32, "inferno.neural.ALIF.bsize"]], "clear() (alif method)": [[32, "inferno.neural.ALIF.clear"]], "dt (alif property)": [[32, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[32, "inferno.neural.ALIF.forward"]], "refrac (alif property)": [[32, "inferno.neural.ALIF.refrac"]], "spike (alif property)": [[32, "inferno.neural.ALIF.spike"]], "voltage (alif property)": [[32, "inferno.neural.ALIF.voltage"]], "adex (class in inferno.neural)": [[33, "inferno.neural.AdEx"]], "clear() (adex method)": [[33, "inferno.neural.AdEx.clear"]], "dt (adex property)": [[33, "inferno.neural.AdEx.dt"]], "forward() (adex method)": [[33, "inferno.neural.AdEx.forward"]], "clamping (class in inferno.neural)": [[34, "inferno.neural.Clamping"]], "connection (class in inferno.neural)": [[35, "inferno.neural.Connection"]], "bias (connection property)": [[35, "inferno.neural.Connection.bias"]], "biased (connection property)": [[35, "inferno.neural.Connection.biased"]], "binshape (connection property)": [[35, "inferno.neural.Connection.binshape"]], "boutshape (connection property)": [[35, "inferno.neural.Connection.boutshape"]], "bsize (connection property)": [[35, "inferno.neural.Connection.bsize"]], "clear() (connection method)": [[35, "inferno.neural.Connection.clear"]], "delay (connection property)": [[35, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[35, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[35, "inferno.neural.Connection.dt"]], "forward() (connection method)": [[35, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[35, "inferno.neural.Connection.inshape"]], "insize (connection property)": [[35, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[35, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[35, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[35, "inferno.neural.Connection.outshape"]], "outsize (connection property)": [[35, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[35, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[35, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[35, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[35, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[35, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[35, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[35, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[36, "inferno.neural.Conv2D"]], "bias (conv2d property)": [[36, "inferno.neural.Conv2D.bias"]], "biased (conv2d property)": [[36, "inferno.neural.Conv2D.biased"]], "binshape (conv2d property)": [[36, "inferno.neural.Conv2D.binshape"]], "boutshape (conv2d property)": [[36, "inferno.neural.Conv2D.boutshape"]], "bsize (conv2d property)": [[36, "inferno.neural.Conv2D.bsize"]], "clear() (conv2d method)": [[36, "inferno.neural.Conv2D.clear"]], "delay (conv2d property)": [[36, "inferno.neural.Conv2D.delay"]], "delayedby (conv2d property)": [[36, "inferno.neural.Conv2D.delayedby"]], "dt (conv2d property)": [[36, "inferno.neural.Conv2D.dt"]], "forward() (conv2d method)": [[36, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[36, "inferno.neural.Conv2D.inshape"]], "insize (conv2d property)": [[36, "inferno.neural.Conv2D.insize"]], "like_input() (conv2d method)": [[36, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[36, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[36, "inferno.neural.Conv2D.outshape"]], "outsize (conv2d property)": [[36, "inferno.neural.Conv2D.outsize"]], "postsyn_receptive() (conv2d method)": [[36, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[36, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[36, "inferno.neural.Conv2D.selector"]], "syncurrent (conv2d property)": [[36, "inferno.neural.Conv2D.syncurrent"]], "synspike (conv2d property)": [[36, "inferno.neural.Conv2D.synspike"]], "weight (conv2d property)": [[36, "inferno.neural.Conv2D.weight"]], "deltacurrent (class in inferno.neural)": [[37, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[37, "inferno.neural.DeltaCurrent.clear"]], "forward() (deltacurrent method)": [[37, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[37, "inferno.neural.DeltaCurrent.partialconstructor"]], "deltapluscurrent (class in inferno.neural)": [[38, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[38, "inferno.neural.DeltaPlusCurrent.clear"]], "forward() (deltapluscurrent method)": [[38, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[38, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "eif (class in inferno.neural)": [[39, "inferno.neural.EIF"]], "clear() (eif method)": [[39, "inferno.neural.EIF.clear"]], "dt (eif property)": [[39, "inferno.neural.EIF.dt"]], "forward() (eif method)": [[39, "inferno.neural.EIF.forward"]], "glif1 (class in inferno.neural)": [[40, "inferno.neural.GLIF1"]], "bsize (glif1 property)": [[40, "inferno.neural.GLIF1.bsize"]], "clear() (glif1 method)": [[40, "inferno.neural.GLIF1.clear"]], "dt (glif1 property)": [[40, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[40, "inferno.neural.GLIF1.forward"]], "refrac (glif1 property)": [[40, "inferno.neural.GLIF1.refrac"]], "spike (glif1 property)": [[40, "inferno.neural.GLIF1.spike"]], "voltage (glif1 property)": [[40, "inferno.neural.GLIF1.voltage"]], "glif2 (class in inferno.neural)": [[41, "inferno.neural.GLIF2"]], "adaptation (glif2 property)": [[41, "inferno.neural.GLIF2.adaptation"]], "bsize (glif2 property)": [[41, "inferno.neural.GLIF2.bsize"]], "clear() (glif2 method)": [[41, "inferno.neural.GLIF2.clear"]], "dt (glif2 property)": [[41, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[41, "inferno.neural.GLIF2.forward"]], "refrac (glif2 property)": [[41, "inferno.neural.GLIF2.refrac"]], "spike (glif2 property)": [[41, "inferno.neural.GLIF2.spike"]], "voltage (glif2 property)": [[41, "inferno.neural.GLIF2.voltage"]], "homogeneouspoissonencoder (class in inferno.neural)": [[42, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[42, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[42, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[42, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[42, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "izhikevich (class in inferno.neural)": [[43, "inferno.neural.Izhikevich"]], "clear() (izhikevich method)": [[43, "inferno.neural.Izhikevich.clear"]], "dt (izhikevich property)": [[43, "inferno.neural.Izhikevich.dt"]], "forward() (izhikevich method)": [[43, "inferno.neural.Izhikevich.forward"]], "lif (class in inferno.neural)": [[44, "inferno.neural.LIF"]], "bsize (lif property)": [[44, "inferno.neural.LIF.bsize"]], "clear() (lif method)": [[44, "inferno.neural.LIF.clear"]], "dt (lif property)": [[44, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[44, "inferno.neural.LIF.forward"]], "refrac (lif property)": [[44, "inferno.neural.LIF.refrac"]], "spike (lif property)": [[44, "inferno.neural.LIF.spike"]], "voltage (lif property)": [[44, "inferno.neural.LIF.voltage"]], "layer (class in inferno.neural)": [[45, "inferno.neural.Layer"]], "clear() (layer method)": [[45, "inferno.neural.Layer.clear"]], "connection (layer property)": [[45, "inferno.neural.Layer.connection"]], "forward() (layer method)": [[45, "inferno.neural.Layer.forward"]], "neuron (layer property)": [[45, "inferno.neural.Layer.neuron"]], "synapse (layer property)": [[45, "inferno.neural.Layer.synapse"]], "lineardense (class in inferno.neural)": [[46, "inferno.neural.LinearDense"]], "bias (lineardense property)": [[46, "inferno.neural.LinearDense.bias"]], "biased (lineardense property)": [[46, "inferno.neural.LinearDense.biased"]], "binshape (lineardense property)": [[46, "inferno.neural.LinearDense.binshape"]], "boutshape (lineardense property)": [[46, "inferno.neural.LinearDense.boutshape"]], "bsize (lineardense property)": [[46, "inferno.neural.LinearDense.bsize"]], "clear() (lineardense method)": [[46, "inferno.neural.LinearDense.clear"]], "delay (lineardense property)": [[46, "inferno.neural.LinearDense.delay"]], "delayedby (lineardense property)": [[46, "inferno.neural.LinearDense.delayedby"]], "dt (lineardense property)": [[46, "inferno.neural.LinearDense.dt"]], "forward() (lineardense method)": [[46, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[46, "inferno.neural.LinearDense.inshape"]], "insize (lineardense property)": [[46, "inferno.neural.LinearDense.insize"]], "like_input() (lineardense method)": [[46, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[46, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[46, "inferno.neural.LinearDense.outshape"]], "outsize (lineardense property)": [[46, "inferno.neural.LinearDense.outsize"]], "postsyn_receptive() (lineardense method)": [[46, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[46, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[46, "inferno.neural.LinearDense.selector"]], "syncurrent (lineardense property)": [[46, "inferno.neural.LinearDense.syncurrent"]], "synspike (lineardense property)": [[46, "inferno.neural.LinearDense.synspike"]], "weight (lineardense property)": [[46, "inferno.neural.LinearDense.weight"]], "lineardirect (class in inferno.neural)": [[47, "inferno.neural.LinearDirect"]], "bias (lineardirect property)": [[47, "inferno.neural.LinearDirect.bias"]], "biased (lineardirect property)": [[47, "inferno.neural.LinearDirect.biased"]], "binshape (lineardirect property)": [[47, "inferno.neural.LinearDirect.binshape"]], "boutshape (lineardirect property)": [[47, "inferno.neural.LinearDirect.boutshape"]], "bsize (lineardirect property)": [[47, "inferno.neural.LinearDirect.bsize"]], "clear() (lineardirect method)": [[47, "inferno.neural.LinearDirect.clear"]], "delay (lineardirect property)": [[47, "inferno.neural.LinearDirect.delay"]], "delayedby (lineardirect property)": [[47, "inferno.neural.LinearDirect.delayedby"]], "dt (lineardirect property)": [[47, "inferno.neural.LinearDirect.dt"]], "forward() (lineardirect method)": [[47, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[47, "inferno.neural.LinearDirect.inshape"]], "insize (lineardirect property)": [[47, "inferno.neural.LinearDirect.insize"]], "like_input() (lineardirect method)": [[47, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[47, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[47, "inferno.neural.LinearDirect.outshape"]], "outsize (lineardirect property)": [[47, "inferno.neural.LinearDirect.outsize"]], "postsyn_receptive() (lineardirect method)": [[47, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[47, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[47, "inferno.neural.LinearDirect.selector"]], "syncurrent (lineardirect property)": [[47, "inferno.neural.LinearDirect.syncurrent"]], "synspike (lineardirect property)": [[47, "inferno.neural.LinearDirect.synspike"]], "weight (lineardirect property)": [[47, "inferno.neural.LinearDirect.weight"]], "linearlateral (class in inferno.neural)": [[48, "inferno.neural.LinearLateral"]], "bias (linearlateral property)": [[48, "inferno.neural.LinearLateral.bias"]], "biased (linearlateral property)": [[48, "inferno.neural.LinearLateral.biased"]], "binshape (linearlateral property)": [[48, "inferno.neural.LinearLateral.binshape"]], "boutshape (linearlateral property)": [[48, "inferno.neural.LinearLateral.boutshape"]], "bsize (linearlateral property)": [[48, "inferno.neural.LinearLateral.bsize"]], "clear() (linearlateral method)": [[48, "inferno.neural.LinearLateral.clear"]], "delay (linearlateral property)": [[48, "inferno.neural.LinearLateral.delay"]], "delayedby (linearlateral property)": [[48, "inferno.neural.LinearLateral.delayedby"]], "dt (linearlateral property)": [[48, "inferno.neural.LinearLateral.dt"]], "forward() (linearlateral method)": [[48, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[48, "inferno.neural.LinearLateral.inshape"]], "insize (linearlateral property)": [[48, "inferno.neural.LinearLateral.insize"]], "like_input() (linearlateral method)": [[48, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[48, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[48, "inferno.neural.LinearLateral.outshape"]], "outsize (linearlateral property)": [[48, "inferno.neural.LinearLateral.outsize"]], "postsyn_receptive() (linearlateral method)": [[48, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[48, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[48, "inferno.neural.LinearLateral.selector"]], "syncurrent (linearlateral property)": [[48, "inferno.neural.LinearLateral.syncurrent"]], "synspike (linearlateral property)": [[48, "inferno.neural.LinearLateral.synspike"]], "weight (linearlateral property)": [[48, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[49, "inferno.neural.Neuron"]], "bsize (neuron property)": [[49, "inferno.neural.Neuron.bsize"]], "clear() (neuron method)": [[49, "inferno.neural.Neuron.clear"]], "dt (neuron property)": [[49, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[49, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[49, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[49, "inferno.neural.Neuron.refrac"]], "spike (neuron property)": [[49, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[49, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[50, "inferno.neural.Normalization"]], "poissonintervalencoder (class in inferno.neural)": [[51, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[51, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[51, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[52, "inferno.neural.QIF"]], "clear() (qif method)": [[52, "inferno.neural.QIF.clear"]], "dt (qif property)": [[52, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[52, "inferno.neural.QIF.forward"]], "synapse (class in inferno.neural)": [[53, "inferno.neural.Synapse"]], "clear() (synapse method)": [[53, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[53, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[53, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[53, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[53, "inferno.neural.Synapse.dt"]], "forward() (synapse method)": [[53, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[53, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[53, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[53, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[54, "inferno.neural.SynapseConstructor"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[55, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[55, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[56, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[56, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[57, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[57, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[58, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[59, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[60, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[61, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[62, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[63, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[64, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[65, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[66, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[67, "inferno.neural.functional.enc_poisson_interval_online"]], "trace_cumulative() (in module inferno.neural.functional)": [[68, "inferno.neural.functional.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno.neural.functional)": [[69, "inferno.neural.functional.trace_cumulative_scaled"]], "trace_nearest() (in module inferno.neural.functional)": [[70, "inferno.neural.functional.trace_nearest"]], "trace_nearest_scaled() (in module inferno.neural.functional)": [[71, "inferno.neural.functional.trace_nearest_scaled"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[72, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[73, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding() (in module inferno.neural.functional)": [[74, "inferno.neural.functional.voltage_thresholding"]], "voltage_thresholding_slope_intercept() (in module inferno.neural.functional)": [[75, "inferno.neural.functional.voltage_thresholding_slope_intercept"]], "batchmixin (class in inferno.neural.mixins)": [[76, "inferno.neural.mixins.BatchMixin"]], "bsize (batchmixin property)": [[76, "inferno.neural.mixins.BatchMixin.bsize"]], "shapemixin (class in inferno.neural.mixins)": [[77, "inferno.neural.mixins.ShapeMixin"]], "bshape (shapemixin property)": [[77, "inferno.neural.mixins.ShapeMixin.bshape"]], "bsize (shapemixin property)": [[77, "inferno.neural.mixins.ShapeMixin.bsize"]], "count (shapemixin property)": [[77, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[77, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptationmixin (class in inferno.neural.neurons.mixins)": [[78, "inferno.neural.neurons.mixins.AdaptationMixin"]], "adaptation (adaptationmixin property)": [[78, "inferno.neural.neurons.mixins.AdaptationMixin.adaptation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[79, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[79, "inferno.neural.neurons.mixins.CurrentMixin.current"], [84, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[80, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[80, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[81, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[81, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[82, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[82, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[83, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[83, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[84, "inferno.neural.synapses.mixins.CurrentMixin"]], "delayedspikecurrentaccessormixin (class in inferno.neural.synapses.mixins)": [[85, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin"]], "current_at() (delayedspikecurrentaccessormixin method)": [[85, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.current_at"]], "spike_at() (delayedspikecurrentaccessormixin method)": [[85, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.spike_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[86, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[87, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[87, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[88, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[88, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "normal() (in module inferno)": [[89, "inferno.normal"]], "normalize() (in module inferno)": [[90, "inferno.normalize"]], "cumulativetracereducer (class in inferno.observe)": [[91, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[91, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[91, "inferno.observe.CumulativeTraceReducer.fold"]], "initialize() (cumulativetracereducer method)": [[91, "inferno.observe.CumulativeTraceReducer.initialize"]], "interpolate() (cumulativetracereducer method)": [[91, "inferno.observe.CumulativeTraceReducer.interpolate"]], "emareducer (class in inferno.observe)": [[92, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[92, "inferno.observe.EMAReducer.fold"]], "initialize() (emareducer method)": [[92, "inferno.observe.EMAReducer.initialize"]], "interpolate() (emareducer method)": [[92, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[93, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[93, "inferno.observe.EventReducer.fold"]], "initialize() (eventreducer method)": [[93, "inferno.observe.EventReducer.initialize"]], "interpolate() (eventreducer method)": [[93, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[94, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[94, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[94, "inferno.observe.FoldReducer.data"]], "dt (foldreducer property)": [[94, "inferno.observe.FoldReducer.dt"]], "dump() (foldreducer method)": [[94, "inferno.observe.FoldReducer.dump"]], "forward() (foldreducer method)": [[94, "inferno.observe.FoldReducer.forward"]], "hlen (foldreducer property)": [[94, "inferno.observe.FoldReducer.hlen"]], "peek() (foldreducer method)": [[94, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[94, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[94, "inferno.observe.FoldReducer.view"]], "foldingreducer (class in inferno.observe)": [[95, "inferno.observe.FoldingReducer"]], "fold() (foldingreducer method)": [[95, "inferno.observe.FoldingReducer.fold"]], "initialize() (foldingreducer method)": [[95, "inferno.observe.FoldingReducer.initialize"]], "interpolate() (foldingreducer method)": [[95, "inferno.observe.FoldingReducer.interpolate"]], "inputmonitor (class in inferno.observe)": [[96, "inferno.observe.InputMonitor"]], "monitor (class in inferno.observe)": [[97, "inferno.observe.Monitor"]], "clear() (monitor method)": [[97, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[97, "inferno.observe.Monitor.dump"]], "peek() (monitor method)": [[97, "inferno.observe.Monitor.peek"]], "reducer (monitor property)": [[97, "inferno.observe.Monitor.reducer"]], "view() (monitor method)": [[97, "inferno.observe.Monitor.view"]], "nearesttracereducer (class in inferno.observe)": [[98, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[98, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[98, "inferno.observe.NearestTraceReducer.fold"]], "initialize() (nearesttracereducer method)": [[98, "inferno.observe.NearestTraceReducer.initialize"]], "interpolate() (nearesttracereducer method)": [[98, "inferno.observe.NearestTraceReducer.interpolate"]], "outputmonitor (class in inferno.observe)": [[99, "inferno.observe.OutputMonitor"]], "passthroughreducer (class in inferno.observe)": [[100, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[100, "inferno.observe.PassthroughReducer.fold"]], "initialize() (passthroughreducer method)": [[100, "inferno.observe.PassthroughReducer.initialize"]], "interpolate() (passthroughreducer method)": [[100, "inferno.observe.PassthroughReducer.interpolate"]], "postmonitor (class in inferno.observe)": [[101, "inferno.observe.PostMonitor"]], "premonitor (class in inferno.observe)": [[102, "inferno.observe.PreMonitor"]], "reducer (class in inferno.observe)": [[103, "inferno.observe.Reducer"]], "clear() (reducer method)": [[103, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[103, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[103, "inferno.observe.Reducer.forward"]], "peek() (reducer method)": [[103, "inferno.observe.Reducer.peek"]], "push() (reducer method)": [[103, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[103, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[104, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[104, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[104, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "initialize() (scaledcumulativetracereducer method)": [[104, "inferno.observe.ScaledCumulativeTraceReducer.initialize"]], "interpolate() (scaledcumulativetracereducer method)": [[104, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[105, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[105, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[105, "inferno.observe.ScaledNearestTraceReducer.fold"]], "initialize() (scalednearesttracereducer method)": [[105, "inferno.observe.ScaledNearestTraceReducer.initialize"]], "interpolate() (scalednearesttracereducer method)": [[105, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[106, "inferno.observe.StateMonitor"]], "ones() (in module inferno)": [[107, "inferno.ones"]], "rescale() (in module inferno)": [[108, "inferno.rescale"]], "scalar() (in module inferno)": [[109, "inferno.scalar"]], "simple_exponential_smoothing() (in module inferno)": [[110, "inferno.simple_exponential_smoothing"]], "sqrt() (in module inferno)": [[111, "inferno.sqrt"]], "lognormal (class in inferno.stats)": [[112, "inferno.stats.LogNormal"]], "cdf() (lognormal class method)": [[112, "inferno.stats.LogNormal.cdf"]], "logcdf() (lognormal class method)": [[112, "inferno.stats.LogNormal.logcdf"]], "logpdf() (lognormal class method)": [[112, "inferno.stats.LogNormal.logpdf"]], "mean() (lognormal class method)": [[112, "inferno.stats.LogNormal.mean"]], "params_mv() (lognormal class method)": [[112, "inferno.stats.LogNormal.params_mv"]], "pdf() (lognormal class method)": [[112, "inferno.stats.LogNormal.pdf"]], "sample() (lognormal class method)": [[112, "inferno.stats.LogNormal.sample"]], "sample_mv() (lognormal class method)": [[112, "inferno.stats.LogNormal.sample_mv"]], "validate() (lognormal class method)": [[112, "inferno.stats.LogNormal.validate"]], "variance() (lognormal class method)": [[112, "inferno.stats.LogNormal.variance"]], "normal (class in inferno.stats)": [[113, "inferno.stats.Normal"]], "cdf() (normal class method)": [[113, "inferno.stats.Normal.cdf"]], "logcdf() (normal class method)": [[113, "inferno.stats.Normal.logcdf"]], "logpdf() (normal class method)": [[113, "inferno.stats.Normal.logpdf"]], "mean() (normal class method)": [[113, "inferno.stats.Normal.mean"]], "params_mv() (normal class method)": [[113, "inferno.stats.Normal.params_mv"]], "pdf() (normal class method)": [[113, "inferno.stats.Normal.pdf"]], "sample() (normal class method)": [[113, "inferno.stats.Normal.sample"]], "sample_mv() (normal class method)": [[113, "inferno.stats.Normal.sample_mv"]], "validate() (normal class method)": [[113, "inferno.stats.Normal.validate"]], "variance() (normal class method)": [[113, "inferno.stats.Normal.variance"]], "poisson (class in inferno.stats)": [[114, "inferno.stats.Poisson"]], "cdf() (poisson class method)": [[114, "inferno.stats.Poisson.cdf"]], "logcdf() (poisson class method)": [[114, "inferno.stats.Poisson.logcdf"]], "logpmf() (poisson class method)": [[114, "inferno.stats.Poisson.logpmf"]], "mean() (poisson class method)": [[114, "inferno.stats.Poisson.mean"]], "pmf() (poisson class method)": [[114, "inferno.stats.Poisson.pmf"]], "sample() (poisson class method)": [[114, "inferno.stats.Poisson.sample"]], "validate() (poisson class method)": [[114, "inferno.stats.Poisson.validate"]], "variance() (poisson class method)": [[114, "inferno.stats.Poisson.variance"]], "tensorize() (in module inferno)": [[115, "inferno.tensorize"]], "manytomany (class in inferno.typing)": [[116, "inferno.typing.ManyToMany"]], "manytomanymethod (class in inferno.typing)": [[117, "inferno.typing.ManyToManyMethod"]], "manytoone (class in inferno.typing)": [[118, "inferno.typing.ManyToOne"]], "manytoonemethod (class in inferno.typing)": [[119, "inferno.typing.ManyToOneMethod"]], "onetomany (class in inferno.typing)": [[120, "inferno.typing.OneToMany"]], "onetomanymethod (class in inferno.typing)": [[121, "inferno.typing.OneToManyMethod"]], "onetoone (class in inferno.typing)": [[122, "inferno.typing.OneToOne"]], "onetoonemethod (class in inferno.typing)": [[123, "inferno.typing.OneToOneMethod"]], "uniform() (in module inferno)": [[124, "inferno.uniform"]], "zeros() (in module inferno)": [[125, "inferno.zeros"]], "inferno.learn": [[128, "module-inferno.learn"]], "module": [[128, "module-inferno.learn"], [129, "module-inferno.learn.functional"], [130, "module-inferno.neural"], [131, "module-inferno.neural.functional"], [133, "module-inferno.stats"]], "inferno.learn.functional": [[129, "module-inferno.learn.functional"]], "inferno.neural": [[130, "module-inferno.neural"]], "inferno.neural.functional": [[131, "module-inferno.neural.functional"]], "inferno.stats": [[133, "module-inferno.stats"]]}})