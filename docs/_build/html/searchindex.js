Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Module", "reference/generated/inferno.RecordModule", "reference/generated/inferno.StateHook", "reference/generated/inferno.astensors", "reference/generated/inferno.bounding.FullBounding", "reference/generated/inferno.bounding.HalfBounding", "reference/generated/inferno.bounding.lower_multiplicative", "reference/generated/inferno.bounding.lower_power", "reference/generated/inferno.bounding.lower_sharp", "reference/generated/inferno.bounding.multiplicative", "reference/generated/inferno.bounding.power", "reference/generated/inferno.bounding.sharp", "reference/generated/inferno.bounding.upper_multiplicative", "reference/generated/inferno.bounding.upper_power", "reference/generated/inferno.bounding.upper_sharp", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.exponential_smoothing", "reference/generated/inferno.full", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.interpolation.Interpolation", "reference/generated/inferno.interpolation.expdecay", "reference/generated/inferno.interpolation.expratedecay", "reference/generated/inferno.interpolation.linear", "reference/generated/inferno.interpolation.nearest", "reference/generated/inferno.interpolation.previous", "reference/generated/inferno.isi", "reference/generated/inferno.learn.CellTrainer", "reference/generated/inferno.learn.LayerwiseTrainer", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Biclique", "reference/generated/inferno.neural.Cell", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Serial", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.Updatable", "reference/generated/inferno.neural.Updater", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.DifferenceMonitor", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.FoldingReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.MonitorConstructor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.scalar", "reference/generated/inferno.sqrt", "reference/generated/inferno.stats.LogNormal", "reference/generated/inferno.stats.Normal", "reference/generated/inferno.stats.Poisson", "reference/generated/inferno.trace_cumulative", "reference/generated/inferno.trace_cumulative_scaled", "reference/generated/inferno.trace_nearest", "reference/generated/inferno.trace_nearest_scaled", "reference/generated/inferno.types.ManyToMany", "reference/generated/inferno.types.ManyToManyMethod", "reference/generated/inferno.types.ManyToOne", "reference/generated/inferno.types.ManyToOneMethod", "reference/generated/inferno.types.OneToMany", "reference/generated/inferno.types.OneToManyMethod", "reference/generated/inferno.types.OneToOne", "reference/generated/inferno.types.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/neural", "reference/neural-functional", "reference/observe", "reference/stats", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RecordModule.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.astensors.rst", "reference/generated/inferno.bounding.FullBounding.rst", "reference/generated/inferno.bounding.HalfBounding.rst", "reference/generated/inferno.bounding.lower_multiplicative.rst", "reference/generated/inferno.bounding.lower_power.rst", "reference/generated/inferno.bounding.lower_sharp.rst", "reference/generated/inferno.bounding.multiplicative.rst", "reference/generated/inferno.bounding.power.rst", "reference/generated/inferno.bounding.sharp.rst", "reference/generated/inferno.bounding.upper_multiplicative.rst", "reference/generated/inferno.bounding.upper_power.rst", "reference/generated/inferno.bounding.upper_sharp.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.exponential_smoothing.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.interpolation.Interpolation.rst", "reference/generated/inferno.interpolation.expdecay.rst", "reference/generated/inferno.interpolation.expratedecay.rst", "reference/generated/inferno.interpolation.linear.rst", "reference/generated/inferno.interpolation.nearest.rst", "reference/generated/inferno.interpolation.previous.rst", "reference/generated/inferno.isi.rst", "reference/generated/inferno.learn.CellTrainer.rst", "reference/generated/inferno.learn.LayerwiseTrainer.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Biclique.rst", "reference/generated/inferno.neural.Cell.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Serial.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.Updatable.rst", "reference/generated/inferno.neural.Updater.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_slope_intercept.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.DifferenceMonitor.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.FoldingReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.MonitorConstructor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.scalar.rst", "reference/generated/inferno.sqrt.rst", "reference/generated/inferno.stats.LogNormal.rst", "reference/generated/inferno.stats.Normal.rst", "reference/generated/inferno.stats.Poisson.rst", "reference/generated/inferno.trace_cumulative.rst", "reference/generated/inferno.trace_cumulative_scaled.rst", "reference/generated/inferno.trace_nearest.rst", "reference/generated/inferno.trace_nearest_scaled.rst", "reference/generated/inferno.types.ManyToMany.rst", "reference/generated/inferno.types.ManyToManyMethod.rst", "reference/generated/inferno.types.ManyToOne.rst", "reference/generated/inferno.types.ManyToOneMethod.rst", "reference/generated/inferno.types.OneToMany.rst", "reference/generated/inferno.types.OneToManyMethod.rst", "reference/generated/inferno.types.OneToOne.rst", "reference/generated/inferno.types.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/stats.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "DimensionalModule", "Hook", "Module", "RecordModule", "StateHook", "astensors", "FullBounding", "HalfBounding", "lower_multiplicative", "lower_power", "lower_sharp", "multiplicative", "power", "sharp", "upper_multiplicative", "upper_power", "upper_sharp", "empty", "exp", "exponential_smoothing", "full", "holt_linear_smoothing", "Interpolation", "expdecay", "expratedecay", "linear", "nearest", "previous", "isi", "CellTrainer", "LayerwiseTrainer", "MaxRateClassifier", "STDP", "ALIF", "AdEx", "Biclique", "Cell", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Serial", "Synapse", "SynapseConstructor", "Updatable", "Updater", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding", "voltage_thresholding_slope_intercept", "BatchMixin", "ShapeMixin", "AdaptationMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "DelayedSpikeCurrentAccessorMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "CumulativeTraceReducer", "DifferenceMonitor", "EMAReducer", "EventReducer", "FoldReducer", "FoldingReducer", "InputMonitor", "Monitor", "MonitorConstructor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "scalar", "sqrt", "LogNormal", "Normal", "Poisson", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.stats", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"inferno": [0, 2, 102, 142, 146, 147], "provid": [0, 6, 7, 40, 61, 115], "two": [0, 3, 5, 27, 40, 43, 44, 145, 147], "main": 0, "wai": [0, 2, 7, 41], "interact": [0, 9], "through": [0, 3, 43, 44, 54, 55, 56, 83, 84, 149], "its": [0, 2, 5, 7, 8, 34, 40, 41, 43, 50, 53, 65, 74, 75, 99, 147, 149], "interfac": 0, "The": [0, 2, 3, 5, 8, 9, 33, 34, 35, 36, 37, 40, 44, 46, 53, 59, 61, 65, 72, 73, 74, 75, 77, 78, 90, 94, 99, 101, 102, 104, 106, 108, 111, 112, 113, 118, 120, 122, 124, 144, 145, 147], "latter": [0, 145, 147], "can": [0, 2, 3, 6, 7, 34, 37, 38, 39, 49, 51, 53, 61, 85, 99, 104, 105, 108, 113, 146, 147], "distinguish": 0, "have": [0, 3, 5, 34, 41, 44, 53, 54, 55, 101, 102, 111, 112, 122, 124], "modul": [0, 5, 6, 8, 9, 34, 36, 37, 40, 41, 42, 43, 50, 53, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 104, 105, 106, 108, 113, 126, 128, 130, 132, 142], "name": [0, 5, 7, 8, 34, 35, 37, 40, 41, 42, 53, 58, 61, 65, 88, 90, 92, 94, 118, 119, 120], "which": [0, 2, 3, 5, 6, 7, 8, 9, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 120, 133, 144, 145, 146, 147, 149], "end": [0, 2, 15, 18, 21, 24, 26, 31, 33, 37, 38, 39, 44, 45, 46, 49, 51, 88, 98, 100, 107, 111, 112, 121, 122, 123, 124, 144, 145, 146, 147, 149], "In": [0, 2, 7, 8, 50, 59, 102, 146, 149], "gener": [0, 2, 3, 33, 35, 38, 39, 41, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 69, 70, 71, 74, 75, 76, 77, 78, 81, 82, 88, 96, 118, 119, 120, 133, 142, 145, 147], "i": [0, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 113, 118, 119, 120, 122, 124, 144, 145, 146, 147, 149], "great": 0, "get": [0, 34, 50, 74, 75], "off": [0, 34, 88], "ground": [0, 36], "quickli": 0, "lot": 0, "boilerpl": 0, "code": 0, "ensur": [0, 7], "tensor": [0, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 134], "shape": [0, 5, 22, 25, 38, 39, 45, 46, 47, 48, 49, 51, 52, 57, 60, 62, 63, 84, 85, 96, 114, 116, 133, 134], "compat": [0, 5, 7, 8, 41], "automat": [0, 5, 7, 34, 35, 36, 53, 69, 70, 71], "reduct": [0, 65], "batch": [0, 33, 36, 37, 38, 39, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 69, 70, 71, 74, 75, 76, 77, 78, 83, 84, 85, 92, 102], "axi": 0, "done": [0, 69, 70, 71], "you": [0, 5, 7], "meanwhil": [0, 3], "more": [0, 3, 5, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 65, 69, 70, 71, 142, 145], "control": [0, 49, 51, 60, 80, 82, 144, 147], "over": [0, 2, 8, 34, 36, 37, 38, 39, 44, 49, 54, 55, 56, 85, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 144, 145, 146, 147, 149], "flow": 0, "logic": [0, 40, 53, 61, 81, 82, 102, 122, 124], "allow": [0, 50, 74, 75, 98, 102, 107, 121, 123, 145], "greater": [0, 76], "custom": [0, 5, 37, 38, 39, 40, 49, 51, 85], "base": [0, 5, 6, 7, 8, 9, 11, 12, 22, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 142], "class": [0, 5, 6, 7, 8, 9, 11, 12, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 132], "extend": [0, 7, 96, 133], "implement": [0, 2, 5, 7, 9, 34, 35, 38, 39, 40, 43, 47, 51, 53, 57, 60, 61, 62, 64, 69, 71, 80, 81, 82, 102, 103, 142, 144, 145, 146], "subclass": [0, 6, 9, 34, 35, 43, 53, 57, 62, 64, 103], "us": [0, 2, 3, 6, 7, 10, 11, 12, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 51, 53, 54, 55, 56, 60, 61, 63, 65, 69, 71, 74, 79, 80, 92, 102, 105, 106, 118, 119, 120, 122, 124, 146, 147], "from": [0, 2, 5, 7, 8, 22, 25, 28, 29, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 65, 66, 67, 68, 74, 75, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 107, 108, 109, 111, 112, 114, 116, 118, 119, 120, 133, 134, 147, 149], "balanc": 0, "dedic": 0, "thi": [0, 2, 3, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 34, 38, 39, 40, 41, 43, 44, 49, 50, 51, 53, 57, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 102, 104, 105, 108, 113, 120, 122, 124, 133, 144, 145, 146, 147, 149], "certain": 0, "case": [0, 2, 15, 18, 21, 31, 37, 45, 46, 58, 88, 97, 98, 107, 111, 112, 121, 122, 123, 124, 144, 149], "mai": [0, 2, 7, 34, 37, 40, 44], "faster": [0, 50, 59], "less": [0, 34, 74, 75], "type": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "check": [0, 7, 122, 124], "need": [0, 7, 8, 50, 74, 75], "paramet": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 133, 134, 144, 145, 147], "remain": [0, 57, 69, 70, 71, 81, 82, 87, 88, 100, 145], "same": [0, 2, 5, 7, 8, 34, 44, 85, 98, 100, 101, 102, 106, 107, 109, 111, 112, 125, 126, 127, 128, 129, 130, 131, 132, 147], "multipl": [0, 2, 3, 13, 19, 33, 34, 44, 49, 82, 102, 111, 112, 144], "call": [0, 5, 6, 7, 8, 9, 34, 35, 40, 41, 42, 43, 53, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 102, 104, 105, 108, 113, 120, 146, 147], "pre": [0, 37, 43, 44, 54, 55, 56, 99, 144], "comput": [0, 2, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 36, 43, 50, 53, 59, 61, 115, 118, 119, 120], "initi": [0, 37, 44, 54, 55, 56, 57, 65, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 100, 101, 102, 103, 107, 109, 110, 111, 112], "unlik": [0, 9], "artifici": 0, "neuron": [0, 33, 35, 36, 38, 39, 40, 41, 43, 47, 48, 49, 51, 52, 53, 60, 61, 69, 70, 71, 79, 80, 81, 82, 85, 86, 87, 88, 89, 144, 149], "typic": [0, 7, 145, 147], "found": [0, 7], "ann": 0, "snn": 0, "ar": [0, 2, 5, 8, 10, 34, 35, 36, 37, 39, 40, 41, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 59, 60, 65, 66, 69, 70, 71, 74, 75, 76, 77, 78, 81, 82, 88, 90, 92, 94, 99, 102, 103, 104, 115, 118, 119, 120, 122, 124, 142, 144, 145, 146, 147], "fundament": 0, "state": [0, 5, 7, 8, 9, 24, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 60, 62, 64, 65, 81, 82, 98, 99, 100, 101, 102, 103, 105, 107, 109, 110, 111, 112, 113, 121, 122, 123, 124], "biolog": [0, 2, 3, 146], "electr": [0, 145, 146, 147, 149], "potenti": [0, 2, 3, 16, 17, 18, 19, 20, 21, 37, 38, 39, 41, 47, 48, 49, 51, 52, 57, 60, 69, 70, 71, 79, 80, 81, 82, 88, 144, 145, 146, 147, 149], "differ": [0, 8, 36, 37, 38, 39, 45, 46, 47, 49, 51, 52, 60, 69, 71, 79, 80, 82, 92, 98, 99, 102, 107, 121, 123, 145, 146, 147], "between": [0, 8, 27, 28, 29, 30, 31, 32, 40, 43, 45, 46, 50, 53, 59, 61, 74, 75, 76, 77, 78, 98, 100, 101, 102, 103, 107, 109, 111, 112, 144, 147], "interior": 0, "exterior": 0, "cell": [0, 34, 35, 37, 38, 39, 47, 49, 51, 52, 53, 60, 61, 79, 80, 145, 146, 147], "drive": 0, "forc": [0, 9], "behind": [0, 2], "action": [0, 2, 3, 38, 39, 41, 47, 48, 49, 51, 52, 57, 60, 69, 70, 71, 81, 82, 88, 145, 146, 147, 149], "simplifi": [0, 149], "when": [0, 2, 6, 7, 8, 9, 10, 34, 36, 37, 38, 39, 40, 42, 43, 44, 49, 51, 53, 54, 55, 56, 58, 61, 65, 69, 70, 71, 81, 82, 85, 92, 98, 99, 102, 104, 105, 107, 108, 113, 144, 145, 146], "": [0, 2, 6, 7, 8, 9, 24, 26, 28, 29, 30, 31, 32, 34, 37, 39, 42, 47, 50, 51, 53, 58, 59, 60, 61, 64, 69, 71, 74, 75, 76, 77, 78, 80, 97, 99, 100, 102, 105, 110, 111, 112, 113, 115, 122, 124, 145, 146, 147], "import": [0, 2, 7, 40], "treat": [0, 2, 37, 45, 46, 92], "variabl": [0, 2, 7], "separ": [0, 41, 44, 50, 59], "each": [0, 2, 5, 6, 8, 34, 35, 36, 40, 45, 46, 50, 53, 59, 102, 145, 146, 147, 149], "sampl": [0, 8, 27, 28, 29, 30, 31, 32, 36, 50, 59, 74, 75, 77, 78, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 118, 119, 120, 133], "present": [0, 5, 8, 34, 36, 37, 38, 39, 40, 43, 47, 48, 49, 50, 51, 52, 56, 57, 59, 60, 62, 66, 67, 68, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 102, 145], "dure": [0, 3, 57, 88], "fix": [0, 3, 38, 39, 47, 48, 49, 51, 52, 60, 120, 147], "hyperparamet": [0, 2, 37, 142], "do": [0, 34, 41, 83, 84], "duplic": [0, 34], "instead": [0, 2, 146], "broadcast": [0, 43, 46, 69, 70, 71, 72, 73], "some": [0, 2, 8, 100, 122, 124], "includ": [0, 7, 37, 38, 39, 43, 49, 51, 53, 59, 64, 77, 78, 84, 85, 102, 142], "adapt": [0, 3, 38, 39, 49, 51, 69, 70, 71, 72, 73, 85, 121, 122, 123, 124, 142], "behavior": [0, 8, 36, 37, 38, 39, 49, 50, 51, 74, 75, 85, 142, 145, 146], "input": [0, 2, 5, 6, 10, 22, 23, 25, 34, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 116, 117, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 144, 145, 146, 147, 149], "A": [0, 2, 5, 8, 37, 38, 39, 49, 51, 85, 120], "common": [0, 2, 45, 46, 57, 62, 63, 99, 104, 106, 108, 113], "exampl": [0, 5, 35, 40, 72, 73, 147], "an": [0, 2, 3, 5, 6, 7, 8, 9, 13, 16, 19, 22, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 65, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 84, 85, 88, 92, 98, 99, 101, 103, 107, 113, 120, 125, 126, 127, 128, 129, 130, 145, 146, 147, 149], "threshold": [0, 38, 39, 49, 51, 70, 71, 73, 81, 82, 142, 146, 147], "where": [0, 2, 8, 15, 18, 21, 33, 34, 36, 37, 40, 43, 44, 50, 53, 54, 55, 56, 59, 69, 70, 71, 74, 75, 76, 77, 78, 88, 92, 100, 102, 106, 144, 145, 146, 147, 149], "defin": [0, 2, 146], "minimum": [0, 5, 11, 12, 50, 74, 75, 115], "membran": [0, 3, 38, 39, 41, 47, 48, 49, 51, 52, 57, 60, 69, 70, 71, 79, 80, 81, 82, 85, 86, 89, 145, 146, 147], "spike": [0, 2, 33, 36, 37, 38, 39, 41, 43, 45, 46, 47, 49, 50, 51, 52, 57, 59, 60, 62, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 88, 90, 92, 93, 94, 95, 142, 146, 147, 149], "These": [0, 36, 40, 41, 46, 145, 146], "should": [0, 5, 6, 7, 8, 9, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 69, 70, 71, 74, 75, 85, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113], "share": [0, 34], "across": [0, 34, 38, 39, 40, 47, 49, 51, 52, 54, 55, 56, 60, 79, 80, 145, 146, 147], "all": [0, 2, 8, 10, 33, 34, 35, 40, 41, 53, 54, 56, 58, 64, 65, 74, 75, 76, 77, 78, 97, 98, 99, 102, 105, 110, 111, 115, 121, 122, 146], "contribut": [0, 2, 111, 112], "portion": 0, "updat": [0, 2, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 34, 36, 37, 38, 39, 41, 43, 49, 51, 53, 61, 69, 70, 71, 81, 82, 85, 106, 121, 122, 123, 124, 144], "also": [0, 3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 34, 37, 38, 39, 43, 44, 49, 51, 53, 54, 55, 56, 61, 76, 85, 122, 124, 146, 147], "appli": [0, 3, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 34, 37, 38, 40, 42, 44, 53, 54, 55, 56, 58, 61, 64, 65, 69, 70, 71, 72, 73, 102, 144, 145, 146, 147, 149], "weight": [0, 36, 37, 43, 44, 54, 55, 56, 66, 67, 68, 142], "bias": [0, 43, 44, 54, 55, 56, 66, 67], "handl": [0, 7], "either": [0, 2, 5, 8, 36, 40, 66, 71, 92, 99, 145], "reduc": [0, 2, 34, 36, 37, 38, 39, 40, 49, 65, 69, 70, 71, 85, 99, 102, 103, 104, 105, 108, 113], "output": [0, 6, 9, 22, 25, 26, 36, 40, 43, 44, 50, 53, 54, 55, 56, 59, 61, 74, 75, 76, 77, 78, 81, 82, 96, 101, 105, 108, 111, 112, 114, 116, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 144, 147], "along": [0, 5, 8, 40, 44, 58, 69, 70, 71, 84, 97, 102, 106, 115], "dimens": [0, 5, 8, 33, 36, 37, 38, 39, 40, 43, 44, 49, 50, 51, 54, 55, 56, 58, 59, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 97, 102, 115], "former": [0, 145], "effici": [0, 34], "make": [0, 106], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 142], "perform": [0, 2, 6, 8, 24, 26, 36, 42, 44, 58, 102, 103, 120, 121, 122, 123, 124], "But": 0, "might": 0, "necessari": 0, "hand": [0, 99, 102], "detail": [0, 37, 38, 39, 44, 45, 46, 47, 48, 49, 51, 52, 60, 69, 70, 71, 142], "inform": [0, 5, 6, 43, 57, 62, 65, 145], "process": [0, 34, 37, 40, 50, 53, 74, 75], "arxiv": [0, 145], "1909": 0, "02549": 0, "becaus": [0, 34], "unit": [0, 8, 98, 100, 101, 102, 107, 109, 111, 112, 149], "relev": [0, 9], "match": [0, 2, 54, 55, 56, 98, 101, 107, 111, 112, 121, 122, 123, 124], "theoret": 0, "continu": [0, 118], "descript": [0, 142], "specifi": [0, 5, 22, 25, 34, 36, 37, 41, 58, 61, 62, 65, 96, 97, 99, 108, 113, 114, 116, 133, 134, 144], "length": [0, 2, 8, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 98, 100, 101, 102, 103, 107, 109, 111, 112, 144, 145, 146, 147, 149], "given": [0, 5, 7, 8, 33, 34, 35, 36, 37, 40, 53, 59, 62, 77, 78, 81, 82, 102, 103, 105, 106, 110, 118, 119, 120, 142, 145, 146, 149], "millisecond": [0, 38, 39, 43, 47, 48, 49, 50, 51, 52, 57, 60, 62, 87, 98, 102, 107, 111, 112], "On": 0, "step": [0, 3, 8, 24, 26, 33, 34, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 98, 100, 101, 102, 103, 107, 109, 111, 112, 121, 122, 123, 124, 144, 145, 146, 147, 149], "amount": [0, 27, 36, 38, 39, 44, 49, 51, 69, 70, 120, 144], "ha": [0, 7, 34, 43, 44, 54, 55, 56, 61, 85, 88, 90, 92, 94, 99, 102, 113, 147, 149], "elaps": 0, "subtract": [0, 99], "inclus": [0, 42], "bound": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 42, 45, 46, 71, 92, 142], "zero": [0, 5, 8, 33, 44, 54, 55, 56, 58, 97, 98, 99, 100, 102, 107, 109, 111, 112, 120], "equal": [0, 2, 37, 40, 74, 75], "consid": [0, 2, 8, 24, 26, 98, 101, 102, 107, 111, 112, 120, 121, 122, 123, 124, 146], "out": [0, 8, 44, 45, 46, 92, 144], "therefor": [0, 5, 41, 102], "evenli": 0, "divis": 0, "simualt": [0, 38, 39, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 60], "practic": [0, 2], "round": 0, "up": 0, "next": [0, 8, 30, 38, 103], "integ": [0, 3, 8], "size": [0, 5, 8, 22, 25, 36, 38, 39, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 69, 70, 71, 74, 75, 76, 77, 78, 83, 84, 92, 96, 114, 133, 134], "affect": [0, 3, 122, 124, 142], "onli": [0, 2, 6, 7, 9, 34, 37, 41, 42, 44, 45, 53, 58, 65, 99, 102], "data": [0, 8, 22, 25, 27, 28, 29, 30, 31, 32, 37, 43, 44, 54, 55, 56, 85, 86, 89, 96, 97, 98, 100, 101, 102, 103, 107, 109, 111, 112, 114, 115, 116, 133, 134], "pass": [0, 6, 8, 9, 34, 35, 37, 38, 39, 40, 43, 44, 49, 51, 53, 54, 55, 56, 61, 85, 99, 102, 104, 105, 108, 113, 149], "itself": [0, 6, 9, 40, 43], "special": 0, "consideratin": 0, "must": [0, 5, 6, 7, 9, 34, 35, 40, 41, 43, 44, 46, 53, 57, 62, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 106, 108, 111, 112, 122, 124], "taken": [0, 65], "load": 0, "principl": 0, "record": [0, 8, 99, 102, 104, 105, 108, 110, 113], "e": [0, 2, 5, 7, 8, 23, 33, 34, 53, 59, 76, 77, 78, 118, 119, 120, 147], "g": [0, 7, 33, 34, 53], "synaps": [0, 41, 43, 44, 45, 46, 53, 54, 55, 56, 61, 63, 90, 91, 92, 93, 94, 95], "while": [0, 3, 38, 39, 47, 48, 49, 51, 52, 60, 81, 82], "durat": [0, 8, 98, 100, 101, 102, 103, 107, 109, 110, 111, 112], "chang": [0, 2, 5, 7, 8, 34, 37, 43, 44, 54, 55, 83, 84, 100, 144, 145, 149], "underli": [0, 2, 44, 53, 61, 99, 100, 102, 104, 105, 108, 113, 146, 147], "structur": [0, 40], "note": [0, 7, 146, 149], "properti": [0, 2, 5, 6, 7, 8, 9, 22, 25, 34, 36, 38, 39, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 102, 105, 107, 111, 112, 114, 116, 118, 119, 120, 133, 134, 146], "setter": [0, 56, 85, 90, 94], "modifi": [0, 2, 5, 6, 8, 22, 25, 53, 96, 99, 104, 105, 108, 113, 114, 116, 133, 134], "after": [0, 2, 5, 6, 8, 27, 38, 39, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 60, 62, 64, 66, 67, 68, 69, 70, 71, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 104, 105, 108, 113, 115, 145, 146, 147], "phenomenon": 2, "rate": [2, 29, 36, 37, 49, 50, 59, 71, 74, 75, 77, 78, 120, 144, 145, 146, 147], "quantiti": 2, "decreas": [2, 145], "proport": [2, 36, 144, 145, 146], "current": [2, 3, 8, 9, 24, 26, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 60, 62, 64, 69, 72, 79, 80, 81, 82, 86, 90, 91, 92, 93, 94, 98, 100, 101, 102, 103, 105, 107, 109, 110, 111, 112, 121, 122, 123, 124, 142, 144, 146, 147], "valu": [2, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 33, 36, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 76, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 107, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 145, 146, 147, 149], "It": [2, 34, 53, 147], "describ": [2, 142], "differenti": 2, "equat": 2, "tau": [2, 28, 37, 98, 100, 107, 111, 112, 121, 122, 123, 124], "frac": [2, 28, 30, 36, 38, 39, 44, 47, 49, 51, 52, 60, 69, 70, 74, 75, 80, 100, 118, 119, 120, 121, 122, 123, 124, 144, 145, 146, 147], "dn": 2, "dt": [2, 8, 38, 39, 43, 47, 48, 49, 51, 52, 57, 60, 62, 98, 102, 107, 111, 112, 144, 145, 146, 147], "n": [2, 50, 54, 55, 56, 72, 73, 74, 75, 118, 119, 120], "solut": [2, 144, 145, 146], "t": [2, 5, 8, 24, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 69, 70, 71, 74, 75, 76, 79, 80, 81, 82, 88, 98, 100, 107, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 149], "n_0": [2, 8, 33, 36, 50, 54, 55, 56, 59, 69, 70, 71, 74, 75, 76, 77, 78, 92, 102], "0": [2, 8, 15, 18, 21, 28, 29, 30, 31, 32, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 69, 70, 71, 83, 84, 88, 97, 98, 100, 101, 107, 109, 111, 112, 134, 144, 147, 149], "oft": 2, "neural": 2, "network": 2, "simul": [2, 3, 33, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 60, 62, 63, 69, 70, 71, 79, 80, 81, 82, 98, 102, 107, 111, 112, 145, 146, 147, 149], "involv": 2, "discret": [2, 8, 98, 102, 107, 111, 112, 120, 147, 149], "timestep": [2, 38], "those": [2, 38, 40, 43, 61], "thei": [2, 37, 76, 104], "often": [2, 144, 147], "appear": 2, "form": [2, 6, 7], "exp": [2, 28, 29, 36, 37, 38, 39, 47, 49, 52, 70, 79, 98, 100, 107, 111, 112, 118, 119, 121, 122, 123, 124, 144, 145, 146, 147], "left": [2, 28, 29, 36, 38, 39, 44, 47, 49, 51, 52, 56, 60, 69, 70, 71, 79, 80, 82, 99, 100, 102, 118, 119, 121, 122, 123, 124, 144, 145, 146, 147], "right": [2, 28, 29, 36, 38, 39, 44, 47, 49, 51, 52, 56, 60, 69, 70, 71, 79, 80, 82, 99, 100, 102, 118, 119, 121, 122, 123, 124, 144, 145, 146, 147], "wa": [2, 5, 8, 27, 34, 38, 39, 47, 49, 51, 52, 60, 69, 70, 71, 99], "solv": 2, "analyt": 2, "approxim": [2, 39, 47, 51, 60, 69, 71, 76, 80, 145, 147], "via": [2, 5, 41, 53], "euler": [2, 39, 47, 51, 60, 69, 71, 80], "method": [2, 5, 7, 8, 10, 34, 37, 39, 41, 43, 44, 47, 50, 51, 54, 55, 56, 60, 65, 69, 71, 74, 75, 76, 80, 90, 92, 94, 102, 103], "both": [2, 5, 99], "repres": [2, 5, 43, 46, 57, 62, 84, 88, 147], "select": [2, 8, 31, 32, 62, 92, 102], "model": [2, 3, 145], "term": [2, 37, 71, 144, 146], "long": [2, 144], "live": [2, 5], "correspond": [2, 7, 34, 38, 39, 40, 47, 48, 49, 51, 52, 53, 57, 60, 65, 69, 70, 71, 81, 82, 88, 118, 119], "under": [2, 144, 147], "relat": [2, 102, 142, 147], "ne": 2, "k": [2, 36, 69, 70, 71, 72, 73, 111, 112, 120, 122, 124, 126, 128, 130, 132], "That": [2, 144], "repeat": 2, "applic": [2, 98, 100, 101, 107, 109, 111, 112], "1": [2, 5, 8, 13, 15, 16, 18, 19, 21, 24, 26, 33, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 71, 72, 73, 74, 75, 76, 88, 97, 100, 114, 118, 119, 120, 142, 144, 145, 147, 149], "start": [2, 41, 147], "To": [2, 5, 8, 9, 22, 25, 50, 74, 75, 96, 114, 133, 134, 145, 146], "outsid": [2, 102], "notion": 2, "life": 2, "we": [2, 7], "ln": 2, "b": [2, 26, 36, 43, 44, 50, 54, 55, 56, 59, 69, 70, 71, 74, 75, 76, 77, 78, 92, 99, 113], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 120], "sometim": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21], "lambda": [2, 29, 36, 120, 146], "context": [2, 145], "frequent": 2, "aris": 2, "care": [2, 65], "histori": [2, 8, 98, 100, 101, 102, 103, 107, 109, 111, 112], "activ": [2, 5], "formal": 2, "sum": [2, 36, 37, 38, 39, 40, 49, 51, 85], "previou": [2, 28, 29, 30, 36, 45, 46, 92, 103, 109], "occur": [2, 5, 8, 9, 36, 37, 42, 45, 46, 58, 92, 120, 145, 146, 147, 149], "howev": [2, 34], "purpos": [2, 111, 112], "comparison": 2, "grow": 2, "complex": [2, 23, 24, 25, 26, 58, 97, 98, 107, 111, 112, 116, 117, 121, 122, 123, 124], "quadrat": [2, 51, 60, 80, 142], "respect": [2, 9, 37, 40, 44, 53, 54, 55, 56, 61, 66, 105], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 33, 36, 122, 124, 146], "than": [2, 33, 34, 36, 40, 61, 74, 75, 76, 122, 124, 146, 147], "everi": [2, 34, 50, 53, 74, 75], "prior": [2, 8, 9, 27, 28, 29, 30, 31, 32, 57, 88, 92, 98, 100, 101, 102, 103, 107, 109, 111, 112, 121, 122], "leav": [2, 146], "sort": [2, 5], "simplest": 2, "dx": 2, "x": [2, 15, 18, 21, 23, 24, 37, 51, 54, 55, 56, 98, 100, 107, 111, 112, 117, 118, 119, 121, 122, 123, 124, 149], "sum_f": 2, "f": [2, 37, 44, 50, 59, 74, 75, 76, 88, 98, 107, 111, 112, 121, 122, 123, 124], "amplitud": [2, 98, 107, 111, 112, 121, 122, 123, 124], "construct": [2, 22, 25, 45, 46, 53, 62, 63, 96, 99, 104, 105, 106, 108, 113, 114, 133, 134], "evalu": [2, 5, 6, 9, 34, 38, 39, 49, 51, 104], "otherwis": [2, 7, 31, 43, 45, 46, 50, 59, 64, 88, 98, 107, 108, 111, 112, 121, 122, 123, 124], "interpret": 2, "follow": [2, 3, 6, 43, 59, 77, 78, 92, 100, 102, 118, 119, 144, 146], "whenev": 2, "add": [2, 7, 34, 35, 37, 41, 64, 98, 111, 121, 122, 124], "four": 2, "variant": [2, 45, 46, 142], "discuss": 2, "below": [2, 145, 147], "featur": 2, "beyond": 2, "just": 2, "being": [2, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 38, 39, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 59, 60, 61, 74, 75, 76, 77, 78, 84, 99, 104, 105, 108, 113, 144], "previous": [2, 9, 42, 58, 102], "come": 2, "fact": 2, "factor": [2, 24, 26, 100, 147], "x_": [2, 24, 26, 37, 98, 100, 107, 111, 112, 121, 122, 123, 124, 144], "begin": [2, 15, 18, 21, 24, 26, 31, 37, 38, 39, 44, 45, 46, 49, 51, 88, 98, 100, 107, 111, 112, 121, 122, 123, 124, 144, 145, 146, 147, 149], "x_t": [2, 98, 107, 111, 112, 121, 122, 123, 124], "lvert": [2, 98, 107, 121, 123], "f_": [2, 37, 88, 98, 107, 111, 112, 121, 122, 123, 124, 144], "rvert": [2, 98, 107, 121, 123], "leq": [2, 98, 107, 118, 119, 120, 121, 123], "epsilon": [2, 58, 97, 98, 107, 121, 123], "text": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 33, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 98, 107, 111, 112, 118, 119, 120, 121, 122, 123, 124, 144, 145, 146, 147, 149], "here": [2, 9, 34, 142], "target": [2, 7, 8, 41, 53, 98, 99, 104, 105, 106, 107, 108, 113, 118, 119, 121, 123], "permiss": 2, "error": [2, 7], "For": [2, 5, 35, 37, 38, 39, 45, 46, 47, 48, 49, 51, 52, 53, 60, 69, 70, 71, 72, 73, 98, 99, 100, 107, 111, 112, 113], "set": [2, 5, 8, 22, 25, 34, 37, 38, 39, 43, 44, 49, 50, 51, 53, 54, 55, 59, 64, 65, 69, 70, 71, 74, 75, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 107, 109, 111, 112, 114, 121, 123, 133, 134, 144, 146, 147], "unspecifi": [2, 10, 40], "test": [2, 5, 34, 41, 98, 99, 101, 104, 107, 108, 111, 112, 113, 118, 119, 120, 122, 124], "wherea": [2, 5, 8], "addit": [2, 34, 43, 44, 49, 50, 54, 55, 56, 64, 74, 75, 82, 122, 124, 145, 146], "replac": [2, 45, 46, 92], "most": [2, 8, 27, 28, 29, 30, 31, 32, 37, 40, 43, 50, 74, 75, 98, 100, 101, 102, 103, 107, 109, 111, 112, 144, 145], "recent": [2, 8, 27, 28, 29, 30, 31, 32, 37, 43, 98, 100, 101, 102, 103, 107, 109, 111, 112, 144], "event": [2, 101, 120], "chosen": 2, "depend": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 43, 70, 71, 73, 83, 84, 108, 142, 146], "desir": [2, 58, 97, 118, 119], "formul": 2, "abov": [2, 39, 47, 145, 147], "ani": [2, 3, 6, 7, 8, 9, 10, 34, 35, 37, 41, 43, 46, 53, 56, 61, 66, 67, 99, 102, 103, 104, 105, 108, 113, 146, 147, 149], "exactli": 2, "toler": [2, 8, 92, 98, 102, 107, 121, 122, 123, 124], "meet": 2, "criterion": [2, 101, 111, 112], "compon": [2, 37, 122, 124, 145, 146], "ad": [2, 5, 8, 34, 35, 37, 41, 44, 50, 53, 58, 65, 66, 67, 68, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 102], "sf": [2, 111, 112, 122, 124], "hold": 2, "align": [2, 8, 24, 26, 38, 39, 44, 49, 51, 100, 144, 145, 146, 147], "neq": [2, 37, 149], "int_": 2, "infti": [2, 38, 49, 73, 145, 146, 147], "theta": [2, 15, 18, 21, 38, 49, 81, 82, 144, 145, 146, 147], "neg": [2, 5, 11, 16, 17, 18], "argument": [2, 6, 9, 34, 35, 36, 37, 40, 43, 44, 53, 54, 55, 56, 61, 99, 102, 105, 118, 119, 120], "posit": [2, 5, 11, 33, 53], "geq": [2, 15, 18, 21, 81, 82], "deriv": [2, 90, 92, 94, 118, 147], "d": [2, 8, 92, 102, 145, 146], "And": [2, 44, 144], "integr": [2, 38, 39, 47, 48, 49, 52, 57, 60, 62, 79, 80, 122, 124, 142, 149], "kind": 3, "absolut": [3, 38, 39, 47, 49, 51, 52, 60, 69, 70, 71, 79, 80, 81, 82, 88, 98, 107, 121, 123], "arp": [3, 88], "rel": [3, 27, 28, 29, 30, 31, 32, 34, 41, 98, 100, 101, 103, 107, 109, 111, 112, 118, 119], "rrp": 3, "cannot": [3, 5, 7, 8, 41, 83, 84, 145], "presynapt": [3, 37, 38, 39, 45, 46, 47, 48, 49, 51, 52, 60, 72, 79, 80, 81, 82, 144, 145, 146, 149], "doe": [3, 5, 8, 34, 90, 94, 120, 149], "depolar": [3, 147], "repolar": 3, "hyperpolar": 3, "mean": [3, 37, 38, 39, 40, 49, 85, 99, 104, 105, 108, 113, 118, 119, 120], "difficult": 3, "fire": [3, 38, 39, 47, 48, 49, 52, 60, 73, 142, 145], "imposs": 3, "time": [3, 5, 8, 9, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 142, 145, 146, 147, 149], "voltag": [3, 38, 39, 41, 47, 48, 49, 51, 52, 57, 60, 69, 70, 71, 73, 79, 80, 81, 82, 89, 142, 146, 147], "reset": [3, 8, 38, 39, 43, 45, 46, 47, 48, 49, 51, 52, 57, 60, 62, 71, 81, 82, 102, 145, 146, 147], "determin": [3, 10, 22, 25, 34, 44, 54, 55, 56, 77, 96, 98, 107, 114, 116, 133, 134], "strongli": 3, "constraint": [5, 8, 83, 84, 102], "tupl": [5, 10, 22, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 81, 82, 84, 85, 96, 97, 104, 114, 115, 118, 119, 133, 134], "int": [5, 8, 22, 23, 24, 25, 26, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 74, 75, 77, 78, 83, 84, 85, 96, 97, 98, 107, 111, 112, 114, 115, 116, 117, 121, 122, 123, 124, 133, 134], "bool": [5, 6, 8, 9, 22, 25, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 66, 67, 68, 74, 75, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 133, 134], "fals": [5, 8, 9, 33, 34, 36, 37, 42, 43, 44, 45, 46, 50, 53, 54, 55, 56, 58, 59, 61, 66, 67, 68, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 99, 102, 104, 108, 113], "sourc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "support": [5, 8, 44, 45, 46, 54, 55, 56, 62, 63], "dimension": [5, 44], "constrain": [5, 8, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "buffer": [5, 7, 8, 83, 92], "dim": [5, 8, 57, 58, 62, 63, 83, 84, 97, 115], "option": [5, 6, 8, 9, 22, 25, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 71, 74, 75, 76, 77, 78, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 133, 134], "attribut": [5, 7, 8, 34, 36, 41, 42, 53, 58, 64, 65, 84, 85, 88, 92, 99, 106, 113, 147], "default": [5, 6, 8, 9, 10, 22, 25, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 133, 134], "rais": [5, 6, 7, 8, 9, 23, 34, 35, 41, 43, 53, 57, 62, 64, 103, 105, 145], "valueerror": [5, 8, 34], "runtimeerror": [5, 6, 8, 34, 41, 64, 105], "persist": [5, 41], "dictionari": [5, 7, 8, 40, 41, 53, 61], "themselv": 5, "refer": [5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 39, 44, 45, 46, 47, 48, 49, 51, 52, 60, 65, 69, 70, 71, 105, 142, 144], "uniqu": [5, 34, 40, 41], "element": [5, 8, 10, 36, 40, 44, 53, 54, 55, 56, 58, 61, 74, 75, 76, 77, 78, 84, 97, 98, 101, 107, 111, 112, 121, 122, 123, 124], "place": [5, 53, 144], "least": [5, 6, 40], "three": [5, 40], "sinc": [5, 50, 74, 75, 101], "none": [5, 6, 8, 9, 10, 11, 16, 17, 18, 22, 24, 25, 26, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 54, 55, 56, 58, 59, 61, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 81, 82, 85, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 133, 134], "scalar": [5, 8, 10, 22, 25, 96, 114, 118, 119, 120, 133, 134], "ignor": [5, 6, 9, 99, 104, 108, 113], "torch": [5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 134], "return": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "classmethod": [5, 45, 46, 62, 99, 104, 108, 113, 118, 119, 120], "compatible_": 5, "dict": [5, 6, 7, 40, 53, 61, 105, 118, 119, 120], "compatible_lik": 5, "iter": [5, 34, 40, 41, 50, 53, 59, 75, 78], "creat": [5, 8, 34, 41, 44, 54, 55, 65, 66, 67, 68, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95], "new": [5, 8, 34, 36, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 64, 66, 67, 68, 83, 85, 86, 87, 89, 90, 91, 94, 95, 98, 102, 107, 111, 112, 121, 122, 123, 124], "like": [5, 7, 8, 22, 25, 37, 38, 39, 43, 44, 49, 51, 54, 55, 56, 62, 85, 96, 114, 116, 133, 134, 142], "nn": [5, 7, 9, 34, 42, 58], "_description_": [5, 8, 76], "compatible_like_": 5, "suffici": 5, "made": [5, 7, 65, 102], "result": [5, 8, 36, 40, 43, 44, 61, 98, 100, 101, 102, 107, 109, 111, 112, 118, 119, 120], "first": [5, 8, 33, 40, 45, 46, 53, 61, 72, 73, 74, 76, 77, 146], "last": [5, 8, 33, 41, 43, 57, 69, 70, 71, 88, 101, 102, 105, 149], "increas": [5, 38, 39, 47, 49, 51, 60, 69, 70, 80, 145, 147], "order": [5, 7, 8, 40, 58, 97, 102, 144], "deregister_constrain": [5, 8], "str": [5, 6, 7, 8, 34, 35, 37, 40, 41, 42, 43, 53, 57, 58, 61, 62, 64, 65, 99, 105, 106, 113, 118, 119, 120], "deregist": [5, 6, 8, 34], "If": [5, 6, 8, 10, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 60, 61, 64, 66, 69, 70, 71, 74, 75, 85, 99, 104, 106, 108], "isn": [5, 8], "noth": [5, 8, 90, 94], "fulli": [5, 7, 8, 42, 58], "qualifi": [5, 7, 8, 42, 58], "string": [5, 7, 8, 35, 40, 42, 58], "regist": [5, 6, 7, 8, 9, 34, 42, 43, 44, 53, 54, 55, 58, 61, 66, 67, 68, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 99, 104, 105, 106, 108, 113], "number": [5, 8, 23, 33, 34, 36, 40, 43, 44, 50, 54, 55, 56, 59, 65, 69, 70, 71, 74, 75, 76, 77, 78, 84, 92, 96, 102, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 133], "requir": [5, 22, 25, 35, 37, 44, 66, 67, 68, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 102, 114, 116, 122, 124, 133, 134], "dims_": 5, "extra_repr": [5, 43, 57, 62], "extra": [5, 7, 34, 43, 57, 62], "represent": [5, 53], "print": 5, "re": 5, "your": [5, 7], "own": [5, 34, 41], "singl": [5, 9, 40, 61, 102, 108], "line": 5, "multi": 5, "accept": 5, "liveconstrain": [5, 8], "enforc": [5, 102], "assign": [5, 7, 36, 56, 85], "reconstrain": [5, 8], "exist": [5, 7, 8, 33, 34, 36, 38, 64, 65, 102, 105], "ahead": [5, 8], "realloc": [5, 8], "remov": [5, 8, 34], "longer": [5, 8, 105], "would": [5, 8, 9, 35], "valid": [5, 7, 8, 41, 43, 65, 105, 118, 119, 120], "self": [5, 8, 34, 102], "register_constrain": [5, 8], "invalid": [5, 7, 8, 65], "attributeerror": [5, 7, 8, 34], "get_paramet": [5, 8], "point": [5, 50, 74, 75, 120, 147], "prehook": [6, 9, 99, 104, 105, 108, 113], "callabl": [6, 10, 11, 12, 27, 37, 38, 39, 40, 49, 51, 65, 85, 99, 102, 104, 105, 108, 113, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132], "posthook": [6, 99, 104, 105, 108, 113], "prehook_kwarg": [6, 105], "posthook_kwarg": [6, 105], "train_upd": [6, 9, 42, 58, 99, 104, 105, 108, 113], "true": [6, 8, 9, 34, 36, 38, 39, 42, 43, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 64, 74, 75, 99, 104, 105, 108, 113, 120], "eval_upd": [6, 9, 42, 58, 99, 104, 105, 108, 113], "object": [6, 7, 9, 34, 53, 61, 63, 64, 65, 68, 83, 85, 86, 87, 89, 91, 92, 95], "forward": [6, 9, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 99, 102, 104, 105, 108, 110, 113], "function": [6, 7, 9, 23, 37, 38, 39, 40, 42, 45, 46, 49, 51, 58, 61, 62, 64, 65, 69, 70, 71, 81, 82, 85, 92, 96, 99, 101, 102, 104, 105, 108, 111, 112, 113, 117, 118, 119, 120, 122, 124, 133, 144, 149], "register_forward_hook": [6, 105], "manag": [6, 65, 81, 82, 83, 84, 92], "removablehandl": 6, "befor": [6, 7, 8, 40, 42, 44, 56, 58, 61, 92, 99, 102, 103, 104, 105, 108, 113, 115, 145, 147], "keyword": [6, 34, 35, 37, 40, 43, 44, 53, 54, 55, 56, 61, 105], "register_forward_pre_hook": [6, 105], "run": [6, 9, 38, 39, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 57, 58, 60, 62, 99], "train": [6, 9, 33, 34, 38, 39, 42, 49, 50, 51, 58, 59, 74, 75, 76, 77, 78, 99, 104, 105, 108, 113, 142], "mode": [6, 9, 34, 37, 38, 39, 42, 45, 46, 49, 51, 57, 58, 99, 104, 105, 108, 113], "eval": [6, 9, 42, 58, 99, 104, 105, 108, 113], "signatur": [6, 45, 46, 62, 99, 104, 108, 113], "arg": [6, 7, 11, 12, 27, 62, 63, 105, 106, 110, 125, 126, 127, 128, 129, 130, 131, 132], "Or": 6, "with_kwarg": 6, "kwarg": [6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 99, 102, 105, 106, 110, 125, 126, 127, 128, 129, 130, 131, 132], "see": [6, 37, 65, 96, 105, 133, 146, 147], "further": 6, "one": [6, 34, 37, 38, 39, 41, 49, 51, 55, 56, 85, 127, 128, 129, 130, 131, 132, 144, 145], "still": [6, 34, 44, 50, 65, 74, 75, 98, 107, 121, 123], "safe": [6, 53], "evalexec": 6, "pytorch": [6, 7, 37, 38, 39, 49, 51, 85, 120], "typeerror": [6, 7], "instanc": [6, 7, 34, 43, 64, 99, 113], "warn": 6, "runtimewarn": 6, "alreadi": [6, 34], "registr": [6, 53], "trainexec": 6, "extens": 7, "so": [7, 34, 100, 149], "similar": [7, 37, 38, 39, 49, 51, 85, 122, 124], "regular": 7, "enabl": 7, "simpl": [7, 24, 72, 73], "export": 7, "addition": [7, 145], "__setattr__": 7, "__init__": 7, "parent": [7, 65], "child": 7, "constructor": [7, 34, 37, 41, 44, 45, 46, 54, 55, 56, 62, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 104, 106, 108, 113], "get_extra": 7, "throw": 7, "similarli": 7, "specif": [7, 43, 64, 118, 147], "get_submodul": 7, "look": 7, "referenc": [7, 105], "path": [7, 34, 41, 106], "termin": 7, "resolv": [7, 34], "someth": 7, "get_extra_st": 7, "state_dict": 7, "set_extra_st": 7, "store": [7, 8, 36, 37, 56, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113], "build": 7, "picklabl": 7, "work": [7, 108, 142], "serial": 7, "backward": 7, "guarante": [7, 34], "other": [7, 36, 40, 42, 53, 58, 61, 99, 104, 108, 113, 146], "break": 7, "pickl": 7, "register_extra": 7, "manner": [7, 103], "register_buff": 7, "except": [7, 9, 40, 42, 58, 122, 124, 146], "limit": [7, 11, 12, 13, 14, 15, 19, 20, 21, 37, 38, 39, 45, 46, 49, 51, 85, 92], "access": [7, 53, 61], "keyerror": 7, "empti": [7, 35, 98, 100, 101, 103, 104, 107, 109, 111, 112], "contain": [7, 26, 81, 82], "dot": [7, 34, 41, 99, 113], "notat": [7, 99, 113], "python": [7, 40], "identifi": [7, 40], "load_state_dict": 7, "within": [7, 8], "step_tim": [8, 28, 29, 30, 31, 32, 33, 37, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 62, 63, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 98, 100, 101, 102, 103, 107, 109, 110, 111, 112, 147], "float": [8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 97, 98, 100, 101, 102, 103, 107, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "dimensionalmodul": [8, 57, 83, 84, 86, 87, 88, 89], "index": [8, 43, 102], "restor": 8, "pointer": 8, "slice": [8, 50, 59, 75, 78], "overwrit": 8, "preserv": [8, 38, 39, 49, 51, 102], "latest_first": 8, "offset": [8, 41, 43], "full": [8, 116], "nativ": 8, "storag": [8, 102], "latest": [8, 24, 26, 107, 112, 121, 122, 123, 124], "roll": 8, "By": [8, 99], "zeroth": 8, "window": 8, "locat": [8, 118, 119], "oper": [8, 44, 103], "overwritten": 8, "retriev": [8, 34, 92, 102], "increment": 8, "write": 8, "recordsz": 8, "insert": [8, 40], "interp": [8, 102], "interpol": [8, 28, 29, 30, 31, 32, 45, 46, 92, 98, 100, 101, 102, 103, 107, 109, 111, 112], "1e": [8, 58, 97, 102], "07": [8, 102, 145], "without": [8, 122, 124, 145, 146, 147], "ever": 8, "attempt": [8, 85], "regardless": [8, 9, 34], "exact": [8, 101], "maximum": [8, 11, 12, 33, 36, 37, 44, 45, 46, 50, 54, 55, 56, 59, 62, 63, 76, 92, 102, 115], "co": [8, 37, 45, 46, 92], "7": [8, 102], "cdot": [8, 33, 36, 44, 50, 54, 55, 56, 59, 69, 70, 71, 74, 75, 76, 77, 78, 92, 102, 144], "ldot": [8, 33, 36, 50, 54, 55, 56, 59, 69, 70, 71, 74, 75, 76, 77, 78, 102], "mimic": 8, "gather": [8, 36, 102], "rang": [8, 42, 102], "thrown": 8, "avoid": [8, 61, 65], "clamp": [8, 34, 53, 76], "as_prehook": [9, 42, 58, 113], "prepend": [9, 35, 42, 58, 99, 104, 108, 113], "always_cal": [9, 42, 58], "hook": [9, 34, 41, 42, 53, 58, 99, 105, 113], "abc": [9, 35, 43, 53, 57, 62, 64, 103, 110], "act": 9, "even": [9, 34, 42, 58, 99, 113], "trigger": [9, 41, 145, 146, 147], "ignore_mod": 9, "execut": 9, "unregist": 9, "normal": [9, 36, 42, 115, 118, 149], "prevent": [9, 41], "manual": [9, 61, 83, 84], "configur": 9, "abstract": [9, 35, 43, 53, 57, 62, 64, 103, 110], "notimplementederror": [9, 34, 35, 43, 53, 57, 62, 103], "convers": 10, "convert": 10, "non": [10, 118, 119, 120], "leftmost": 10, "protocol": [11, 12, 27, 63, 106, 125, 126, 127, 128, 129, 130, 131, 132], "lower": [11, 12, 13, 14, 15, 16, 17, 18, 42, 71, 144, 145], "upper": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 144], "param": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 64, 65], "po": [11, 16, 17, 18], "part": 11, "scale": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 37, 50, 58, 59, 77, 78, 97, 111, 112, 118, 119, 122, 124], "max": [11, 16, 17, 18, 19, 20, 21, 37, 38, 39, 40, 42, 49, 51, 71, 85, 115, 144, 145], "min": [11, 13, 14, 15, 16, 17, 18, 40, 42, 115, 144], "partial": [12, 34, 41, 44, 45, 46, 54, 55, 56, 62, 99, 104, 108, 113], "soft": [13, 14, 16, 17, 19, 20, 37, 142], "equival": [13, 16, 19, 102, 146], "power": [13, 14, 16, 19, 20, 144], "expon": [13, 14, 16, 17, 19, 20], "u_": [13, 14, 15, 16, 17, 18, 19, 20, 21], "p": [13, 14, 15, 16, 17, 18, 19, 20, 21, 58, 97, 118, 119, 120], "p_": [13, 14, 15, 16, 17, 18, 19, 20, 21], "depress": [13, 14, 15, 16, 17, 18, 37, 144, 145], "mu_": [14, 17, 20, 144], "sharp": [15, 21, 39, 47, 147], "hard": [15, 18, 21, 37, 142], "u": [16, 17, 18], "upper_pow": 17, "lower_pow": 17, "dtype": [22, 25, 96, 101, 111, 112, 114, 116, 118, 119, 120, 133, 134], "layout": [22, 25, 96, 114, 116, 133, 134], "devic": [22, 25, 96, 114, 116, 133, 134], "requires_grad": [22, 25, 66, 67, 68, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 114, 116, 133, 134], "uniniti": 22, "overrid": [22, 25, 34, 36, 37, 96, 114, 116, 133, 134], "gradient": [22, 25, 66, 67, 68, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 114, 116, 133, 134], "ndarrai": [23, 117], "agnost": [23, 117], "exponenti": [23, 24, 26, 28, 29, 37, 38, 39, 47, 49, 50, 51, 52, 60, 69, 70, 71, 74, 75, 79, 80, 98, 100, 107, 111, 112, 121, 122, 123, 124, 142, 145], "y": [23, 54, 55, 56, 117, 146], "numpi": [23, 117], "ob": [24, 26, 98, 100, 101, 103, 107, 109, 111, 112], "level": [24, 26, 37], "alpha": [24, 26, 100], "smooth": [24, 26, 100], "s_0": [24, 26, 100], "x_0": [24, 26, 100], "s_": [24, 26, 100], "s_t": [24, 26, 100], "revis": [24, 26], "fill": [25, 96, 98, 100, 101, 103, 107, 109, 111, 112, 114, 116, 133, 134], "trend": 26, "beta": 26, "holt": 26, "linear": [26, 35, 38, 54, 55, 56, 69, 70, 71, 72, 73, 79, 100, 142, 147], "b_0": 26, "x_1": 26, "b_": 26, "b_t": 26, "prev_data": [27, 28, 29, 30, 31, 32, 98, 100, 101, 103, 107, 109, 111, 112], "observ": [27, 28, 29, 30, 31, 32, 37, 45, 46, 92, 98, 99, 100, 101, 102, 103, 105, 107, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 124], "next_data": [27, 28, 29, 30, 31, 32, 98, 100, 101, 103, 107, 109, 111, 112], "subsequ": [27, 28, 29, 30, 31, 32, 46, 98, 100, 101, 103, 107, 109, 111, 112], "sample_at": [27, 28, 29, 30, 31, 32, 98, 100, 101, 103, 107, 109, 111, 112], "step_data": [27, 28, 29, 30, 31, 32, 98, 100, 101, 103, 107, 109, 111, 112], "measur": [27, 102], "time_const": [28, 47, 48, 52, 60, 69, 70, 79, 80, 98, 107, 111, 112], "decai": [28, 29, 36, 37, 38, 39, 47, 49, 51, 52, 60, 69, 70, 71, 79, 80, 98, 107, 111, 112, 121, 122, 123, 124, 145, 146], "d_": [28, 29, 30, 31, 32, 144], "constant": [28, 37, 38, 39, 47, 49, 51, 52, 60, 69, 70, 71, 79, 80, 98, 100, 107, 111, 112, 144, 145, 146, 147], "decay_r": [29, 36], "linearlli": 30, "time_first": 33, "transform": [33, 40, 54, 55, 56, 61], "inter": [33, 50, 74, 75, 92], "interv": [33, 44, 50, 54, 55, 56, 59, 74, 75, 77, 78], "pad": [33, 40, 44], "nan": 33, "could": 33, "fewer": 33, "final": [33, 40], "calcul": [33, 36, 37, 103, 146], "m": [33, 37, 38, 39, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 59, 60, 62, 63, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 92, 145, 146, 147, 149], "interspik": 33, "c": [33, 40, 44], "popul": 33, "etc": [33, 53], "amongst": [33, 34], "add_cel": [34, 35, 37], "aux": 34, "auxiliari": [34, 37], "add_monitor": 34, "attr": [34, 41, 42, 43, 58, 99, 106, 113], "monitor": [34, 37, 41, 53, 99, 104, 106, 108, 113, 145], "monitorconstructor": [34, 41, 99, 104, 108, 113], "tag": [34, 41], "trainabl": [34, 41, 43, 65], "seper": 34, "alias": [34, 41], "pool": [34, 41], "layer": [34, 35, 37, 40, 41, 61], "bypass": 34, "cours": 34, "delet": [34, 43, 53, 64, 65], "yield": [34, 50, 53, 59, 75, 78], "clear": [34, 38, 39, 43, 45, 46, 47, 48, 49, 51, 52, 53, 57, 60, 62, 64, 65, 99, 102, 105, 110], "trainer": [34, 37], "overridden": [34, 37], "well": [34, 67, 142], "doesn": [34, 69, 70, 71], "del_cel": 34, "strictli": [34, 120], "again": [34, 40], "associ": [34, 41, 50, 53, 59, 64], "del_monitor": 34, "get_cel": 34, "get_monitor": [34, 41], "togeth": 34, "possibl": [34, 36, 102], "named_cel": [34, 53], "named_monitor": 34, "named_monitors_of": 34, "associt": 34, "put": 34, "cumul": [34, 37, 53, 98, 111, 118, 119, 120], "onc": 34, "celltrain": 35, "add_lay": 35, "prefix": 35, "connect": [35, 40, 41, 44, 53, 54, 55, 56, 61, 62, 63, 66, 67, 68, 144], "alif": [35, 142], "l0": 35, "num_class": 36, "classifi": 36, "per": [36, 44, 92], "intern": [36, 56, 84], "learn": [36, 37, 38, 39, 43, 44, 49, 51, 54, 55, 56], "multipli": [36, 122, 124, 146], "them": [36, 40, 88, 99, 104, 105, 108, 113, 142], "b_k": [36, 39, 51, 69, 71, 145, 147], "group": [36, 38, 39, 40, 43, 45, 46, 47, 49, 51, 52, 57, 60, 61, 62, 63, 69, 70, 71, 84], "total": [36, 145, 146, 147, 149], "logit": 36, "label": 36, "infer": 36, "truth": 36, "predict": 36, "were": [36, 40], "averag": [36, 69, 70, 71, 100], "nclass": 36, "ndim": 36, "exclud": [36, 43, 44, 54, 55, 56, 57, 62, 63, 84], "l_1": 36, "raw": 36, "recalcul": 36, "lr_post": 37, "lr_pre": 37, "tc_post": 37, "tc_pre": 37, "delai": [37, 41, 43, 44, 45, 46, 54, 55, 56, 62, 63, 66, 92, 142], "interp_toler": 37, "trace_mod": 37, "liter": [37, 40, 45, 46], "nearest": [37, 45, 46, 102, 107, 112], "batch_reduct": [37, 38, 39, 49, 51, 85], "layerwisetrain": 37, "plastic": [37, 142], "delta": [37, 38, 39, 45, 46, 47, 49, 50, 51, 52, 59, 60, 69, 70, 71, 74, 75, 76, 79, 80, 98, 100, 107, 111, 112, 121, 122, 123, 124, 142, 144, 145, 146, 147], "w": [37, 44, 54, 55, 56, 144], "a_": [37, 144], "bigl": 37, "post": [37, 43, 44, 54, 55, 56, 99, 144], "bigr": 37, "trace": [37, 98, 107, 111, 112, 121, 122, 123, 124, 142], "eta_": [37, 144], "although": [37, 65, 120, 147], "sign": [37, 144], "sgn": 37, "ltp": [37, 144], "ltd": [37, 144], "hebbian": [37, 142], "anti": [37, 142], "postsynapt": [37, 43, 57, 69, 70, 71, 88, 144, 145], "tau_": [37, 144], "assum": [37, 40, 43, 61, 85, 99, 102], "basi": 37, "keep": [37, 38, 39, 49, 51, 85], "origin": [37, 38, 39, 49, 51, 85, 102], "visit": [37, 38, 39, 45, 46, 47, 48, 49, 51, 52, 60, 69, 70, 71, 72, 73], "zoo": [37, 38, 39, 45, 46, 47, 48, 49, 51, 52, 60, 69, 70, 71, 72, 73], "rest_v": [38, 39, 47, 48, 49, 51, 52, 60, 69, 71, 79, 80, 82], "reset_v": [38, 39, 47, 48, 51, 52, 60, 81], "thresh_eq_v": [38, 49, 147], "refrac_t": [38, 39, 47, 48, 49, 51, 52, 60, 81, 82, 88], "tc_membran": [38, 39, 49, 51], "tc_adapt": [38, 39, 51], "spike_incr": [38, 39, 49, 51, 69, 70], "resist": [38, 39, 47, 48, 49, 51, 52, 60, 79, 80, 146], "batch_siz": [38, 39, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 60, 62, 63, 83, 84], "adaptationmixin": [38, 39, 49, 51], "voltagemixin": [38, 39, 47, 48, 49, 51, 52, 60], "spikerefractorymixin": [38, 39, 47, 48, 49, 51, 52, 60], "leaki": [38, 48, 49, 52, 142], "dynam": [38, 39, 45, 46, 47, 48, 49, 51, 52, 57, 60, 62, 65, 79, 80, 81, 82, 145, 146, 147], "v_m": [38, 39, 47, 49, 51, 52, 60, 69, 71, 79, 80, 81, 82, 145, 146, 147], "v_": [38, 39, 47, 49, 51, 52, 60, 69, 71, 79, 80, 81, 82, 145, 146, 147], "rest": [38, 39, 45, 46, 47, 48, 49, 51, 52, 57, 60, 62, 69, 71, 79, 80, 82, 145, 146, 147], "r_mi": [38, 39, 47, 49, 51, 52, 60, 79, 80, 146, 147], "tau_m": [38, 39, 47, 49, 51, 52, 60, 79, 80, 146, 147], "theta_": [38, 49, 71, 73, 145, 146, 147], "sum_k": [38, 39, 49, 51, 145, 146, 147], "theta_k": [38, 49, 70, 71, 73, 145, 146], "tau_k": [38, 39, 51, 69, 70, 121, 122, 123, 124, 145, 146, 147], "leftarrow": [38, 39, 47, 49, 51, 52, 60, 69, 70, 71, 81, 82, 145, 146, 147], "d_k": [38, 49, 51, 145, 146, 147], "equilibrium": [38, 39, 47, 49, 51, 52, 60, 69, 71, 73, 79, 80, 82, 145, 146, 147], "mv": [38, 39, 47, 49, 51, 52, 60, 69, 70, 71, 73, 79, 80, 81, 82, 89, 145, 146, 147], "refractori": [38, 39, 47, 48, 49, 50, 51, 52, 57, 60, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88], "period": [38, 39, 47, 48, 49, 50, 51, 52, 57, 60, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88], "r_m": [38, 39, 47, 49, 51, 52, 60, 79, 80, 146], "omega": [38, 39, 47, 49, 51, 52, 60, 79, 80, 146], "keep_adapt": [38, 39, 49, 51], "refrac_lock": [38, 39, 47, 48, 49, 51, 52, 60], "na": [38, 39, 47, 48, 49, 51, 52, 60, 69, 72, 79, 80, 81, 82, 86, 90, 91, 93, 145, 146, 147, 149], "rheobase_v": [39, 47], "thresh_v": [39, 47, 48, 51, 52, 60, 81, 82, 147], "voltage_coupl": [39, 51, 69], "delta_t": [39, 47, 147], "v_t": [39, 47, 147], "i_x": [39, 46, 51, 145, 147, 149], "w_k": [39, 51, 69, 72, 145, 147], "a_k": [39, 69, 70, 71, 145, 147], "approach": [39, 47, 147], "rapidli": [39, 47], "steep": [39, 47, 147], "natur": [39, 47, 51, 60, 80, 118, 119, 120], "rheobas": [39, 47, 147], "strength": [39, 51, 60, 69, 80], "coupl": [39, 51, 69, 145, 147], "mu": [39, 51, 69, 118, 119, 145, 146, 147], "onetoon": [40, 44, 54, 55, 56, 61, 81, 82, 101, 102, 111, 112], "combin": 40, "stack": 40, "prod": [40, 54, 55, 56], "complet": 40, "bipartit": 40, "graph": 40, "second": [40, 53, 61, 146], "third": 40, "take": [40, 76, 90, 94, 108, 117, 125, 126, 127, 128, 129, 130, 131, 132, 144], "reshap": [40, 43, 44, 54, 55, 56], "einop": 40, "produc": 40, "receiv": [40, 61, 104], "ouput": 40, "especi": 40, "captur": [40, 61], "py": [40, 43, 44, 53, 54, 55, 56, 61], "meth": [40, 43, 44, 54, 55, 56, 61], "wire": [40, 53, 61], "topologi": [40, 61], "ident": [40, 61, 108, 113], "submodul": [41, 106], "compos": [41, 43, 99], "map": [41, 99, 102, 104, 108, 113], "alia": [41, 48], "search": 41, "alwai": [41, 92], "member": 41, "head": 41, "chain": 41, "directli": [41, 109], "reflect": 41, "futur": [41, 142], "postspik": 41, "postvoltag": 41, "millivolt": [41, 57, 89], "precurr": 41, "syncurr": [41, 43], "synapt": [41, 43, 44, 45, 46, 54, 55, 56, 62, 90, 91, 92, 93, 94], "prespik": 41, "synspik": [41, 43], "statehook": [42, 58], "bia": [43, 44, 54, 55, 56, 66, 67], "learnabl": [43, 44, 54, 55, 56, 66, 67, 68], "binshap": 43, "boutshap": [43, 54, 55, 56], "bsize": [43, 57, 83, 84], "clearabl": 43, "defaultupdat": [43, 64], "exclude_weight": 43, "exclude_bia": 43, "exclude_delai": 43, "delayedbi": 43, "newli": [43, 63, 106], "maxmimum": 43, "inshap": [43, 44, 54, 55, 56], "insiz": 43, "cach": 43, "refresh": 43, "like_input": [43, 44, 54, 55, 56], "like_synapt": [43, 44, 54, 55, 56], "outshap": [43, 44, 54, 55, 56], "outsiz": 43, "postsyn_recept": [43, 44, 54, 55, 56], "l": 43, "presyn_recept": [43, 44, 54, 55, 56], "selector": [43, 44, 45, 46, 54, 55, 56, 62, 92], "height": 44, "width": 44, "channel": 44, "filter": [44, 99, 104, 108, 113], "kernel": 44, "stride": 44, "dilat": 44, "synapseconstructor": [44, 45, 46, 54, 55, 56, 62], "weight_init": [44, 54, 55, 56], "bias_init": [44, 54, 55, 56], "delay_init": [44, 54, 55, 56], "weightbiasdelaymixin": [44, 54, 55, 56], "convolut": 44, "spatial": 44, "plane": 44, "expect": [44, 50, 53, 54, 55, 56, 59, 74, 75, 76, 77, 78, 108, 118, 119, 120], "inner": [44, 54, 55, 56], "h": 44, "kh": 44, "kw": 44, "delay_": [44, 54, 55, 66], "alter": [44, 54, 55, 102], "effect": [44, 54, 55, 145, 147], "unless": [44, 54, 55], "later": [44, 54, 55], "uniform": [44, 54, 55, 56], "random": [44, 54, 55, 56, 96, 118, 119, 120, 133], "rand": [44, 54, 55, 56, 133], "anoth": [44, 92], "h_": 44, "w_": [44, 144], "formula": 44, "document": 44, "lfloor": [44, 120], "2": [44, 49, 118, 119, 120, 142, 147], "p_h": 44, "d_h": 44, "k_h": 44, "s_h": 44, "rfloor": [44, 120], "p_w": 44, "d_w": 44, "k_w": 44, "s_w": 44, "ph": 44, "pw": 44, "side": [44, 146], "dh": 44, "dw": [44, 144], "sh": 44, "sw": 44, "reli": 44, "upon": [44, 147], "expand": 44, "consequenti": 44, "memori": [44, 50, 59], "spike_q": [45, 46], "interp_mod": [45, 46], "interp_tol": [45, 46], "current_overbound": [45, 46], "spike_overbound": [45, 46], "delayedspikecurrentaccessormixin": [45, 46], "spikederivedcurrentmixin": 45, "memoryless": [45, 46], "respond": [45, 46, 145], "instantan": [45, 46], "q": [45, 46, 149], "charg": [45, 46, 149], "carri": [45, 46, 149], "pc": [45, 46, 149], "cuba": [45, 46, 142], "partialconstructor": [45, 46, 62, 99, 104, 108, 113], "spikecurrentmixin": 46, "passthrough": [46, 109], "inject": 46, "glif": [48, 49, 142, 145, 146], "lif": [48, 142], "reset_v_add": 49, "reset_v_mul": 49, "rc_adapt": 49, "lambda_k": [49, 146], "m_v": [49, 82, 146], "b_v": [49, 82, 146], "unitless": [49, 51, 60, 80, 82, 121, 122, 123, 124, 147], "frequenc": [50, 59, 74, 75, 76, 77, 78, 145], "refrac": [50, 57, 69, 70, 71, 74, 75, 81, 82, 87, 88], "compens": [50, 74, 75, 77, 78, 120], "generatormixin": [50, 59], "refractorystepmixin": 50, "encod": [50, 59], "poisson": [50, 59, 74, 75, 76, 77, 78], "distribut": [50, 59, 74, 75, 76, 77, 78, 118, 119, 120], "randomli": [50, 74, 75], "hz": [50, 59, 74, 75, 76, 77, 78], "pseudorandom": [50, 59, 74, 75, 77, 78, 96, 118, 119, 120, 133], "distanc": [50, 74, 75], "th": [50, 69, 70, 71, 74, 75], "onlin": [50, 59], "intens": [50, 59], "hertz": [50, 59], "pin": 50, "crit_v": [51, 60, 80], "affin": [51, 60, 80], "crit": [51, 60, 80, 147], "drift": [51, 60, 80], "toward": [51, 60, 80, 146, 147], "awai": [51, 60, 80, 147], "simultan": 53, "proxi": 53, "connection_nam": [53, 61], "neuron_nam": [53, 61], "neither": 53, "nor": 53, "reassign": 53, "primarili": 53, "connection_kwarg": [53, 61], "neuron_kwarg": [53, 61], "capture_intermedi": [53, 61], "kei": 53, "__call__": 53, "turn": [53, 99, 113], "unpack": 53, "named_connect": 53, "named_neuron": 53, "named_synaps": 53, "named_updat": 53, "accumul": [53, 64, 65], "in_shap": 54, "out_shap": 54, "interc": [54, 56], "m_0": 54, "unbatch": [54, 55, 56], "odot": [55, 56], "inputoutput": [55, 56], "i_n": 56, "lineardens": 56, "creation": 56, "mask": [56, 79, 80, 122, 124], "shapemixin": [57, 62], "12": [58, 97, 145], "norm": [58, 97], "demonin": [58, 97], "stepmixin": 59, "replic": [59, 77, 78, 84], "bindsnet": [59, 77, 78], "parameter": [59, 77, 78, 144], "invers": [59, 77, 78, 146, 149], "serial_c": 61, "serial_n": 61, "wrap": 61, "conveni": 61, "recordmodul": [62, 90, 91, 92, 93, 94, 95, 110], "nanoamper": [62, 86, 91, 92, 94], "current_at": [62, 92], "spike_at": [62, 92], "boolean": 62, "updatesom": 64, "collis": 65, "small": 65, "_get_": 65, "_set_": 65, "_del_": 65, "weakli": 65, "weightbiasmixin": 66, "mixin": [66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "inherit": [66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "weight_": [66, 67, 68], "bias_": [66, 67], "weightmixin": 67, "maintain": [69, 70, 71, 81, 82], "adapt_r": 71, "rebound_r": 71, "adapt_reset_min": 71, "permit": [71, 122, 124], "adap": [72, 73], "i_": 72, "optioon": [74, 75], "nonsens": [74, 75], "1000": [74, 75], "nonneg": [74, 75, 76, 77, 78], "inhomogen": 76, "exce": 76, "never": [77, 78], "masked_input": [79, 80], "held": [81, 82], "v_slope": 82, "v_intercept": 82, "batchmixin": 84, "concept": 84, "__shape": 84, "bshape": 84, "count": [84, 98, 107, 120, 121, 123], "adaptation_": 85, "adapt_batchreduc": 85, "additon": 85, "lead": 85, "unreduc": 85, "current_": [86, 90, 91, 92, 93], "refrac_": [87, 88], "refractorymixin": 88, "t_": [88, 144], "driven": 89, "voltage_": 89, "currentmixin": [90, 93], "therefrom": [90, 94], "_to_spik": [90, 92], "primit": [91, 93, 95], "primitive_curr": 92, "primitive_spik": 92, "current_interp": 92, "spike_interp": 92, "current_overv": 92, "spike_overv": 92, "_to_curr": [92, 94], "spike_": [92, 93, 94, 95], "_current_interp": 92, "_spike_interp": 92, "_current_ob_v": 92, "_spike_ob_v": 92, "_primitive_curr": 92, "_primitive_spik": 92, "_interp_tol": 92, "spikemixin": [93, 94], "randn": 96, "foldingreduc": [98, 100, 101, 107, 109, 111, 112], "fold": [98, 100, 101, 103, 107, 109, 111, 112], "incorpor": [98, 100, 101, 102, 103, 107, 109, 110, 111, 112, 121, 122, 123, 124, 146, 147], "entir": [98, 100, 101, 107, 109, 111, 112], "filter_": [99, 104, 108, 113], "map_": [99, 104, 108, 113], "nest": [99, 106, 113], "reduer": [99, 108, 113], "minu": 99, "ti": [99, 113], "reject": 99, "reiniti": [99, 102, 105, 110], "move": 100, "decoupl": 100, "datatyp": [101, 111, 112, 122, 124], "infin": 101, "fold_fn": 102, "been": 102, "map_fn": 102, "fail": 102, "keepshap": 102, "histor": 102, "dump": [102, 105, 110], "tempor": 102, "oldest": 102, "push": [102, 110], "peek": [102, 105, 110], "view": [102, 105, 110], "fall": 102, "foldreduc": 103, "0th": 104, "sent": 104, "weak": 105, "did": 105, "sens": 106, "sensibl": 106, "resmin": 115, "resmax": 115, "srcmin": 115, "srcmax": 115, "unchang": 115, "amin": 115, "amax": 115, "shortcut": 116, "squar": 117, "root": 117, "continuousdistribut": [118, 119], "log": [118, 119, 120], "probabl": [118, 119, 120], "mathbb": [118, 119, 120], "r": [118, 119, 120, 146], "sigma": [118, 119], "_": [118, 119, 120], "cdf": [118, 119, 120], "loc": [118, 119], "erf": [118, 119], "sqrt": [118, 119], "standard": [118, 119], "deviat": [118, 119], "logcdf": [118, 119, 120], "logarithm": [118, 119, 120], "logpdf": [118, 119], "densiti": [118, 119], "pi": [118, 119], "likelihood": [118, 119], "mid": [118, 119, 120], "sim": [118, 119, 120], "params_mv": [118, 119], "varianc": [118, 119, 120], "mu_x": [118, 119], "sigma_x": [118, 119], "qquad": [118, 119], "pdf": [118, 119], "variat": [118, 119, 120], "mathcal": [118, 119], "sample_mv": [118, 119], "var": [118, 119, 120], "lnormal": 119, "discretedistribut": 120, "_0": 120, "gamma": 120, "logpmf": 120, "mass": 120, "pmf": 120, "metal": 120, "shader": 120, "accordingli": 120, "degener": 120, "init": [121, 122, 123, 124], "condit": [121, 122, 123, 124, 147], "matchfn": [122, 124], "trace_cumul": 122, "predic": [122, 124], "trace_nearest": 124, "arbitrari": [125, 126, 127, 128, 129, 130], "uniformli": 133, "depth": 142, "academ": 142, "plan": 142, "3": [142, 147], "4": [142, 145, 147], "5": [142, 147], "nonlinear": 142, "qif": 142, "izhikevich": 142, "eif": 142, "adex": 142, "conduct": [142, 146], "coba": 142, "stdp": 142, "astdp": 142, "mstdp": 142, "elig": 142, "mstdpet": 142, "resum": 142, "tbd": 143, "categori": 144, "With": [144, 145, 146, 147], "w_t": 144, "magnitud": [144, 145], "dirac": [144, 149], "pp": 144, "adjust": 144, "neighbor": 144, "flip": 144, "postsynpat": 144, "penal": 144, "penalti": 144, "law": 144, "heavisid": 144, "impos": 145, "regard": 145, "impli": 145, "steadi": 145, "give": 145, "degre": 145, "freedom": 145, "modif": 145, "dampen": 145, "amplifi": 145, "said": 145, "goe": 145, "dw_k": [145, 147], "approx": [145, 147], "subthreshold": [145, 147], "doi": [145, 146, 147], "10": [145, 146, 147], "1017": [145, 146, 147], "cbo9781107447615": [145, 146, 147], "6": [145, 147], "1152": 145, "jn": 145, "00686": 145, "2005": 145, "Be": [145, 146], "1038": [145, 146], "s41467": [145, 146], "017": [145, 146], "02717": [145, 146], "allen": [145, 146], "institut": [145, 146], "whitepap": [145, 146], "rebound": 145, "1162": 145, "neco": 145, "2008": 145, "680": 145, "neco_a_00196": 145, "1803": 145, "09574": 145, "021": 145, "24427": 145, "8": [145, 147], "00234": 145, "2019": 145, "dv_m": [146, 147], "basic": 146, "rule": 146, "back": 146, "slope": [146, 147], "field": [146, 147], "show": [146, 147], "v_r": [146, 147], "60": [146, 147], "plot": [146, 147], "c_m": 146, "g_l": 146, "capacit": 146, "nf": 146, "phrase": 146, "leak": 146, "expos": 146, "isbn": [146, 147, 149], "9780262548083": [146, 147, 149], "020": 146, "17236": 146, "fraction": 146, "intercept": 146, "convent": 146, "conting": 146, "reach": 146, "critic": 147, "tendenc": 147, "stabl": 147, "unstabl": 147, "attract": 147, "repel": 147, "v_c": 147, "50": 147, "depeend": 147, "3390": 147, "brainsci12070863": 147, "7551": 147, "mitpress": 147, "2526": 147, "001": 147, "0001": 147, "close": 147, "rapid": 147, "upsw": 147, "rightarrow": 147, "easi": 147, "confus": 147, "unrel": 147, "occasion": 147, "denot": 147, "vartheta_": 147, "rh": 147, "thresh": 147, "usual": 147, "simuat": 147, "illustr": 147, "4249": 147, "scholarpedia": 147, "8427": 147, "1523": 147, "jneurosci": 147, "23": 147, "37": 147, "11628": 147, "2003": 147, "t_f": 149, "extern": 149, "veri": 149, "role": 149, "deliv": 149, "dramat": 149}, "objects": {"inferno": [[5, 0, 1, "", "DimensionalModule"], [6, 0, 1, "", "Hook"], [7, 0, 1, "", "Module"], [8, 0, 1, "", "RecordModule"], [9, 0, 1, "", "StateHook"], [10, 3, 1, "", "astensors"], [22, 3, 1, "", "empty"], [23, 3, 1, "", "exp"], [24, 3, 1, "", "exponential_smoothing"], [25, 3, 1, "", "full"], [26, 3, 1, "", "holt_linear_smoothing"], [33, 3, 1, "", "isi"], [137, 4, 0, "-", "learn"], [138, 4, 0, "-", "neural"], [96, 3, 1, "", "normal"], [97, 3, 1, "", "normalize"], [114, 3, 1, "", "ones"], [115, 3, 1, "", "rescale"], [116, 3, 1, "", "scalar"], [117, 3, 1, "", "sqrt"], [141, 4, 0, "-", "stats"], [121, 3, 1, "", "trace_cumulative"], [122, 3, 1, "", "trace_cumulative_scaled"], [123, 3, 1, "", "trace_nearest"], [124, 3, 1, "", "trace_nearest_scaled"], [133, 3, 1, "", "uniform"], [134, 3, 1, "", "zeros"]], "inferno.DimensionalModule": [[5, 1, 1, "", "compatible"], [5, 1, 1, "", "compatible_"], [5, 1, 1, "", "compatible_like"], [5, 1, 1, "", "compatible_like_"], [5, 2, 1, "", "constraints"], [5, 1, 1, "", "deregister_constrained"], [5, 2, 1, "", "dims"], [5, 1, 1, "", "dims_"], [5, 1, 1, "", "extra_repr"], [5, 2, 1, "", "liveconstrain"], [5, 1, 1, "", "reconstrain"], [5, 1, 1, "", "register_constrained"], [5, 1, 1, "", "validate"]], "inferno.Hook": [[6, 1, 1, "", "deregister"], [6, 2, 1, "", "evalexec"], [6, 1, 1, "", "register"], [6, 2, 1, "", "registered"], [6, 2, 1, "", "trainexec"]], "inferno.Module": [[7, 1, 1, "", "get_extra"], [7, 1, 1, "", "get_extra_state"], [7, 1, 1, "", "register_extra"], [7, 1, 1, "", "set_extra_state"]], "inferno.RecordModule": [[8, 1, 1, "", "aligned"], [8, 1, 1, "", "deregister_constrained"], [8, 2, 1, "", "dt"], [8, 2, 1, "", "duration"], [8, 1, 1, "", "latest"], [8, 1, 1, "", "reconstrain"], [8, 1, 1, "", "record"], [8, 2, 1, "", "recordsz"], [8, 1, 1, "", "register_constrained"], [8, 1, 1, "", "reset"], [8, 1, 1, "", "select"]], "inferno.StateHook": [[9, 1, 1, "", "forward"], [9, 1, 1, "", "hook"], [9, 2, 1, "", "module"], [9, 1, 1, "", "register"]], "inferno.bounding": [[11, 0, 1, "", "FullBounding"], [12, 0, 1, "", "HalfBounding"], [13, 3, 1, "", "lower_multiplicative"], [14, 3, 1, "", "lower_power"], [15, 3, 1, "", "lower_sharp"], [16, 3, 1, "", "multiplicative"], [17, 3, 1, "", "power"], [18, 3, 1, "", "sharp"], [19, 3, 1, "", "upper_multiplicative"], [20, 3, 1, "", "upper_power"], [21, 3, 1, "", "upper_sharp"]], "inferno.interpolation": [[27, 0, 1, "", "Interpolation"], [28, 3, 1, "", "expdecay"], [29, 3, 1, "", "expratedecay"], [30, 3, 1, "", "linear"], [31, 3, 1, "", "nearest"], [32, 3, 1, "", "previous"]], "inferno.learn": [[34, 0, 1, "", "CellTrainer"], [35, 0, 1, "", "LayerwiseTrainer"], [36, 0, 1, "", "MaxRateClassifier"], [37, 0, 1, "", "STDP"]], "inferno.learn.CellTrainer": [[34, 1, 1, "", "add_cell"], [34, 1, 1, "", "add_monitor"], [34, 2, 1, "", "cells"], [34, 1, 1, "", "clear"], [34, 1, 1, "", "del_cell"], [34, 1, 1, "", "del_monitor"], [34, 1, 1, "", "forward"], [34, 1, 1, "", "get_cell"], [34, 1, 1, "", "get_monitor"], [34, 2, 1, "", "monitors"], [34, 2, 1, "", "named_cells"], [34, 2, 1, "", "named_monitors"], [34, 1, 1, "", "named_monitors_of"], [34, 1, 1, "", "train"], [34, 1, 1, "", "update"]], "inferno.learn.LayerwiseTrainer": [[35, 1, 1, "", "add_cell"], [35, 1, 1, "", "add_layer"]], "inferno.learn.MaxRateClassifier": [[36, 2, 1, "", "assignments"], [36, 1, 1, "", "forward"], [36, 1, 1, "", "infer"], [36, 1, 1, "", "learn"], [36, 2, 1, "", "nclass"], [36, 2, 1, "", "ndim"], [36, 2, 1, "", "occurances"], [36, 2, 1, "", "proportional"], [36, 2, 1, "", "proportions"], [36, 2, 1, "", "rates"], [36, 2, 1, "", "shape"]], "inferno.learn.STDP": [[37, 0, 1, "", "State"], [37, 1, 1, "", "add_cell"], [37, 1, 1, "", "forward"]], "inferno.neural": [[38, 0, 1, "", "ALIF"], [39, 0, 1, "", "AdEx"], [40, 0, 1, "", "Biclique"], [41, 0, 1, "", "Cell"], [42, 0, 1, "", "Clamping"], [43, 0, 1, "", "Connection"], [44, 0, 1, "", "Conv2D"], [45, 0, 1, "", "DeltaCurrent"], [46, 0, 1, "", "DeltaPlusCurrent"], [47, 0, 1, "", "EIF"], [48, 0, 1, "", "GLIF1"], [49, 0, 1, "", "GLIF2"], [50, 0, 1, "", "HomogeneousPoissonEncoder"], [51, 0, 1, "", "Izhikevich"], [52, 0, 1, "", "LIF"], [53, 0, 1, "", "Layer"], [54, 0, 1, "", "LinearDense"], [55, 0, 1, "", "LinearDirect"], [56, 0, 1, "", "LinearLateral"], [57, 0, 1, "", "Neuron"], [58, 0, 1, "", "Normalization"], [59, 0, 1, "", "PoissonIntervalEncoder"], [60, 0, 1, "", "QIF"], [61, 0, 1, "", "Serial"], [62, 0, 1, "", "Synapse"], [63, 0, 1, "", "SynapseConstructor"], [64, 0, 1, "", "Updatable"], [65, 0, 1, "", "Updater"], [139, 4, 0, "-", "functional"]], "inferno.neural.ALIF": [[38, 1, 1, "", "clear"], [38, 2, 1, "", "dt"], [38, 1, 1, "", "forward"]], "inferno.neural.AdEx": [[39, 1, 1, "", "clear"], [39, 2, 1, "", "dt"], [39, 1, 1, "", "forward"]], "inferno.neural.Biclique": [[40, 1, 1, "", "wiring"]], "inferno.neural.Cell": [[41, 2, 1, "", "connection"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "get_monitor"], [41, 2, 1, "", "neuron"], [41, 2, 1, "", "postspike"], [41, 2, 1, "", "postvoltage"], [41, 2, 1, "", "precurrent"], [41, 2, 1, "", "prespike"], [41, 2, 1, "", "synapse"], [41, 2, 1, "", "updater"]], "inferno.neural.Clamping": [[42, 1, 1, "", "hook"]], "inferno.neural.Connection": [[43, 2, 1, "", "bias"], [43, 2, 1, "", "biased"], [43, 2, 1, "", "binshape"], [43, 2, 1, "", "boutshape"], [43, 2, 1, "", "bsize"], [43, 1, 1, "", "clear"], [43, 1, 1, "", "defaultupdater"], [43, 2, 1, "", "delay"], [43, 2, 1, "", "delayedby"], [43, 2, 1, "", "dt"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "forward"], [43, 2, 1, "", "inshape"], [43, 1, 1, "", "insize"], [43, 1, 1, "", "like_input"], [43, 1, 1, "", "like_synaptic"], [43, 2, 1, "", "outshape"], [43, 1, 1, "", "outsize"], [43, 1, 1, "", "postsyn_receptive"], [43, 1, 1, "", "presyn_receptive"], [43, 2, 1, "", "selector"], [43, 2, 1, "", "synapse"], [43, 2, 1, "", "syncurrent"], [43, 2, 1, "", "synspike"], [43, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[44, 1, 1, "", "forward"], [44, 2, 1, "", "inshape"], [44, 1, 1, "", "like_input"], [44, 1, 1, "", "like_synaptic"], [44, 2, 1, "", "outshape"], [44, 1, 1, "", "postsyn_receptive"], [44, 1, 1, "", "presyn_receptive"], [44, 2, 1, "", "selector"]], "inferno.neural.DeltaCurrent": [[45, 1, 1, "", "clear"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[46, 1, 1, "", "clear"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "partialconstructor"]], "inferno.neural.EIF": [[47, 1, 1, "", "clear"], [47, 2, 1, "", "dt"], [47, 1, 1, "", "forward"]], "inferno.neural.GLIF1": [[48, 1, 1, "", "clear"], [48, 2, 1, "", "dt"], [48, 1, 1, "", "forward"]], "inferno.neural.GLIF2": [[49, 1, 1, "", "clear"], [49, 2, 1, "", "dt"], [49, 1, 1, "", "forward"]], "inferno.neural.HomogeneousPoissonEncoder": [[50, 2, 1, "", "compensated"], [50, 1, 1, "", "forward"], [50, 2, 1, "", "frequency"], [50, 2, 1, "", "refrac"]], "inferno.neural.Izhikevich": [[51, 1, 1, "", "clear"], [51, 2, 1, "", "dt"], [51, 1, 1, "", "forward"]], "inferno.neural.LIF": [[52, 1, 1, "", "clear"], [52, 2, 1, "", "dt"], [52, 1, 1, "", "forward"]], "inferno.neural.Layer": [[53, 2, 1, "", "cells"], [53, 2, 1, "", "connections"], [53, 1, 1, "", "forward"], [53, 2, 1, "", "named_cells"], [53, 2, 1, "", "named_connections"], [53, 2, 1, "", "named_neurons"], [53, 2, 1, "", "named_synapses"], [53, 2, 1, "", "named_updaters"], [53, 2, 1, "", "neurons"], [53, 1, 1, "", "update"], [53, 1, 1, "", "wiring"]], "inferno.neural.LinearDense": [[54, 1, 1, "", "forward"], [54, 2, 1, "", "inshape"], [54, 1, 1, "", "like_input"], [54, 1, 1, "", "like_synaptic"], [54, 2, 1, "", "outshape"], [54, 1, 1, "", "postsyn_receptive"], [54, 1, 1, "", "presyn_receptive"], [54, 2, 1, "", "selector"]], "inferno.neural.LinearDirect": [[55, 1, 1, "", "forward"], [55, 2, 1, "", "inshape"], [55, 1, 1, "", "like_input"], [55, 1, 1, "", "like_synaptic"], [55, 2, 1, "", "outshape"], [55, 1, 1, "", "postsyn_receptive"], [55, 1, 1, "", "presyn_receptive"], [55, 2, 1, "", "selector"]], "inferno.neural.LinearLateral": [[56, 2, 1, "", "delay"], [56, 1, 1, "", "forward"], [56, 2, 1, "", "inshape"], [56, 1, 1, "", "like_input"], [56, 1, 1, "", "like_synaptic"], [56, 2, 1, "", "outshape"], [56, 1, 1, "", "postsyn_receptive"], [56, 1, 1, "", "presyn_receptive"], [56, 2, 1, "", "selector"], [56, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[57, 2, 1, "", "bsize"], [57, 1, 1, "", "clear"], [57, 2, 1, "", "dt"], [57, 1, 1, "", "extra_repr"], [57, 1, 1, "", "forward"], [57, 2, 1, "", "refrac"], [57, 2, 1, "", "spike"], [57, 2, 1, "", "voltage"]], "inferno.neural.Normalization": [[58, 1, 1, "", "hook"]], "inferno.neural.PoissonIntervalEncoder": [[59, 1, 1, "", "forward"], [59, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[60, 1, 1, "", "clear"], [60, 2, 1, "", "dt"], [60, 1, 1, "", "forward"]], "inferno.neural.Serial": [[61, 2, 1, "", "cell"], [61, 2, 1, "", "connection"], [61, 1, 1, "", "forward"], [61, 2, 1, "", "neuron"], [61, 2, 1, "", "synapse"], [61, 2, 1, "", "updater"], [61, 1, 1, "", "wiring"]], "inferno.neural.Synapse": [[62, 1, 1, "", "clear"], [62, 2, 1, "", "current"], [62, 1, 1, "", "current_at"], [62, 2, 1, "", "delay"], [62, 2, 1, "", "dt"], [62, 1, 1, "", "extra_repr"], [62, 1, 1, "", "forward"], [62, 1, 1, "", "partialconstructor"], [62, 2, 1, "", "spike"], [62, 1, 1, "", "spike_at"]], "inferno.neural.Updatable": [[64, 1, 1, "", "clear"], [64, 1, 1, "", "defaultupdater"], [64, 2, 1, "", "updatable"], [64, 1, 1, "", "update"], [64, 2, 1, "", "updater"], [64, 1, 1, "", "updatesome"]], "inferno.neural.Updater": [[65, 1, 1, "", "clear"], [65, 1, 1, "", "forward"], [65, 2, 1, "", "names"], [65, 2, 1, "", "parent"]], "inferno.neural.connections.mixins": [[66, 0, 1, "", "WeightBiasDelayMixin"], [67, 0, 1, "", "WeightBiasMixin"], [68, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[66, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[67, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[68, 2, 1, "", "weight"]], "inferno.neural.functional": [[69, 3, 1, "", "adaptive_currents_linear"], [70, 3, 1, "", "adaptive_thresholds_linear_spike"], [71, 3, 1, "", "adaptive_thresholds_linear_voltage"], [72, 3, 1, "", "apply_adaptive_currents"], [73, 3, 1, "", "apply_adaptive_thresholds"], [74, 3, 1, "", "enc_homogeneous_poisson_exp_interval"], [75, 3, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [76, 3, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [77, 3, 1, "", "enc_poisson_interval"], [78, 3, 1, "", "enc_poisson_interval_online"], [79, 3, 1, "", "voltage_integration_linear"], [80, 3, 1, "", "voltage_integration_quadratic"], [81, 3, 1, "", "voltage_thresholding"], [82, 3, 1, "", "voltage_thresholding_slope_intercept"]], "inferno.neural.mixins": [[83, 0, 1, "", "BatchMixin"], [84, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[83, 2, 1, "", "bsize"]], "inferno.neural.mixins.ShapeMixin": [[84, 2, 1, "", "bshape"], [84, 2, 1, "", "count"], [84, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[85, 0, 1, "", "AdaptationMixin"], [86, 0, 1, "", "CurrentMixin"], [87, 0, 1, "", "RefractoryMixin"], [88, 0, 1, "", "SpikeRefractoryMixin"], [89, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptationMixin": [[85, 2, 1, "", "adaptation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[86, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[87, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[88, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[89, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[90, 0, 1, "", "CurrentDerivedSpikeMixin"], [91, 0, 1, "", "CurrentMixin"], [92, 0, 1, "", "DelayedSpikeCurrentAccessorMixin"], [93, 0, 1, "", "SpikeCurrentMixin"], [94, 0, 1, "", "SpikeDerivedCurrentMixin"], [95, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[90, 2, 1, "", "spike"]], "inferno.neural.synapses.mixins.CurrentMixin": [[91, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin": [[92, 1, 1, "", "current_at"], [92, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[94, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.SpikeMixin": [[95, 2, 1, "", "spike"]], "inferno.observe": [[98, 0, 1, "", "CumulativeTraceReducer"], [99, 0, 1, "", "DifferenceMonitor"], [100, 0, 1, "", "EMAReducer"], [101, 0, 1, "", "EventReducer"], [102, 0, 1, "", "FoldReducer"], [103, 0, 1, "", "FoldingReducer"], [104, 0, 1, "", "InputMonitor"], [105, 0, 1, "", "Monitor"], [106, 0, 1, "", "MonitorConstructor"], [107, 0, 1, "", "NearestTraceReducer"], [108, 0, 1, "", "OutputMonitor"], [109, 0, 1, "", "PassthroughReducer"], [110, 0, 1, "", "Reducer"], [111, 0, 1, "", "ScaledCumulativeTraceReducer"], [112, 0, 1, "", "ScaledNearestTraceReducer"], [113, 0, 1, "", "StateMonitor"]], "inferno.observe.CumulativeTraceReducer": [[98, 2, 1, "", "dt"], [98, 1, 1, "", "fold"], [98, 1, 1, "", "initialize"], [98, 1, 1, "", "interpolate"]], "inferno.observe.DifferenceMonitor": [[99, 1, 1, "", "clear"], [99, 1, 1, "", "partialconstructor"]], "inferno.observe.EMAReducer": [[100, 1, 1, "", "fold"], [100, 1, 1, "", "initialize"], [100, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[101, 1, 1, "", "fold"], [101, 1, 1, "", "initialize"], [101, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[102, 1, 1, "", "clear"], [102, 2, 1, "", "data"], [102, 2, 1, "", "dt"], [102, 1, 1, "", "dump"], [102, 2, 1, "", "duration"], [102, 1, 1, "", "forward"], [102, 1, 1, "", "peek"], [102, 1, 1, "", "push"], [102, 1, 1, "", "view"]], "inferno.observe.FoldingReducer": [[103, 1, 1, "", "fold"], [103, 1, 1, "", "initialize"], [103, 1, 1, "", "interpolate"]], "inferno.observe.InputMonitor": [[104, 1, 1, "", "partialconstructor"]], "inferno.observe.Monitor": [[105, 1, 1, "", "clear"], [105, 1, 1, "", "dump"], [105, 1, 1, "", "peek"], [105, 2, 1, "", "reducer"], [105, 1, 1, "", "register"], [105, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[107, 2, 1, "", "dt"], [107, 1, 1, "", "fold"], [107, 1, 1, "", "initialize"], [107, 1, 1, "", "interpolate"]], "inferno.observe.OutputMonitor": [[108, 1, 1, "", "partialconstructor"]], "inferno.observe.PassthroughReducer": [[109, 1, 1, "", "fold"], [109, 1, 1, "", "initialize"], [109, 1, 1, "", "interpolate"]], "inferno.observe.Reducer": [[110, 1, 1, "", "clear"], [110, 1, 1, "", "dump"], [110, 1, 1, "", "forward"], [110, 1, 1, "", "peek"], [110, 1, 1, "", "push"], [110, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[111, 2, 1, "", "dt"], [111, 1, 1, "", "fold"], [111, 1, 1, "", "initialize"], [111, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[112, 2, 1, "", "dt"], [112, 1, 1, "", "fold"], [112, 1, 1, "", "initialize"], [112, 1, 1, "", "interpolate"]], "inferno.observe.StateMonitor": [[113, 1, 1, "", "partialconstructor"]], "inferno.stats": [[118, 0, 1, "", "LogNormal"], [119, 0, 1, "", "Normal"], [120, 0, 1, "", "Poisson"]], "inferno.stats.LogNormal": [[118, 1, 1, "", "cdf"], [118, 1, 1, "", "logcdf"], [118, 1, 1, "", "logpdf"], [118, 1, 1, "", "mean"], [118, 1, 1, "", "params_mv"], [118, 1, 1, "", "pdf"], [118, 1, 1, "", "sample"], [118, 1, 1, "", "sample_mv"], [118, 1, 1, "", "validate"], [118, 1, 1, "", "variance"]], "inferno.stats.Normal": [[119, 1, 1, "", "cdf"], [119, 1, 1, "", "logcdf"], [119, 1, 1, "", "logpdf"], [119, 1, 1, "", "mean"], [119, 1, 1, "", "params_mv"], [119, 1, 1, "", "pdf"], [119, 1, 1, "", "sample"], [119, 1, 1, "", "sample_mv"], [119, 1, 1, "", "validate"], [119, 1, 1, "", "variance"]], "inferno.stats.Poisson": [[120, 1, 1, "", "cdf"], [120, 1, 1, "", "logcdf"], [120, 1, 1, "", "logpmf"], [120, 1, 1, "", "mean"], [120, 1, 1, "", "pmf"], [120, 1, 1, "", "sample"], [120, 1, 1, "", "validate"], [120, 1, 1, "", "variance"]], "inferno.types": [[125, 0, 1, "", "ManyToMany"], [126, 0, 1, "", "ManyToManyMethod"], [127, 0, 1, "", "ManyToOne"], [128, 0, 1, "", "ManyToOneMethod"], [129, 0, 1, "", "OneToMany"], [130, 0, 1, "", "OneToManyMethod"], [131, 0, 1, "", "OneToOne"], [132, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"]}, "titleterms": {"pragmat": 0, "consider": 0, "function": [0, 2, 139], "object": 0, "orient": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 137, 144], "simul": 0, "refractori": [0, 3], "period": [0, 3], "model": [0, 138, 142, 146, 147, 148, 149], "save": 0, "restor": 0, "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 147], "decai": 2, "constant": 2, "trace": [2, 136, 144], "cumul": 2, "nearest": [2, 31], "scale": 2, "dirac": 2, "delta": [2, 148, 149], "heavisid": 2, "step": 2, "relationship": 2, "neuron": [3, 57, 138, 139, 142, 145, 146, 147], "system": 3, "dynam": [3, 139], "welcom": 4, "inferno": [4, 136, 137, 138, 139, 140, 141], "": 4, "document": 4, "dimensionalmodul": 5, "hook": [6, 138], "modul": [7, 144], "recordmodul": 8, "shape": [8, 33, 36, 43, 44, 50, 54, 55, 56, 59, 69, 70, 71, 74, 75, 76, 77, 78, 92, 102], "statehook": 9, "astensor": 10, "fullbound": 11, "halfbound": 12, "lower_multipl": 13, "lower_pow": 14, "lower_sharp": 15, "multipl": 16, "power": 17, "sharp": 18, "upper_multipl": 19, "upper_pow": 20, "upper_sharp": 21, "empti": 22, "exp": 23, "exponential_smooth": 24, "full": 25, "holt_linear_smooth": 26, "interpol": [27, 136], "expdecai": 28, "expratedecai": 29, "linear": [30, 145, 146], "previou": 32, "isi": 33, "celltrain": 34, "layerwisetrain": 35, "maxrateclassifi": 36, "stdp": [37, 144], "alif": [38, 146], "adex": [39, 147], "bicliqu": 40, "cell": 41, "clamp": 42, "connect": [43, 138], "conv2d": 44, "deltacurr": 45, "deltapluscurr": 46, "eif": [47, 147], "glif1": [48, 146], "glif2": [49, 146], "homogeneouspoissonencod": 50, "izhikevich": [51, 147], "lif": [52, 146], "layer": 53, "lineardens": 54, "lineardirect": 55, "linearlater": 56, "normal": [58, 96, 97, 119], "poissonintervalencod": 59, "qif": [60, 147], "serial": 61, "synaps": [62, 138, 142, 148, 149], "synapseconstructor": 63, "updat": [64, 65, 137], "weightbiasdelaymixin": 66, "weightbiasmixin": 67, "weightmixin": 68, "adaptive_currents_linear": 69, "adaptive_thresholds_linear_spik": 70, "adaptive_thresholds_linear_voltag": 71, "apply_adaptive_curr": 72, "apply_adaptive_threshold": 73, "enc_homogeneous_poisson_exp_interv": 74, "enc_homogeneous_poisson_exp_interval_onlin": 75, "enc_inhomogenous_poisson_bernoulli_approx": 76, "enc_poisson_interv": 77, "enc_poisson_interval_onlin": 78, "voltage_integration_linear": 79, "voltage_integration_quadrat": 80, "voltage_threshold": 81, "voltage_thresholding_slope_intercept": 82, "batchmixin": 83, "shapemixin": 84, "adaptationmixin": 85, "currentmixin": [86, 91], "refractorymixin": 87, "spikerefractorymixin": 88, "voltagemixin": 89, "currentderivedspikemixin": 90, "delayedspikecurrentaccessormixin": 92, "spikecurrentmixin": 93, "spikederivedcurrentmixin": 94, "spikemixin": 95, "cumulativetracereduc": 98, "differencemonitor": 99, "emareduc": 100, "eventreduc": 101, "foldreduc": 102, "foldingreduc": 103, "inputmonitor": 104, "monitor": [105, 140], "monitorconstructor": 106, "nearesttracereduc": 107, "outputmonitor": 108, "passthroughreduc": 109, "reduc": [110, 140], "scaledcumulativetracereduc": 111, "scalednearesttracereduc": 112, "statemonitor": 113, "ones": 114, "rescal": 115, "scalar": 116, "sqrt": 117, "lognorm": 118, "paramet": [118, 119, 120, 136], "support": [118, 119, 120], "poisson": 120, "trace_cumul": 121, "trace_cumulative_sc": 122, "trace_nearest": 123, "trace_nearest_sc": 124, "manytomani": 125, "manytomanymethod": 126, "manytoon": 127, "manytoonemethod": 128, "onetomani": 129, "onetomanymethod": 130, "onetoon": 131, "onetoonemethod": 132, "uniform": 133, "zero": 134, "api": 135, "refer": [135, 145, 146, 147, 149], "infrastructur": 136, "tensor": 136, "creation": 136, "math": 136, "oper": 136, "spike": [136, 137, 144, 145], "bound": [136, 144], "type": [136, 138], "learn": [137, 142, 143, 144], "compon": [137, 138, 140], "depend": [137, 144, 145], "plastic": [137, 144], "classifi": 137, "neural": [138, 139], "encod": [138, 139], "mixin": 138, "observ": 140, "stat": 141, "distribut": 141, "method": [142, 143, 144], "zoo": 142, "overview": [142, 143, 144, 145], "resum": 143, "like": [143, 144], "formul": [144, 145, 146, 147, 148, 149], "delai": 144, "anti": 144, "hebbian": 144, "astdp": 144, "descript": [144, 146, 147, 149], "mstdp": 144, "elig": 144, "mstdpet": 144, "weight": 144, "soft": 144, "hard": 144, "adapt": [145, 146, 147], "current": [145, 149], "threshold": 145, "voltag": 145, "leaki": 146, "integr": [146, 147], "fire": [146, 147], "altern": 146, "gener": 146, "1": 146, "2": 146, "3": 146, "glif3": 146, "4": 146, "glif4": 146, "5": 146, "glif5": 146, "nonlinear": 147, "quadrat": 147, "conduct": 148, "base": [148, 149], "coba": 148, "variant": [148, 149], "cuba": 149}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Functional or Object-Oriented?": [[0, "functional-or-object-oriented"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Model Saving and Restoring": [[0, "model-saving-and-restoring"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Traces": [[2, "scaling-traces"]], "Cumulative Scaled Trace": [[2, "cumulative-scaled-trace"]], "Nearest Scaled Trace": [[2, "nearest-scaled-trace"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "DimensionalModule": [[5, "dimensionalmodule"]], "Hook": [[6, "hook"]], "Module": [[7, "module"]], "RecordModule": [[8, "recordmodule"]], "Shape": [[8, null], [33, null], [36, null], [36, null], [36, null], [36, null], [36, null], [36, null], [36, null], [43, null], [43, null], [43, null], [43, null], [44, null], [44, null], [44, null], [44, null], [44, null], [44, null], [44, null], [50, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [54, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [55, null], [56, null], [56, null], [56, null], [56, null], [56, null], [56, null], [56, null], [59, null], [69, null], [70, null], [71, null], [74, null], [75, null], [76, null], [77, null], [78, null], [92, null], [92, null], [102, null]], "StateHook": [[9, "statehook"]], "astensors": [[10, "astensors"]], "FullBounding": [[11, "fullbounding"]], "HalfBounding": [[12, "halfbounding"]], "lower_multiplicative": [[13, "lower-multiplicative"]], "lower_power": [[14, "lower-power"]], "lower_sharp": [[15, "lower-sharp"]], "multiplicative": [[16, "multiplicative"]], "power": [[17, "power"]], "sharp": [[18, "sharp"]], "upper_multiplicative": [[19, "upper-multiplicative"]], "upper_power": [[20, "upper-power"]], "upper_sharp": [[21, "upper-sharp"]], "empty": [[22, "empty"]], "exp": [[23, "exp"]], "exponential_smoothing": [[24, "exponential-smoothing"]], "full": [[25, "full"]], "holt_linear_smoothing": [[26, "holt-linear-smoothing"]], "Interpolation": [[27, "interpolation"], [136, "interpolation"]], "expdecay": [[28, "expdecay"]], "expratedecay": [[29, "expratedecay"]], "linear": [[30, "linear"]], "nearest": [[31, "nearest"]], "previous": [[32, "previous"]], "isi": [[33, "isi"]], "CellTrainer": [[34, "celltrainer"]], "LayerwiseTrainer": [[35, "layerwisetrainer"]], "MaxRateClassifier": [[36, "maxrateclassifier"]], "STDP": [[37, "stdp"]], "ALIF": [[38, "alif"]], "AdEx": [[39, "adex"]], "Biclique": [[40, "biclique"]], "Cell": [[41, "cell"]], "Clamping": [[42, "clamping"]], "Connection": [[43, "connection"]], "Conv2D": [[44, "conv2d"]], "DeltaCurrent": [[45, "deltacurrent"]], "DeltaPlusCurrent": [[46, "deltapluscurrent"]], "EIF": [[47, "eif"]], "GLIF1": [[48, "glif1"]], "GLIF2": [[49, "glif2"]], "HomogeneousPoissonEncoder": [[50, "homogeneouspoissonencoder"]], "Izhikevich": [[51, "izhikevich"]], "LIF": [[52, "lif"]], "Layer": [[53, "layer"]], "LinearDense": [[54, "lineardense"]], "LinearDirect": [[55, "lineardirect"]], "LinearLateral": [[56, "linearlateral"]], "Neuron": [[57, "neuron"]], "Normalization": [[58, "normalization"]], "PoissonIntervalEncoder": [[59, "poissonintervalencoder"]], "QIF": [[60, "qif"]], "Serial": [[61, "serial"]], "Synapse": [[62, "synapse"]], "SynapseConstructor": [[63, "synapseconstructor"]], "Updatable": [[64, "updatable"]], "Updater": [[65, "updater"]], "WeightBiasDelayMixin": [[66, "weightbiasdelaymixin"]], "WeightBiasMixin": [[67, "weightbiasmixin"]], "WeightMixin": [[68, "weightmixin"]], "adaptive_currents_linear": [[69, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[70, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[71, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[72, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[73, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[74, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[75, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[76, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[77, "enc-poisson-interval"]], "enc_poisson_interval_online": [[78, "enc-poisson-interval-online"]], "voltage_integration_linear": [[79, "voltage-integration-linear"]], "voltage_integration_quadratic": [[80, "voltage-integration-quadratic"]], "voltage_thresholding": [[81, "voltage-thresholding"]], "voltage_thresholding_slope_intercept": [[82, "voltage-thresholding-slope-intercept"]], "BatchMixin": [[83, "batchmixin"]], "ShapeMixin": [[84, "shapemixin"]], "AdaptationMixin": [[85, "adaptationmixin"]], "CurrentMixin": [[86, "currentmixin"], [91, "currentmixin"]], "RefractoryMixin": [[87, "refractorymixin"]], "SpikeRefractoryMixin": [[88, "spikerefractorymixin"]], "VoltageMixin": [[89, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[90, "currentderivedspikemixin"]], "DelayedSpikeCurrentAccessorMixin": [[92, "delayedspikecurrentaccessormixin"]], "SpikeCurrentMixin": [[93, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[94, "spikederivedcurrentmixin"]], "SpikeMixin": [[95, "spikemixin"]], "normal": [[96, "normal"]], "normalize": [[97, "normalize"]], "CumulativeTraceReducer": [[98, "cumulativetracereducer"]], "DifferenceMonitor": [[99, "differencemonitor"]], "EMAReducer": [[100, "emareducer"]], "EventReducer": [[101, "eventreducer"]], "FoldReducer": [[102, "foldreducer"]], "FoldingReducer": [[103, "foldingreducer"]], "InputMonitor": [[104, "inputmonitor"]], "Monitor": [[105, "monitor"]], "MonitorConstructor": [[106, "monitorconstructor"]], "NearestTraceReducer": [[107, "nearesttracereducer"]], "OutputMonitor": [[108, "outputmonitor"]], "PassthroughReducer": [[109, "passthroughreducer"]], "Reducer": [[110, "reducer"]], "ScaledCumulativeTraceReducer": [[111, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[112, "scalednearesttracereducer"]], "StateMonitor": [[113, "statemonitor"]], "ones": [[114, "ones"]], "rescale": [[115, "rescale"]], "scalar": [[116, "scalar"]], "sqrt": [[117, "sqrt"]], "LogNormal": [[118, "lognormal"]], "Parameters": [[118, null], [119, null], [120, null]], "Support": [[118, null], [119, null], [120, null]], "Normal": [[119, "normal"]], "Poisson": [[120, "poisson"]], "trace_cumulative": [[121, "trace-cumulative"]], "trace_cumulative_scaled": [[122, "trace-cumulative-scaled"]], "trace_nearest": [[123, "trace-nearest"]], "trace_nearest_scaled": [[124, "trace-nearest-scaled"]], "ManyToMany": [[125, "manytomany"]], "ManyToManyMethod": [[126, "manytomanymethod"]], "ManyToOne": [[127, "manytoone"]], "ManyToOneMethod": [[128, "manytoonemethod"]], "OneToMany": [[129, "onetomany"]], "OneToManyMethod": [[130, "onetomanymethod"]], "OneToOne": [[131, "onetoone"]], "OneToOneMethod": [[132, "onetoonemethod"]], "uniform": [[133, "uniform"]], "zeros": [[134, "zeros"]], "API Reference": [[135, "api-reference"]], "inferno": [[136, "inferno"]], "Infrastructure": [[136, "infrastructure"]], "Tensor Creation": [[136, "tensor-creation"]], "Math Operations": [[136, "math-operations"]], "Spike Trace": [[136, "spike-trace"]], "Parameter Bounding": [[136, "parameter-bounding"]], "Types": [[136, "types"], [138, "types"]], "inferno.learn": [[137, "module-inferno.learn"]], "Components": [[137, "components"], [138, "components"], [140, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[137, "updaters-spike-timing-dependent-plasticity"]], "Classifiers": [[137, "classifiers"]], "inferno.neural": [[138, "module-inferno.neural"]], "Modeling": [[138, "modeling"]], "Neurons": [[138, "neurons"], [142, "neurons"]], "Synapses": [[138, "synapses"], [142, "synapses"]], "Connections": [[138, "connections"]], "Encoders": [[138, "encoders"]], "Hooks": [[138, "hooks"]], "Mixins": [[138, "mixins"]], "inferno.neural.functional": [[139, "module-inferno.neural.functional"]], "Encodings": [[139, "encodings"]], "Neuronal Dynamics": [[139, "neuronal-dynamics"]], "inferno.observe": [[140, "inferno-observe"]], "Monitors": [[140, "monitors"]], "Reducers": [[140, "reducers"]], "inferno.stats": [[141, "module-inferno.stats"]], "Distributions": [[141, "distributions"]], "Model and Method Zoo": [[142, "model-and-method-zoo"]], "Overview": [[142, "overview"], [143, "overview"], [144, "overview"], [145, "overview"]], "Learning Methods": [[142, "learning-methods"]], "ReSuMe-Like Learning Methods": [[143, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[144, "stdp-like-learning-methods"]], "Spike Timing-Dependent Plasticity (STDP)": [[144, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[144, "formulation"], [144, "id1"], [144, "id2"], [144, "id3"], [144, "id5"], [145, "formulation"], [145, "id1"], [145, "id3"], [145, "id5"], [146, "formulation"], [146, "id1"], [146, "id4"], [147, "formulation"], [147, "id1"], [147, "id4"], [147, "id7"], [148, "formulation"], [149, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[144, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Anti-Hebbian Spike Timing-Dependent Plasticity (aSTDP)": [[144, "anti-hebbian-spike-timing-dependent-plasticity-astdp"]], "Description": [[144, "description"], [144, "id4"], [146, "description"], [146, "id2"], [146, "id5"], [147, "description"], [147, "id2"], [147, "id5"], [147, "id8"], [149, "description"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[144, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[144, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Weight Dependence, Soft Bounding": [[144, "weight-dependence-soft-bounding"]], "Weight Dependence, Hard Bounding": [[144, "weight-dependence-hard-bounding"]], "Neuronal Adaptation": [[145, "neuronal-adaptation"]], "Adaptive Current, Linear": [[145, "adaptive-current-linear"]], "References": [[145, "references"], [145, "id2"], [145, "id4"], [145, "id6"], [146, "references"], [146, "id3"], [146, "id6"], [147, "references"], [147, "id3"], [147, "id6"], [147, "id9"], [149, "references"]], "Adaptive Current, Linear Spike-Dependent": [[145, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[145, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[145, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[146, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[146, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[146, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[146, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[146, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[146, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[146, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[146, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[146, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[147, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[147, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[147, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[147, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[147, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[148, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[148, "delta-coba-variant"]], "Synapse Models, Current-Based": [[149, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[149, "delta-cuba-variant"]]}, "indexentries": {"dimensionalmodule (class in inferno)": [[5, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[5, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[5, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[5, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[5, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[5, "inferno.DimensionalModule.constraints"]], "deregister_constrained() (dimensionalmodule method)": [[5, "inferno.DimensionalModule.deregister_constrained"]], "dims (dimensionalmodule property)": [[5, "inferno.DimensionalModule.dims"]], "dims_() (dimensionalmodule class method)": [[5, "inferno.DimensionalModule.dims_"]], "extra_repr() (dimensionalmodule method)": [[5, "inferno.DimensionalModule.extra_repr"]], "liveconstrain (dimensionalmodule property)": [[5, "inferno.DimensionalModule.liveconstrain"]], "reconstrain() (dimensionalmodule method)": [[5, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[5, "inferno.DimensionalModule.register_constrained"]], "validate() (dimensionalmodule method)": [[5, "inferno.DimensionalModule.validate"]], "hook (class in inferno)": [[6, "inferno.Hook"]], "deregister() (hook method)": [[6, "inferno.Hook.deregister"]], "evalexec (hook property)": [[6, "inferno.Hook.evalexec"]], "register() (hook method)": [[6, "inferno.Hook.register"]], "registered (hook property)": [[6, "inferno.Hook.registered"]], "trainexec (hook property)": [[6, "inferno.Hook.trainexec"]], "module (class in inferno)": [[7, "inferno.Module"]], "get_extra() (module method)": [[7, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[7, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[7, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[7, "inferno.Module.set_extra_state"]], "recordmodule (class in inferno)": [[8, "inferno.RecordModule"]], "aligned() (recordmodule method)": [[8, "inferno.RecordModule.aligned"]], "deregister_constrained() (recordmodule method)": [[8, "inferno.RecordModule.deregister_constrained"]], "dt (recordmodule property)": [[8, "inferno.RecordModule.dt"]], "duration (recordmodule property)": [[8, "inferno.RecordModule.duration"]], "latest() (recordmodule method)": [[8, "inferno.RecordModule.latest"]], "reconstrain() (recordmodule method)": [[8, "inferno.RecordModule.reconstrain"]], "record() (recordmodule method)": [[8, "inferno.RecordModule.record"]], "recordsz (recordmodule property)": [[8, "inferno.RecordModule.recordsz"]], "register_constrained() (recordmodule method)": [[8, "inferno.RecordModule.register_constrained"]], "reset() (recordmodule method)": [[8, "inferno.RecordModule.reset"]], "select() (recordmodule method)": [[8, "inferno.RecordModule.select"]], "statehook (class in inferno)": [[9, "inferno.StateHook"]], "forward() (statehook method)": [[9, "inferno.StateHook.forward"]], "hook() (statehook method)": [[9, "inferno.StateHook.hook"]], "module (statehook property)": [[9, "inferno.StateHook.module"]], "register() (statehook method)": [[9, "inferno.StateHook.register"]], "astensors() (in module inferno)": [[10, "inferno.astensors"]], "fullbounding (class in inferno.bounding)": [[11, "inferno.bounding.FullBounding"]], "halfbounding (class in inferno.bounding)": [[12, "inferno.bounding.HalfBounding"]], "lower_multiplicative() (in module inferno.bounding)": [[13, "inferno.bounding.lower_multiplicative"]], "lower_power() (in module inferno.bounding)": [[14, "inferno.bounding.lower_power"]], "lower_sharp() (in module inferno.bounding)": [[15, "inferno.bounding.lower_sharp"]], "multiplicative() (in module inferno.bounding)": [[16, "inferno.bounding.multiplicative"]], "power() (in module inferno.bounding)": [[17, "inferno.bounding.power"]], "sharp() (in module inferno.bounding)": [[18, "inferno.bounding.sharp"]], "upper_multiplicative() (in module inferno.bounding)": [[19, "inferno.bounding.upper_multiplicative"]], "upper_power() (in module inferno.bounding)": [[20, "inferno.bounding.upper_power"]], "upper_sharp() (in module inferno.bounding)": [[21, "inferno.bounding.upper_sharp"]], "empty() (in module inferno)": [[22, "inferno.empty"]], "exp() (in module inferno)": [[23, "inferno.exp"]], "exponential_smoothing() (in module inferno)": [[24, "inferno.exponential_smoothing"]], "full() (in module inferno)": [[25, "inferno.full"]], "holt_linear_smoothing() (in module inferno)": [[26, "inferno.holt_linear_smoothing"]], "interpolation (class in inferno.interpolation)": [[27, "inferno.interpolation.Interpolation"]], "expdecay() (in module inferno.interpolation)": [[28, "inferno.interpolation.expdecay"]], "expratedecay() (in module inferno.interpolation)": [[29, "inferno.interpolation.expratedecay"]], "linear() (in module inferno.interpolation)": [[30, "inferno.interpolation.linear"]], "nearest() (in module inferno.interpolation)": [[31, "inferno.interpolation.nearest"]], "previous() (in module inferno.interpolation)": [[32, "inferno.interpolation.previous"]], "isi() (in module inferno)": [[33, "inferno.isi"]], "celltrainer (class in inferno.learn)": [[34, "inferno.learn.CellTrainer"]], "add_cell() (celltrainer method)": [[34, "inferno.learn.CellTrainer.add_cell"]], "add_monitor() (celltrainer method)": [[34, "inferno.learn.CellTrainer.add_monitor"]], "cells (celltrainer property)": [[34, "inferno.learn.CellTrainer.cells"]], "clear() (celltrainer method)": [[34, "inferno.learn.CellTrainer.clear"]], "del_cell() (celltrainer method)": [[34, "inferno.learn.CellTrainer.del_cell"]], "del_monitor() (celltrainer method)": [[34, "inferno.learn.CellTrainer.del_monitor"]], "forward() (celltrainer method)": [[34, "inferno.learn.CellTrainer.forward"]], "get_cell() (celltrainer method)": [[34, "inferno.learn.CellTrainer.get_cell"]], "get_monitor() (celltrainer method)": [[34, "inferno.learn.CellTrainer.get_monitor"]], "monitors (celltrainer property)": [[34, "inferno.learn.CellTrainer.monitors"]], "named_cells (celltrainer property)": [[34, "inferno.learn.CellTrainer.named_cells"]], "named_monitors (celltrainer property)": [[34, "inferno.learn.CellTrainer.named_monitors"]], "named_monitors_of() (celltrainer method)": [[34, "inferno.learn.CellTrainer.named_monitors_of"]], "train() (celltrainer method)": [[34, "inferno.learn.CellTrainer.train"]], "update() (celltrainer method)": [[34, "inferno.learn.CellTrainer.update"]], "layerwisetrainer (class in inferno.learn)": [[35, "inferno.learn.LayerwiseTrainer"]], "add_cell() (layerwisetrainer method)": [[35, "inferno.learn.LayerwiseTrainer.add_cell"]], "add_layer() (layerwisetrainer method)": [[35, "inferno.learn.LayerwiseTrainer.add_layer"]], "maxrateclassifier (class in inferno.learn)": [[36, "inferno.learn.MaxRateClassifier"]], "assignments (maxrateclassifier property)": [[36, "inferno.learn.MaxRateClassifier.assignments"]], "forward() (maxrateclassifier method)": [[36, "inferno.learn.MaxRateClassifier.forward"]], "infer() (maxrateclassifier method)": [[36, "inferno.learn.MaxRateClassifier.infer"]], "learn() (maxrateclassifier method)": [[36, "inferno.learn.MaxRateClassifier.learn"]], "nclass (maxrateclassifier property)": [[36, "inferno.learn.MaxRateClassifier.nclass"]], "ndim (maxrateclassifier property)": [[36, "inferno.learn.MaxRateClassifier.ndim"]], "occurances (maxrateclassifier property)": [[36, "inferno.learn.MaxRateClassifier.occurances"]], "proportional (maxrateclassifier property)": [[36, "inferno.learn.MaxRateClassifier.proportional"]], "proportions (maxrateclassifier property)": [[36, "inferno.learn.MaxRateClassifier.proportions"]], "rates (maxrateclassifier property)": [[36, "inferno.learn.MaxRateClassifier.rates"]], "shape (maxrateclassifier property)": [[36, "inferno.learn.MaxRateClassifier.shape"]], "stdp (class in inferno.learn)": [[37, "inferno.learn.STDP"]], "stdp.state (class in inferno.learn)": [[37, "inferno.learn.STDP.State"]], "add_cell() (stdp method)": [[37, "inferno.learn.STDP.add_cell"]], "forward() (stdp method)": [[37, "inferno.learn.STDP.forward"]], "alif (class in inferno.neural)": [[38, "inferno.neural.ALIF"]], "clear() (alif method)": [[38, "inferno.neural.ALIF.clear"]], "dt (alif property)": [[38, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[38, "inferno.neural.ALIF.forward"]], "adex (class in inferno.neural)": [[39, "inferno.neural.AdEx"]], "clear() (adex method)": [[39, "inferno.neural.AdEx.clear"]], "dt (adex property)": [[39, "inferno.neural.AdEx.dt"]], "forward() (adex method)": [[39, "inferno.neural.AdEx.forward"]], "biclique (class in inferno.neural)": [[40, "inferno.neural.Biclique"]], "wiring() (biclique method)": [[40, "inferno.neural.Biclique.wiring"]], "cell (class in inferno.neural)": [[41, "inferno.neural.Cell"]], "connection (cell property)": [[41, "inferno.neural.Cell.connection"]], "forward() (cell method)": [[41, "inferno.neural.Cell.forward"]], "get_monitor() (cell method)": [[41, "inferno.neural.Cell.get_monitor"]], "neuron (cell property)": [[41, "inferno.neural.Cell.neuron"]], "postspike (cell property)": [[41, "inferno.neural.Cell.postspike"]], "postvoltage (cell property)": [[41, "inferno.neural.Cell.postvoltage"]], "precurrent (cell property)": [[41, "inferno.neural.Cell.precurrent"]], "prespike (cell property)": [[41, "inferno.neural.Cell.prespike"]], "synapse (cell property)": [[41, "inferno.neural.Cell.synapse"]], "updater (cell property)": [[41, "inferno.neural.Cell.updater"]], "clamping (class in inferno.neural)": [[42, "inferno.neural.Clamping"]], "hook() (clamping method)": [[42, "inferno.neural.Clamping.hook"]], "connection (class in inferno.neural)": [[43, "inferno.neural.Connection"]], "bias (connection property)": [[43, "inferno.neural.Connection.bias"]], "biased (connection property)": [[43, "inferno.neural.Connection.biased"]], "binshape (connection property)": [[43, "inferno.neural.Connection.binshape"]], "boutshape (connection property)": [[43, "inferno.neural.Connection.boutshape"]], "bsize (connection property)": [[43, "inferno.neural.Connection.bsize"]], "clear() (connection method)": [[43, "inferno.neural.Connection.clear"]], "defaultupdater() (connection method)": [[43, "inferno.neural.Connection.defaultupdater"]], "delay (connection property)": [[43, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[43, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[43, "inferno.neural.Connection.dt"]], "extra_repr() (connection method)": [[43, "inferno.neural.Connection.extra_repr"]], "forward() (connection method)": [[43, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[43, "inferno.neural.Connection.inshape"]], "insize() (connection method)": [[43, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[43, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[43, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[43, "inferno.neural.Connection.outshape"]], "outsize() (connection method)": [[43, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[43, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[43, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[43, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[43, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[43, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[43, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[43, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[44, "inferno.neural.Conv2D"]], "forward() (conv2d method)": [[44, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[44, "inferno.neural.Conv2D.inshape"]], "like_input() (conv2d method)": [[44, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[44, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[44, "inferno.neural.Conv2D.outshape"]], "postsyn_receptive() (conv2d method)": [[44, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[44, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[44, "inferno.neural.Conv2D.selector"]], "deltacurrent (class in inferno.neural)": [[45, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[45, "inferno.neural.DeltaCurrent.clear"]], "forward() (deltacurrent method)": [[45, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[45, "inferno.neural.DeltaCurrent.partialconstructor"]], "deltapluscurrent (class in inferno.neural)": [[46, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[46, "inferno.neural.DeltaPlusCurrent.clear"]], "forward() (deltapluscurrent method)": [[46, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[46, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "eif (class in inferno.neural)": [[47, "inferno.neural.EIF"]], "clear() (eif method)": [[47, "inferno.neural.EIF.clear"]], "dt (eif property)": [[47, "inferno.neural.EIF.dt"]], "forward() (eif method)": [[47, "inferno.neural.EIF.forward"]], "glif1 (class in inferno.neural)": [[48, "inferno.neural.GLIF1"]], "clear() (glif1 method)": [[48, "inferno.neural.GLIF1.clear"]], "dt (glif1 property)": [[48, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[48, "inferno.neural.GLIF1.forward"]], "glif2 (class in inferno.neural)": [[49, "inferno.neural.GLIF2"]], "clear() (glif2 method)": [[49, "inferno.neural.GLIF2.clear"]], "dt (glif2 property)": [[49, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[49, "inferno.neural.GLIF2.forward"]], "homogeneouspoissonencoder (class in inferno.neural)": [[50, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[50, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[50, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[50, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[50, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "izhikevich (class in inferno.neural)": [[51, "inferno.neural.Izhikevich"]], "clear() (izhikevich method)": [[51, "inferno.neural.Izhikevich.clear"]], "dt (izhikevich property)": [[51, "inferno.neural.Izhikevich.dt"]], "forward() (izhikevich method)": [[51, "inferno.neural.Izhikevich.forward"]], "lif (class in inferno.neural)": [[52, "inferno.neural.LIF"]], "clear() (lif method)": [[52, "inferno.neural.LIF.clear"]], "dt (lif property)": [[52, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[52, "inferno.neural.LIF.forward"]], "layer (class in inferno.neural)": [[53, "inferno.neural.Layer"]], "cells (layer property)": [[53, "inferno.neural.Layer.cells"]], "connections (layer property)": [[53, "inferno.neural.Layer.connections"]], "forward() (layer method)": [[53, "inferno.neural.Layer.forward"]], "named_cells (layer property)": [[53, "inferno.neural.Layer.named_cells"]], "named_connections (layer property)": [[53, "inferno.neural.Layer.named_connections"]], "named_neurons (layer property)": [[53, "inferno.neural.Layer.named_neurons"]], "named_synapses (layer property)": [[53, "inferno.neural.Layer.named_synapses"]], "named_updaters (layer property)": [[53, "inferno.neural.Layer.named_updaters"]], "neurons (layer property)": [[53, "inferno.neural.Layer.neurons"]], "update() (layer method)": [[53, "inferno.neural.Layer.update"]], "wiring() (layer method)": [[53, "inferno.neural.Layer.wiring"]], "lineardense (class in inferno.neural)": [[54, "inferno.neural.LinearDense"]], "forward() (lineardense method)": [[54, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[54, "inferno.neural.LinearDense.inshape"]], "like_input() (lineardense method)": [[54, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[54, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[54, "inferno.neural.LinearDense.outshape"]], "postsyn_receptive() (lineardense method)": [[54, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[54, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[54, "inferno.neural.LinearDense.selector"]], "lineardirect (class in inferno.neural)": [[55, "inferno.neural.LinearDirect"]], "forward() (lineardirect method)": [[55, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[55, "inferno.neural.LinearDirect.inshape"]], "like_input() (lineardirect method)": [[55, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[55, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[55, "inferno.neural.LinearDirect.outshape"]], "postsyn_receptive() (lineardirect method)": [[55, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[55, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[55, "inferno.neural.LinearDirect.selector"]], "linearlateral (class in inferno.neural)": [[56, "inferno.neural.LinearLateral"]], "delay (linearlateral property)": [[56, "inferno.neural.LinearLateral.delay"]], "forward() (linearlateral method)": [[56, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[56, "inferno.neural.LinearLateral.inshape"]], "like_input() (linearlateral method)": [[56, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[56, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[56, "inferno.neural.LinearLateral.outshape"]], "postsyn_receptive() (linearlateral method)": [[56, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[56, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[56, "inferno.neural.LinearLateral.selector"]], "weight (linearlateral property)": [[56, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[57, "inferno.neural.Neuron"]], "bsize (neuron property)": [[57, "inferno.neural.Neuron.bsize"]], "clear() (neuron method)": [[57, "inferno.neural.Neuron.clear"]], "dt (neuron property)": [[57, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[57, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[57, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[57, "inferno.neural.Neuron.refrac"]], "spike (neuron property)": [[57, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[57, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[58, "inferno.neural.Normalization"]], "hook() (normalization method)": [[58, "inferno.neural.Normalization.hook"]], "poissonintervalencoder (class in inferno.neural)": [[59, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[59, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[59, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[60, "inferno.neural.QIF"]], "clear() (qif method)": [[60, "inferno.neural.QIF.clear"]], "dt (qif property)": [[60, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[60, "inferno.neural.QIF.forward"]], "serial (class in inferno.neural)": [[61, "inferno.neural.Serial"]], "cell (serial property)": [[61, "inferno.neural.Serial.cell"]], "connection (serial property)": [[61, "inferno.neural.Serial.connection"]], "forward() (serial method)": [[61, "inferno.neural.Serial.forward"]], "neuron (serial property)": [[61, "inferno.neural.Serial.neuron"]], "synapse (serial property)": [[61, "inferno.neural.Serial.synapse"]], "updater (serial property)": [[61, "inferno.neural.Serial.updater"]], "wiring() (serial method)": [[61, "inferno.neural.Serial.wiring"]], "synapse (class in inferno.neural)": [[62, "inferno.neural.Synapse"]], "clear() (synapse method)": [[62, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[62, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[62, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[62, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[62, "inferno.neural.Synapse.dt"]], "extra_repr() (synapse method)": [[62, "inferno.neural.Synapse.extra_repr"]], "forward() (synapse method)": [[62, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[62, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[62, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[62, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[63, "inferno.neural.SynapseConstructor"]], "updatable (class in inferno.neural)": [[64, "inferno.neural.Updatable"]], "clear() (updatable method)": [[64, "inferno.neural.Updatable.clear"]], "defaultupdater() (updatable method)": [[64, "inferno.neural.Updatable.defaultupdater"]], "updatable (updatable property)": [[64, "inferno.neural.Updatable.updatable"]], "update() (updatable method)": [[64, "inferno.neural.Updatable.update"]], "updater (updatable property)": [[64, "inferno.neural.Updatable.updater"]], "updatesome() (updatable method)": [[64, "inferno.neural.Updatable.updatesome"]], "updater (class in inferno.neural)": [[65, "inferno.neural.Updater"]], "clear() (updater method)": [[65, "inferno.neural.Updater.clear"]], "forward() (updater method)": [[65, "inferno.neural.Updater.forward"]], "names (updater property)": [[65, "inferno.neural.Updater.names"]], "parent (updater property)": [[65, "inferno.neural.Updater.parent"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[66, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[66, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[67, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[67, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[68, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[68, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[69, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[70, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[71, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[72, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[73, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[74, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[75, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[76, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[77, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[78, "inferno.neural.functional.enc_poisson_interval_online"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[79, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[80, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding() (in module inferno.neural.functional)": [[81, "inferno.neural.functional.voltage_thresholding"]], "voltage_thresholding_slope_intercept() (in module inferno.neural.functional)": [[82, "inferno.neural.functional.voltage_thresholding_slope_intercept"]], "batchmixin (class in inferno.neural.mixins)": [[83, "inferno.neural.mixins.BatchMixin"]], "bsize (batchmixin property)": [[83, "inferno.neural.mixins.BatchMixin.bsize"]], "shapemixin (class in inferno.neural.mixins)": [[84, "inferno.neural.mixins.ShapeMixin"]], "bshape (shapemixin property)": [[84, "inferno.neural.mixins.ShapeMixin.bshape"]], "count (shapemixin property)": [[84, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[84, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptationmixin (class in inferno.neural.neurons.mixins)": [[85, "inferno.neural.neurons.mixins.AdaptationMixin"]], "adaptation (adaptationmixin property)": [[85, "inferno.neural.neurons.mixins.AdaptationMixin.adaptation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[86, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[86, "inferno.neural.neurons.mixins.CurrentMixin.current"], [91, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[87, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[87, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[88, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[88, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[89, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[89, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[90, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[90, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[91, "inferno.neural.synapses.mixins.CurrentMixin"]], "delayedspikecurrentaccessormixin (class in inferno.neural.synapses.mixins)": [[92, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin"]], "current_at() (delayedspikecurrentaccessormixin method)": [[92, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.current_at"]], "spike_at() (delayedspikecurrentaccessormixin method)": [[92, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.spike_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[93, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[94, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[94, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[95, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[95, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "normal() (in module inferno)": [[96, "inferno.normal"]], "normalize() (in module inferno)": [[97, "inferno.normalize"]], "cumulativetracereducer (class in inferno.observe)": [[98, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[98, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[98, "inferno.observe.CumulativeTraceReducer.fold"]], "initialize() (cumulativetracereducer method)": [[98, "inferno.observe.CumulativeTraceReducer.initialize"]], "interpolate() (cumulativetracereducer method)": [[98, "inferno.observe.CumulativeTraceReducer.interpolate"]], "differencemonitor (class in inferno.observe)": [[99, "inferno.observe.DifferenceMonitor"]], "clear() (differencemonitor method)": [[99, "inferno.observe.DifferenceMonitor.clear"]], "partialconstructor() (differencemonitor class method)": [[99, "inferno.observe.DifferenceMonitor.partialconstructor"]], "emareducer (class in inferno.observe)": [[100, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[100, "inferno.observe.EMAReducer.fold"]], "initialize() (emareducer method)": [[100, "inferno.observe.EMAReducer.initialize"]], "interpolate() (emareducer method)": [[100, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[101, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[101, "inferno.observe.EventReducer.fold"]], "initialize() (eventreducer method)": [[101, "inferno.observe.EventReducer.initialize"]], "interpolate() (eventreducer method)": [[101, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[102, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[102, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[102, "inferno.observe.FoldReducer.data"]], "dt (foldreducer property)": [[102, "inferno.observe.FoldReducer.dt"]], "dump() (foldreducer method)": [[102, "inferno.observe.FoldReducer.dump"]], "duration (foldreducer property)": [[102, "inferno.observe.FoldReducer.duration"]], "forward() (foldreducer method)": [[102, "inferno.observe.FoldReducer.forward"]], "peek() (foldreducer method)": [[102, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[102, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[102, "inferno.observe.FoldReducer.view"]], "foldingreducer (class in inferno.observe)": [[103, "inferno.observe.FoldingReducer"]], "fold() (foldingreducer method)": [[103, "inferno.observe.FoldingReducer.fold"]], "initialize() (foldingreducer method)": [[103, "inferno.observe.FoldingReducer.initialize"]], "interpolate() (foldingreducer method)": [[103, "inferno.observe.FoldingReducer.interpolate"]], "inputmonitor (class in inferno.observe)": [[104, "inferno.observe.InputMonitor"]], "partialconstructor() (inputmonitor class method)": [[104, "inferno.observe.InputMonitor.partialconstructor"]], "monitor (class in inferno.observe)": [[105, "inferno.observe.Monitor"]], "clear() (monitor method)": [[105, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[105, "inferno.observe.Monitor.dump"]], "peek() (monitor method)": [[105, "inferno.observe.Monitor.peek"]], "reducer (monitor property)": [[105, "inferno.observe.Monitor.reducer"]], "register() (monitor method)": [[105, "inferno.observe.Monitor.register"]], "view() (monitor method)": [[105, "inferno.observe.Monitor.view"]], "monitorconstructor (class in inferno.observe)": [[106, "inferno.observe.MonitorConstructor"]], "nearesttracereducer (class in inferno.observe)": [[107, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[107, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[107, "inferno.observe.NearestTraceReducer.fold"]], "initialize() (nearesttracereducer method)": [[107, "inferno.observe.NearestTraceReducer.initialize"]], "interpolate() (nearesttracereducer method)": [[107, "inferno.observe.NearestTraceReducer.interpolate"]], "outputmonitor (class in inferno.observe)": [[108, "inferno.observe.OutputMonitor"]], "partialconstructor() (outputmonitor class method)": [[108, "inferno.observe.OutputMonitor.partialconstructor"]], "passthroughreducer (class in inferno.observe)": [[109, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[109, "inferno.observe.PassthroughReducer.fold"]], "initialize() (passthroughreducer method)": [[109, "inferno.observe.PassthroughReducer.initialize"]], "interpolate() (passthroughreducer method)": [[109, "inferno.observe.PassthroughReducer.interpolate"]], "reducer (class in inferno.observe)": [[110, "inferno.observe.Reducer"]], "clear() (reducer method)": [[110, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[110, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[110, "inferno.observe.Reducer.forward"]], "peek() (reducer method)": [[110, "inferno.observe.Reducer.peek"]], "push() (reducer method)": [[110, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[110, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[111, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[111, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[111, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "initialize() (scaledcumulativetracereducer method)": [[111, "inferno.observe.ScaledCumulativeTraceReducer.initialize"]], "interpolate() (scaledcumulativetracereducer method)": [[111, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[112, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[112, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[112, "inferno.observe.ScaledNearestTraceReducer.fold"]], "initialize() (scalednearesttracereducer method)": [[112, "inferno.observe.ScaledNearestTraceReducer.initialize"]], "interpolate() (scalednearesttracereducer method)": [[112, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[113, "inferno.observe.StateMonitor"]], "partialconstructor() (statemonitor class method)": [[113, "inferno.observe.StateMonitor.partialconstructor"]], "ones() (in module inferno)": [[114, "inferno.ones"]], "rescale() (in module inferno)": [[115, "inferno.rescale"]], "scalar() (in module inferno)": [[116, "inferno.scalar"]], "sqrt() (in module inferno)": [[117, "inferno.sqrt"]], "lognormal (class in inferno.stats)": [[118, "inferno.stats.LogNormal"]], "cdf() (lognormal class method)": [[118, "inferno.stats.LogNormal.cdf"]], "logcdf() (lognormal class method)": [[118, "inferno.stats.LogNormal.logcdf"]], "logpdf() (lognormal class method)": [[118, "inferno.stats.LogNormal.logpdf"]], "mean() (lognormal class method)": [[118, "inferno.stats.LogNormal.mean"]], "params_mv() (lognormal class method)": [[118, "inferno.stats.LogNormal.params_mv"]], "pdf() (lognormal class method)": [[118, "inferno.stats.LogNormal.pdf"]], "sample() (lognormal class method)": [[118, "inferno.stats.LogNormal.sample"]], "sample_mv() (lognormal class method)": [[118, "inferno.stats.LogNormal.sample_mv"]], "validate() (lognormal class method)": [[118, "inferno.stats.LogNormal.validate"]], "variance() (lognormal class method)": [[118, "inferno.stats.LogNormal.variance"]], "normal (class in inferno.stats)": [[119, "inferno.stats.Normal"]], "cdf() (normal class method)": [[119, "inferno.stats.Normal.cdf"]], "logcdf() (normal class method)": [[119, "inferno.stats.Normal.logcdf"]], "logpdf() (normal class method)": [[119, "inferno.stats.Normal.logpdf"]], "mean() (normal class method)": [[119, "inferno.stats.Normal.mean"]], "params_mv() (normal class method)": [[119, "inferno.stats.Normal.params_mv"]], "pdf() (normal class method)": [[119, "inferno.stats.Normal.pdf"]], "sample() (normal class method)": [[119, "inferno.stats.Normal.sample"]], "sample_mv() (normal class method)": [[119, "inferno.stats.Normal.sample_mv"]], "validate() (normal class method)": [[119, "inferno.stats.Normal.validate"]], "variance() (normal class method)": [[119, "inferno.stats.Normal.variance"]], "poisson (class in inferno.stats)": [[120, "inferno.stats.Poisson"]], "cdf() (poisson class method)": [[120, "inferno.stats.Poisson.cdf"]], "logcdf() (poisson class method)": [[120, "inferno.stats.Poisson.logcdf"]], "logpmf() (poisson class method)": [[120, "inferno.stats.Poisson.logpmf"]], "mean() (poisson class method)": [[120, "inferno.stats.Poisson.mean"]], "pmf() (poisson class method)": [[120, "inferno.stats.Poisson.pmf"]], "sample() (poisson class method)": [[120, "inferno.stats.Poisson.sample"]], "validate() (poisson class method)": [[120, "inferno.stats.Poisson.validate"]], "variance() (poisson class method)": [[120, "inferno.stats.Poisson.variance"]], "trace_cumulative() (in module inferno)": [[121, "inferno.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno)": [[122, "inferno.trace_cumulative_scaled"]], "trace_nearest() (in module inferno)": [[123, "inferno.trace_nearest"]], "trace_nearest_scaled() (in module inferno)": [[124, "inferno.trace_nearest_scaled"]], "manytomany (class in inferno.types)": [[125, "inferno.types.ManyToMany"]], "manytomanymethod (class in inferno.types)": [[126, "inferno.types.ManyToManyMethod"]], "manytoone (class in inferno.types)": [[127, "inferno.types.ManyToOne"]], "manytoonemethod (class in inferno.types)": [[128, "inferno.types.ManyToOneMethod"]], "onetomany (class in inferno.types)": [[129, "inferno.types.OneToMany"]], "onetomanymethod (class in inferno.types)": [[130, "inferno.types.OneToManyMethod"]], "onetoone (class in inferno.types)": [[131, "inferno.types.OneToOne"]], "onetoonemethod (class in inferno.types)": [[132, "inferno.types.OneToOneMethod"]], "uniform() (in module inferno)": [[133, "inferno.uniform"]], "zeros() (in module inferno)": [[134, "inferno.zeros"]], "inferno.learn": [[137, "module-inferno.learn"]], "module": [[137, "module-inferno.learn"], [138, "module-inferno.neural"], [139, "module-inferno.neural.functional"], [141, "module-inferno.stats"]], "inferno.neural": [[138, "module-inferno.neural"]], "inferno.neural.functional": [[139, "module-inferno.neural.functional"]], "inferno.stats": [[141, "module-inferno.stats"]]}})