Search.setIndex({"docnames": ["guide/considerations", "guide/index", "guide/mathematics", "guide/neurons", "index", "reference/generated/inferno.ContextualHook", "reference/generated/inferno.DimensionalModule", "reference/generated/inferno.Hook", "reference/generated/inferno.Module", "reference/generated/inferno.RecordModule", "reference/generated/inferno.StateHook", "reference/generated/inferno.astensors", "reference/generated/inferno.bounding.FullBounding", "reference/generated/inferno.bounding.HalfBounding", "reference/generated/inferno.bounding.lower_multiplicative", "reference/generated/inferno.bounding.lower_power", "reference/generated/inferno.bounding.lower_sharp", "reference/generated/inferno.bounding.multiplicative", "reference/generated/inferno.bounding.power", "reference/generated/inferno.bounding.sharp", "reference/generated/inferno.bounding.upper_multiplicative", "reference/generated/inferno.bounding.upper_power", "reference/generated/inferno.bounding.upper_sharp", "reference/generated/inferno.empty", "reference/generated/inferno.exp", "reference/generated/inferno.exponential_smoothing", "reference/generated/inferno.full", "reference/generated/inferno.holt_linear_smoothing", "reference/generated/inferno.interpolation.Interpolation", "reference/generated/inferno.interpolation.expdecay", "reference/generated/inferno.interpolation.expratedecay", "reference/generated/inferno.interpolation.linear", "reference/generated/inferno.interpolation.nearest", "reference/generated/inferno.interpolation.previous", "reference/generated/inferno.isi", "reference/generated/inferno.learn.CellTrainer", "reference/generated/inferno.learn.LayerwiseTrainer", "reference/generated/inferno.learn.MSTDPET", "reference/generated/inferno.learn.MaxRateClassifier", "reference/generated/inferno.learn.STDP", "reference/generated/inferno.neural.ALIF", "reference/generated/inferno.neural.AdEx", "reference/generated/inferno.neural.Biclique", "reference/generated/inferno.neural.Cell", "reference/generated/inferno.neural.Clamping", "reference/generated/inferno.neural.Connection", "reference/generated/inferno.neural.Conv2D", "reference/generated/inferno.neural.DeltaCurrent", "reference/generated/inferno.neural.DeltaPlusCurrent", "reference/generated/inferno.neural.EIF", "reference/generated/inferno.neural.GLIF1", "reference/generated/inferno.neural.GLIF2", "reference/generated/inferno.neural.HomogeneousPoissonEncoder", "reference/generated/inferno.neural.Izhikevich", "reference/generated/inferno.neural.LIF", "reference/generated/inferno.neural.Layer", "reference/generated/inferno.neural.LinearDense", "reference/generated/inferno.neural.LinearDirect", "reference/generated/inferno.neural.LinearLateral", "reference/generated/inferno.neural.Neuron", "reference/generated/inferno.neural.Normalization", "reference/generated/inferno.neural.PoissonIntervalEncoder", "reference/generated/inferno.neural.QIF", "reference/generated/inferno.neural.Serial", "reference/generated/inferno.neural.Synapse", "reference/generated/inferno.neural.SynapseConstructor", "reference/generated/inferno.neural.Updatable", "reference/generated/inferno.neural.Updater", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin", "reference/generated/inferno.neural.connections.mixins.WeightMixin", "reference/generated/inferno.neural.functional.adaptive_currents_linear", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage", "reference/generated/inferno.neural.functional.apply_adaptive_currents", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx", "reference/generated/inferno.neural.functional.enc_poisson_interval", "reference/generated/inferno.neural.functional.enc_poisson_interval_online", "reference/generated/inferno.neural.functional.voltage_integration_linear", "reference/generated/inferno.neural.functional.voltage_integration_quadratic", "reference/generated/inferno.neural.functional.voltage_thresholding_constant", "reference/generated/inferno.neural.functional.voltage_thresholding_linear", "reference/generated/inferno.neural.mixins.BatchMixin", "reference/generated/inferno.neural.mixins.ShapeMixin", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin", "reference/generated/inferno.normal", "reference/generated/inferno.normalize", "reference/generated/inferno.observe.CumulativeTraceReducer", "reference/generated/inferno.observe.DifferenceMonitor", "reference/generated/inferno.observe.EMAReducer", "reference/generated/inferno.observe.EventReducer", "reference/generated/inferno.observe.FoldReducer", "reference/generated/inferno.observe.FoldingReducer", "reference/generated/inferno.observe.InputMonitor", "reference/generated/inferno.observe.Monitor", "reference/generated/inferno.observe.MonitorConstructor", "reference/generated/inferno.observe.NearestTraceReducer", "reference/generated/inferno.observe.OutputMonitor", "reference/generated/inferno.observe.PassthroughReducer", "reference/generated/inferno.observe.Reducer", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer", "reference/generated/inferno.observe.ScaledNearestTraceReducer", "reference/generated/inferno.observe.StateMonitor", "reference/generated/inferno.ones", "reference/generated/inferno.rescale", "reference/generated/inferno.scalar", "reference/generated/inferno.sqrt", "reference/generated/inferno.stats.LogNormal", "reference/generated/inferno.stats.Normal", "reference/generated/inferno.stats.Poisson", "reference/generated/inferno.trace_cumulative", "reference/generated/inferno.trace_cumulative_scaled", "reference/generated/inferno.trace_nearest", "reference/generated/inferno.trace_nearest_scaled", "reference/generated/inferno.types.ManyToMany", "reference/generated/inferno.types.ManyToManyMethod", "reference/generated/inferno.types.ManyToOne", "reference/generated/inferno.types.ManyToOneMethod", "reference/generated/inferno.types.OneToMany", "reference/generated/inferno.types.OneToManyMethod", "reference/generated/inferno.types.OneToOne", "reference/generated/inferno.types.OneToOneMethod", "reference/generated/inferno.uniform", "reference/generated/inferno.zeros", "reference/index", "reference/inferno", "reference/learn", "reference/neural", "reference/neural-functional", "reference/observe", "reference/stats", "zoo/index", "zoo/learning-resume", "zoo/learning-stdp", "zoo/neurons-adaptation", "zoo/neurons-linear", "zoo/neurons-nonlinear", "zoo/synapses-conductance", "zoo/synapses-current"], "filenames": ["guide/considerations.md", "guide/index.md", "guide/mathematics.md", "guide/neurons.md", "index.md", "reference/generated/inferno.ContextualHook.rst", "reference/generated/inferno.DimensionalModule.rst", "reference/generated/inferno.Hook.rst", "reference/generated/inferno.Module.rst", "reference/generated/inferno.RecordModule.rst", "reference/generated/inferno.StateHook.rst", "reference/generated/inferno.astensors.rst", "reference/generated/inferno.bounding.FullBounding.rst", "reference/generated/inferno.bounding.HalfBounding.rst", "reference/generated/inferno.bounding.lower_multiplicative.rst", "reference/generated/inferno.bounding.lower_power.rst", "reference/generated/inferno.bounding.lower_sharp.rst", "reference/generated/inferno.bounding.multiplicative.rst", "reference/generated/inferno.bounding.power.rst", "reference/generated/inferno.bounding.sharp.rst", "reference/generated/inferno.bounding.upper_multiplicative.rst", "reference/generated/inferno.bounding.upper_power.rst", "reference/generated/inferno.bounding.upper_sharp.rst", "reference/generated/inferno.empty.rst", "reference/generated/inferno.exp.rst", "reference/generated/inferno.exponential_smoothing.rst", "reference/generated/inferno.full.rst", "reference/generated/inferno.holt_linear_smoothing.rst", "reference/generated/inferno.interpolation.Interpolation.rst", "reference/generated/inferno.interpolation.expdecay.rst", "reference/generated/inferno.interpolation.expratedecay.rst", "reference/generated/inferno.interpolation.linear.rst", "reference/generated/inferno.interpolation.nearest.rst", "reference/generated/inferno.interpolation.previous.rst", "reference/generated/inferno.isi.rst", "reference/generated/inferno.learn.CellTrainer.rst", "reference/generated/inferno.learn.LayerwiseTrainer.rst", "reference/generated/inferno.learn.MSTDPET.rst", "reference/generated/inferno.learn.MaxRateClassifier.rst", "reference/generated/inferno.learn.STDP.rst", "reference/generated/inferno.neural.ALIF.rst", "reference/generated/inferno.neural.AdEx.rst", "reference/generated/inferno.neural.Biclique.rst", "reference/generated/inferno.neural.Cell.rst", "reference/generated/inferno.neural.Clamping.rst", "reference/generated/inferno.neural.Connection.rst", "reference/generated/inferno.neural.Conv2D.rst", "reference/generated/inferno.neural.DeltaCurrent.rst", "reference/generated/inferno.neural.DeltaPlusCurrent.rst", "reference/generated/inferno.neural.EIF.rst", "reference/generated/inferno.neural.GLIF1.rst", "reference/generated/inferno.neural.GLIF2.rst", "reference/generated/inferno.neural.HomogeneousPoissonEncoder.rst", "reference/generated/inferno.neural.Izhikevich.rst", "reference/generated/inferno.neural.LIF.rst", "reference/generated/inferno.neural.Layer.rst", "reference/generated/inferno.neural.LinearDense.rst", "reference/generated/inferno.neural.LinearDirect.rst", "reference/generated/inferno.neural.LinearLateral.rst", "reference/generated/inferno.neural.Neuron.rst", "reference/generated/inferno.neural.Normalization.rst", "reference/generated/inferno.neural.PoissonIntervalEncoder.rst", "reference/generated/inferno.neural.QIF.rst", "reference/generated/inferno.neural.Serial.rst", "reference/generated/inferno.neural.Synapse.rst", "reference/generated/inferno.neural.SynapseConstructor.rst", "reference/generated/inferno.neural.Updatable.rst", "reference/generated/inferno.neural.Updater.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasDelayMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightBiasMixin.rst", "reference/generated/inferno.neural.connections.mixins.WeightMixin.rst", "reference/generated/inferno.neural.functional.adaptive_currents_linear.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_spike.rst", "reference/generated/inferno.neural.functional.adaptive_thresholds_linear_voltage.rst", "reference/generated/inferno.neural.functional.apply_adaptive_currents.rst", "reference/generated/inferno.neural.functional.apply_adaptive_thresholds.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval.rst", "reference/generated/inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online.rst", "reference/generated/inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval.rst", "reference/generated/inferno.neural.functional.enc_poisson_interval_online.rst", "reference/generated/inferno.neural.functional.voltage_integration_linear.rst", "reference/generated/inferno.neural.functional.voltage_integration_quadratic.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_constant.rst", "reference/generated/inferno.neural.functional.voltage_thresholding_linear.rst", "reference/generated/inferno.neural.mixins.BatchMixin.rst", "reference/generated/inferno.neural.mixins.ShapeMixin.rst", "reference/generated/inferno.neural.neurons.mixins.AdaptationMixin.rst", "reference/generated/inferno.neural.neurons.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.neurons.mixins.RefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.SpikeRefractoryMixin.rst", "reference/generated/inferno.neural.neurons.mixins.VoltageMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.rst", "reference/generated/inferno.neural.synapses.mixins.CurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.rst", "reference/generated/inferno.neural.synapses.mixins.SpikeMixin.rst", "reference/generated/inferno.normal.rst", "reference/generated/inferno.normalize.rst", "reference/generated/inferno.observe.CumulativeTraceReducer.rst", "reference/generated/inferno.observe.DifferenceMonitor.rst", "reference/generated/inferno.observe.EMAReducer.rst", "reference/generated/inferno.observe.EventReducer.rst", "reference/generated/inferno.observe.FoldReducer.rst", "reference/generated/inferno.observe.FoldingReducer.rst", "reference/generated/inferno.observe.InputMonitor.rst", "reference/generated/inferno.observe.Monitor.rst", "reference/generated/inferno.observe.MonitorConstructor.rst", "reference/generated/inferno.observe.NearestTraceReducer.rst", "reference/generated/inferno.observe.OutputMonitor.rst", "reference/generated/inferno.observe.PassthroughReducer.rst", "reference/generated/inferno.observe.Reducer.rst", "reference/generated/inferno.observe.ScaledCumulativeTraceReducer.rst", "reference/generated/inferno.observe.ScaledNearestTraceReducer.rst", "reference/generated/inferno.observe.StateMonitor.rst", "reference/generated/inferno.ones.rst", "reference/generated/inferno.rescale.rst", "reference/generated/inferno.scalar.rst", "reference/generated/inferno.sqrt.rst", "reference/generated/inferno.stats.LogNormal.rst", "reference/generated/inferno.stats.Normal.rst", "reference/generated/inferno.stats.Poisson.rst", "reference/generated/inferno.trace_cumulative.rst", "reference/generated/inferno.trace_cumulative_scaled.rst", "reference/generated/inferno.trace_nearest.rst", "reference/generated/inferno.trace_nearest_scaled.rst", "reference/generated/inferno.types.ManyToMany.rst", "reference/generated/inferno.types.ManyToManyMethod.rst", "reference/generated/inferno.types.ManyToOne.rst", "reference/generated/inferno.types.ManyToOneMethod.rst", "reference/generated/inferno.types.OneToMany.rst", "reference/generated/inferno.types.OneToManyMethod.rst", "reference/generated/inferno.types.OneToOne.rst", "reference/generated/inferno.types.OneToOneMethod.rst", "reference/generated/inferno.uniform.rst", "reference/generated/inferno.zeros.rst", "reference/index.md", "reference/inferno.md", "reference/learn.md", "reference/neural.md", "reference/neural-functional.md", "reference/observe.md", "reference/stats.md", "zoo/index.md", "zoo/learning-resume.md", "zoo/learning-stdp.md", "zoo/neurons-adaptation.md", "zoo/neurons-linear.md", "zoo/neurons-nonlinear.md", "zoo/synapses-conductance.md", "zoo/synapses-current.md"], "titles": ["Pragmatic Considerations", "Guidebook", "Mathematical Notes", "Neurons and Neuronal Systems", "Welcome to Inferno\u2019s documentation!", "ContextualHook", "DimensionalModule", "Hook", "Module", "RecordModule", "StateHook", "astensors", "FullBounding", "HalfBounding", "lower_multiplicative", "lower_power", "lower_sharp", "multiplicative", "power", "sharp", "upper_multiplicative", "upper_power", "upper_sharp", "empty", "exp", "exponential_smoothing", "full", "holt_linear_smoothing", "Interpolation", "expdecay", "expratedecay", "linear", "nearest", "previous", "isi", "CellTrainer", "LayerwiseTrainer", "MSTDPET", "MaxRateClassifier", "STDP", "ALIF", "AdEx", "Biclique", "Cell", "Clamping", "Connection", "Conv2D", "DeltaCurrent", "DeltaPlusCurrent", "EIF", "GLIF1", "GLIF2", "HomogeneousPoissonEncoder", "Izhikevich", "LIF", "Layer", "LinearDense", "LinearDirect", "LinearLateral", "Neuron", "Normalization", "PoissonIntervalEncoder", "QIF", "Serial", "Synapse", "SynapseConstructor", "Updatable", "Updater", "WeightBiasDelayMixin", "WeightBiasMixin", "WeightMixin", "adaptive_currents_linear", "adaptive_thresholds_linear_spike", "adaptive_thresholds_linear_voltage", "apply_adaptive_currents", "apply_adaptive_thresholds", "enc_homogeneous_poisson_exp_interval", "enc_homogeneous_poisson_exp_interval_online", "enc_inhomogenous_poisson_bernoulli_approx", "enc_poisson_interval", "enc_poisson_interval_online", "voltage_integration_linear", "voltage_integration_quadratic", "voltage_thresholding_constant", "voltage_thresholding_linear", "BatchMixin", "ShapeMixin", "AdaptationMixin", "CurrentMixin", "RefractoryMixin", "SpikeRefractoryMixin", "VoltageMixin", "CurrentDerivedSpikeMixin", "CurrentMixin", "DelayedSpikeCurrentAccessorMixin", "SpikeCurrentMixin", "SpikeDerivedCurrentMixin", "SpikeMixin", "normal", "normalize", "CumulativeTraceReducer", "DifferenceMonitor", "EMAReducer", "EventReducer", "FoldReducer", "FoldingReducer", "InputMonitor", "Monitor", "MonitorConstructor", "NearestTraceReducer", "OutputMonitor", "PassthroughReducer", "Reducer", "ScaledCumulativeTraceReducer", "ScaledNearestTraceReducer", "StateMonitor", "ones", "rescale", "scalar", "sqrt", "LogNormal", "Normal", "Poisson", "trace_cumulative", "trace_cumulative_scaled", "trace_nearest", "trace_nearest_scaled", "ManyToMany", "ManyToManyMethod", "ManyToOne", "ManyToOneMethod", "OneToMany", "OneToManyMethod", "OneToOne", "OneToOneMethod", "uniform", "zeros", "API Reference", "inferno", "inferno.learn", "inferno.neural", "inferno.neural.functional", "inferno.observe", "inferno.stats", "Model and Method Zoo", "ReSuMe-Like Learning Methods", "STDP-Like Learning Methods", "Neuronal Adaptation", "Neuron Models, Linear", "Neuron Models, Nonlinear", "Synapse Models, Conductance-Based", "Synapse Models, Current-Based"], "terms": {"unlik": [0, 10], "artifici": 0, "neuron": [0, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 49, 50, 51, 53, 54, 55, 62, 63, 71, 72, 73, 81, 82, 83, 84, 87, 88, 89, 90, 91, 146, 151], "typic": [0, 2, 8, 146, 147, 149], "found": [0, 8], "ann": 0, "snn": 0, "ar": [0, 2, 6, 9, 11, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 83, 84, 90, 92, 94, 96, 101, 104, 105, 106, 107, 117, 120, 121, 122, 124, 126, 144, 146, 147, 148, 149], "fundament": 0, "state": [0, 3, 6, 8, 9, 10, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 62, 64, 66, 67, 83, 84, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 114, 115, 123, 124, 125, 126], "In": [0, 2, 3, 8, 9, 37, 52, 61, 104, 146, 148, 151], "biolog": [0, 2, 3, 148], "electr": [0, 147, 148, 149, 151], "potenti": [0, 2, 3, 17, 18, 19, 20, 21, 22, 37, 39, 40, 41, 43, 49, 50, 51, 53, 54, 59, 62, 71, 72, 73, 81, 82, 83, 84, 90, 146, 147, 148, 149, 151], "differ": [0, 9, 36, 37, 38, 39, 40, 41, 47, 48, 49, 51, 53, 54, 62, 71, 73, 81, 82, 84, 94, 100, 101, 104, 109, 123, 125, 147, 148, 149], "between": [0, 9, 28, 29, 30, 31, 32, 33, 37, 42, 45, 47, 48, 52, 55, 61, 63, 76, 77, 78, 79, 80, 100, 101, 102, 103, 104, 105, 109, 111, 113, 114, 146, 149], "interior": 0, "exterior": 0, "cell": [0, 35, 36, 37, 39, 40, 41, 42, 49, 51, 53, 54, 55, 62, 63, 81, 82, 146, 147, 148, 149], "i": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 94, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 120, 121, 122, 124, 126, 146, 147, 148, 149, 151], "drive": 0, "forc": [0, 10], "behind": [0, 2], "gener": [0, 2, 3, 34, 36, 40, 41, 43, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 71, 72, 73, 76, 77, 78, 79, 80, 83, 84, 90, 98, 120, 121, 122, 135, 144, 146, 147, 149], "action": [0, 2, 3, 40, 41, 43, 49, 50, 51, 53, 54, 59, 62, 71, 72, 73, 83, 84, 90, 147, 148, 149, 151], "thi": [0, 2, 3, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 55, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 104, 106, 107, 110, 112, 115, 122, 124, 126, 135, 146, 147, 148, 149, 151], "extend": [0, 8, 98, 135], "simplifi": [0, 151], "us": [0, 2, 3, 5, 7, 8, 11, 12, 13, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 53, 55, 56, 57, 58, 62, 63, 65, 67, 71, 73, 76, 81, 82, 94, 101, 104, 107, 108, 120, 121, 122, 124, 126, 148, 149], "when": [0, 2, 5, 7, 8, 9, 10, 11, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 51, 53, 55, 56, 57, 58, 60, 63, 67, 71, 72, 73, 83, 84, 87, 94, 100, 101, 104, 106, 107, 109, 110, 115, 147, 148], "": [0, 2, 7, 8, 9, 10, 25, 27, 29, 30, 31, 32, 33, 35, 37, 39, 41, 44, 49, 52, 53, 55, 60, 61, 62, 63, 66, 71, 73, 76, 77, 78, 79, 80, 82, 99, 101, 102, 104, 107, 112, 113, 114, 115, 117, 124, 126, 147, 148, 149], "import": [0, 2, 8, 42], "treat": [0, 37, 39, 47, 48, 94], "variabl": [0, 8, 37, 39], "separ": [0, 46, 52, 61], "each": [0, 2, 6, 7, 9, 35, 36, 37, 38, 42, 47, 48, 52, 55, 61, 104, 147, 148, 149, 151], "sampl": [0, 9, 28, 29, 30, 31, 32, 33, 37, 38, 52, 61, 76, 77, 79, 80, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 120, 121, 122, 135], "present": [0, 6, 9, 35, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 64, 68, 69, 70, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 104, 147], "dure": [0, 3, 40, 41, 49, 50, 51, 53, 54, 59, 62, 90], "fix": [0, 3, 40, 41, 49, 50, 51, 53, 54, 62, 122, 149], "hyperparamet": [0, 2, 37, 39, 144], "meanwhil": [0, 3], "do": [0, 35, 85, 86, 146], "need": [0, 8, 9, 52, 76, 77, 104, 115, 146], "duplic": [0, 35], "instead": [0, 2, 148], "broadcast": [0, 45, 48, 71, 72, 73, 74, 75], "batch": [0, 34, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 71, 72, 73, 76, 77, 78, 79, 80, 85, 86, 87, 94, 104], "some": [0, 2, 3, 9, 102, 124, 126], "paramet": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 135, 136, 147, 149], "mai": [0, 2, 3, 8, 35, 37, 39, 42, 46], "includ": [0, 8, 37, 39, 40, 41, 45, 49, 50, 51, 53, 54, 55, 61, 62, 66, 79, 80, 86, 87, 104, 144], "adapt": [0, 3, 40, 41, 51, 53, 71, 72, 73, 74, 75, 87, 123, 124, 125, 126, 144], "behavior": [0, 9, 37, 38, 39, 40, 41, 51, 52, 53, 76, 77, 87, 144, 147, 148], "base": [0, 5, 6, 7, 8, 9, 10, 12, 13, 23, 26, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 144], "input": [0, 2, 5, 6, 7, 11, 23, 24, 26, 35, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 118, 119, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 146, 147, 148, 149, 151], "A": [0, 2, 6, 9, 37, 39, 40, 41, 51, 53, 87, 100, 109, 113, 114, 122, 123, 124, 125, 126], "common": [0, 47, 48, 59, 64, 65, 101, 106, 107, 108, 110, 115, 146], "exampl": [0, 6, 36, 42, 74, 75, 149], "an": [0, 2, 3, 6, 7, 8, 9, 10, 14, 17, 20, 23, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 67, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 86, 87, 90, 94, 100, 101, 103, 105, 109, 115, 122, 127, 128, 129, 130, 131, 132, 147, 148, 149, 151], "threshold": [0, 40, 41, 51, 53, 72, 73, 75, 83, 84, 144, 148, 149], "where": [0, 2, 9, 16, 19, 22, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 71, 72, 73, 76, 77, 78, 79, 80, 90, 94, 102, 104, 107, 108, 146, 147, 148, 149, 151], "defin": [0, 2, 148], "minimum": [0, 6, 12, 13, 52, 76, 77, 117], "membran": [0, 3, 40, 41, 43, 49, 50, 51, 53, 54, 59, 62, 71, 72, 73, 81, 82, 83, 84, 87, 88, 91, 147, 148, 149], "which": [0, 2, 3, 6, 7, 8, 9, 10, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 119, 122, 135, 146, 147, 148, 149, 151], "spike": [0, 2, 34, 37, 38, 39, 40, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 59, 61, 62, 64, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 90, 92, 94, 95, 96, 97, 144, 148, 149, 151], "These": [0, 38, 42, 48, 147, 148], "should": [0, 5, 6, 7, 8, 9, 10, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 71, 72, 73, 76, 77, 87, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "share": [0, 35, 37], "across": [0, 35, 37, 40, 41, 42, 49, 51, 53, 54, 56, 57, 58, 62, 81, 82, 147, 148, 149], "all": [0, 2, 9, 11, 34, 35, 36, 37, 42, 55, 56, 58, 60, 66, 67, 76, 77, 78, 79, 80, 99, 100, 101, 104, 105, 107, 112, 113, 117, 123, 124, 148], "contribut": [0, 113, 114], "portion": 0, "updat": [0, 2, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 35, 36, 37, 38, 39, 40, 41, 43, 45, 51, 53, 55, 63, 71, 72, 73, 83, 84, 87, 108, 123, 124, 125, 126, 146], "also": [0, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 35, 37, 39, 40, 41, 45, 46, 51, 53, 55, 56, 57, 58, 63, 78, 87, 124, 126, 148, 149], "appli": [0, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 35, 36, 37, 40, 42, 44, 46, 55, 56, 57, 58, 60, 63, 66, 67, 71, 72, 73, 74, 75, 104, 147, 148, 149, 151], "weight": [0, 2, 37, 38, 39, 45, 46, 56, 57, 58, 68, 69, 70, 146], "bias": [0, 45, 46, 56, 57, 58, 68, 69], "handl": [0, 8, 36], "same": [0, 6, 8, 9, 35, 37, 40, 41, 46, 51, 53, 87, 100, 102, 103, 104, 108, 109, 111, 113, 114, 127, 128, 129, 130, 131, 132, 133, 134, 149], "wai": [0, 2, 5, 8, 115], "can": [0, 2, 3, 7, 8, 35, 36, 37, 39, 40, 41, 47, 48, 51, 53, 55, 63, 87, 101, 106, 107, 110, 115, 146, 148, 149], "done": [0, 71, 72, 73], "either": [0, 6, 9, 38, 42, 68, 73, 94, 101, 147], "reduc": [0, 2, 35, 37, 38, 39, 40, 41, 42, 51, 53, 67, 71, 72, 73, 87, 101, 104, 105, 106, 107, 110, 115], "output": [0, 5, 7, 10, 23, 26, 27, 38, 42, 43, 45, 46, 52, 55, 56, 57, 58, 61, 63, 76, 77, 78, 79, 80, 83, 84, 98, 103, 107, 110, 113, 114, 116, 118, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 146, 149], "along": [0, 6, 9, 37, 39, 40, 41, 42, 46, 49, 50, 51, 53, 54, 60, 62, 71, 72, 73, 86, 99, 104, 108, 117], "dimens": [0, 6, 9, 34, 37, 38, 39, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 99, 104, 117], "The": [0, 2, 3, 6, 9, 10, 34, 35, 36, 37, 38, 39, 42, 43, 46, 47, 48, 55, 61, 63, 67, 74, 75, 76, 77, 79, 80, 92, 96, 101, 103, 104, 106, 108, 110, 113, 114, 115, 120, 122, 124, 126, 147, 149], "former": [0, 147], "more": [0, 3, 6, 37, 39, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 67, 71, 72, 73, 144, 147], "effici": [0, 35], "make": [0, 108], "assumpt": 0, "about": [0, 2], "how": [0, 2, 3, 144], "perform": [0, 2, 7, 9, 25, 27, 37, 38, 39, 44, 46, 60, 104, 105, 122, 123, 124, 125, 126, 146], "inferno": [0, 2, 144, 146, 148, 149], "object": [0, 7, 8, 10, 35, 36, 55, 63, 65, 66, 67, 70, 85, 87, 88, 89, 91, 93, 94, 97], "orient": 0, "interfac": 0, "automat": [0, 6, 8, 35, 36, 38, 55, 71, 72, 73, 107], "But": 0, "certain": 0, "case": [0, 2, 16, 19, 22, 32, 39, 40, 41, 47, 48, 49, 50, 51, 53, 54, 60, 62, 90, 99, 107, 109, 114, 124, 125, 126, 146, 151], "function": [0, 5, 7, 8, 10, 24, 35, 36, 37, 39, 40, 41, 42, 44, 47, 48, 51, 53, 60, 63, 64, 66, 67, 71, 72, 73, 83, 84, 87, 94, 98, 101, 103, 104, 106, 107, 110, 113, 114, 115, 119, 120, 121, 122, 124, 126, 135, 146, 151], "might": 0, "necessari": 0, "hand": [0, 101, 104], "detail": [0, 37, 39, 40, 41, 46, 47, 48, 49, 50, 51, 53, 54, 62, 71, 72, 73, 144], "inform": [0, 5, 6, 7, 45, 59, 64, 67, 147], "process": [0, 35, 37, 39, 42, 52, 55, 76, 77], "arxiv": [0, 147], "1909": 0, "02549": 0, "becaus": [0, 35], "over": [0, 2, 9, 35, 37, 38, 39, 40, 41, 46, 51, 56, 57, 58, 87, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 147, 148, 149, 151], "unit": [0, 9, 36, 37, 100, 102, 103, 104, 109, 111, 113, 114, 151], "relev": [0, 10], "comput": [0, 2, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 34, 38, 45, 52, 55, 61, 63, 117, 120, 121, 122], "match": [0, 8, 56, 57, 58, 100, 103, 109, 113, 114, 123, 124, 125, 126], "theoret": 0, "continu": [0, 120], "descript": [0, 144], "specifi": [0, 2, 6, 23, 26, 35, 36, 37, 38, 39, 42, 43, 55, 60, 63, 64, 67, 98, 99, 101, 110, 115, 116, 118, 135, 136], "length": [0, 2, 9, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 100, 102, 103, 104, 105, 109, 111, 113, 114, 146, 147, 148, 149, 151], "given": [0, 6, 8, 9, 34, 35, 36, 37, 38, 39, 42, 43, 55, 61, 63, 64, 79, 80, 83, 84, 104, 105, 107, 108, 112, 120, 121, 122, 144, 147, 148, 151], "millisecond": [0, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 59, 62, 64, 89, 100, 104, 109, 113, 114], "On": 0, "step": [0, 3, 9, 25, 27, 34, 35, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 100, 102, 103, 104, 105, 109, 111, 113, 114, 123, 124, 125, 126, 146, 147, 148, 149, 151], "amount": [0, 2, 28, 38, 40, 41, 46, 51, 53, 71, 72, 122], "ha": [0, 8, 35, 37, 40, 41, 45, 46, 51, 53, 55, 56, 57, 58, 63, 87, 90, 92, 94, 96, 101, 104, 107, 112, 115, 149, 151], "elaps": 0, "subtract": [0, 101], "from": [0, 2, 6, 8, 9, 23, 26, 29, 30, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 69, 70, 76, 77, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 109, 110, 111, 113, 114, 116, 118, 120, 121, 122, 135, 136, 146, 149, 151], "remain": [0, 40, 41, 49, 50, 51, 53, 54, 59, 62, 71, 72, 73, 83, 84, 89, 90, 102, 147], "inclus": [0, 44], "bound": [0, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 44, 47, 48, 73, 94], "zero": [0, 6, 9, 34, 46, 56, 57, 58, 60, 99, 100, 101, 102, 104, 109, 111, 113, 114, 122], "equal": [0, 2, 42, 76, 77, 146], "consid": [0, 2, 9, 25, 27, 37, 100, 103, 104, 107, 109, 112, 113, 114, 122, 123, 124, 125, 126, 146, 148], "out": [0, 2, 9, 46, 47, 48, 94], "its": [0, 2, 6, 8, 9, 35, 36, 42, 43, 45, 52, 55, 67, 76, 77, 101, 146, 149, 151], "therefor": [0, 6], "evenli": 0, "divis": 0, "simualt": [0, 40, 41, 46, 47, 48, 49, 51, 53, 54, 56, 57, 58, 62], "practic": [0, 2], "round": 0, "up": 0, "next": [0, 9, 31, 37, 40, 105], "integ": [0, 3, 9], "multipl": [0, 2, 3, 14, 20, 34, 35, 37, 39, 46, 51, 84, 107, 112, 113, 114], "size": [0, 6, 9, 23, 26, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 71, 72, 73, 76, 77, 78, 79, 80, 85, 86, 94, 98, 116, 135, 136], "affect": [0, 3, 37, 124, 126, 144], "onli": [0, 2, 7, 8, 10, 35, 37, 39, 44, 46, 47, 55, 60, 67, 101], "data": [0, 9, 23, 26, 28, 29, 30, 31, 32, 33, 36, 37, 39, 45, 46, 56, 57, 58, 87, 88, 91, 98, 99, 100, 102, 103, 104, 105, 109, 111, 113, 114, 116, 117, 118, 135, 136], "pass": [0, 5, 7, 9, 10, 35, 36, 37, 39, 40, 41, 42, 45, 46, 51, 53, 55, 56, 57, 58, 63, 87, 101, 106, 107, 110, 115, 151], "through": [0, 3, 45, 46, 56, 57, 58, 85, 86, 151], "itself": [0, 7, 10, 36, 42, 45], "special": 0, "must": [0, 5, 6, 7, 8, 10, 35, 36, 37, 42, 45, 46, 48, 55, 59, 64, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 105, 107, 108, 110, 113, 114, 124, 126], "load": 0, "principl": 0, "modul": [0, 5, 6, 7, 9, 10, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 106, 107, 108, 110, 115, 128, 130, 132, 134, 144], "record": [0, 9, 101, 104, 106, 107, 110, 112, 115], "e": [0, 2, 5, 6, 8, 9, 24, 34, 35, 36, 55, 61, 78, 79, 80, 104, 120, 121, 122, 149], "g": [0, 8, 34, 35, 36, 55], "synaps": [0, 43, 45, 46, 47, 48, 55, 56, 57, 58, 63, 65, 92, 93, 94, 95, 96, 97], "while": [0, 3, 40, 41, 49, 50, 51, 53, 54, 62, 83, 84, 107], "durat": [0, 9, 37, 100, 102, 103, 104, 105, 109, 111, 112, 113, 114], "chang": [0, 6, 8, 9, 35, 36, 37, 39, 45, 46, 56, 57, 85, 86, 102, 146, 147, 151], "underli": [0, 2, 46, 55, 63, 101, 102, 104, 106, 107, 110, 115, 148, 149], "structur": [0, 42], "note": [0, 8, 37, 146, 148, 151], "properti": [0, 2, 6, 7, 8, 9, 10, 23, 26, 35, 37, 38, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 104, 107, 109, 112, 113, 114, 116, 118, 120, 121, 122, 135, 136, 148], "setter": [0, 40, 41, 47, 48, 51, 53, 58, 87, 92, 96], "modifi": [0, 5, 6, 7, 9, 23, 26, 55, 98, 101, 106, 107, 110, 115, 116, 118, 135, 136], "after": [0, 2, 6, 7, 9, 28, 37, 39, 40, 41, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 62, 64, 66, 68, 69, 70, 71, 72, 73, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 106, 107, 110, 115, 117, 147, 148, 149], "phenomenon": 2, "rate": [2, 30, 37, 38, 39, 51, 52, 61, 73, 76, 77, 79, 80, 122, 146, 147, 148, 149], "quantiti": 2, "decreas": [2, 146, 147], "proport": [2, 38, 147, 148], "current": [2, 3, 9, 10, 25, 27, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 62, 64, 66, 71, 74, 81, 82, 83, 84, 88, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 107, 109, 111, 112, 113, 114, 123, 124, 125, 126, 144, 146, 148, 149], "valu": [2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 34, 37, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 78, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 147, 148, 149, 151], "It": [2, 35, 37, 39, 55, 149], "describ": [2, 144, 146], "differenti": 2, "equat": 2, "tau": [2, 29, 102, 124], "frac": [2, 29, 31, 37, 38, 39, 40, 41, 46, 49, 51, 53, 54, 62, 71, 72, 76, 77, 82, 100, 102, 109, 113, 114, 120, 121, 122, 123, 124, 125, 126, 146, 147, 148, 149], "dn": 2, "dt": [2, 9, 37, 40, 41, 45, 47, 48, 49, 50, 51, 53, 54, 59, 62, 64, 100, 104, 109, 113, 114, 146, 147, 148, 149], "n": [2, 37, 39, 52, 56, 57, 58, 74, 75, 76, 77, 120, 121, 122], "solut": [2, 146, 147, 148], "t": [2, 6, 9, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 62, 63, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 90, 100, 102, 109, 113, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 146, 147, 148, 149, 151], "n_0": [2, 9, 34, 38, 52, 56, 57, 58, 61, 71, 72, 73, 76, 77, 78, 79, 80, 94, 104], "0": [2, 9, 16, 19, 22, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 71, 72, 73, 85, 86, 90, 99, 100, 102, 103, 109, 111, 113, 114, 136, 146, 149, 151], "oft": 2, "neural": 2, "network": 2, "simul": [2, 3, 34, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 62, 64, 65, 71, 72, 73, 81, 82, 83, 84, 100, 104, 109, 113, 114, 147, 148, 149, 151], "involv": 2, "discret": [2, 9, 37, 100, 104, 109, 113, 114, 122, 149, 151], "timestep": [2, 40], "those": [2, 35, 40, 42, 45, 63], "thei": [2, 78, 106, 146], "often": [2, 146, 149], "appear": 2, "form": [2, 5, 7, 8], "exp": [2, 29, 30, 37, 38, 39, 40, 41, 49, 51, 54, 72, 81, 100, 102, 109, 113, 114, 120, 121, 123, 124, 125, 126, 146, 147, 148, 149], "left": [2, 29, 30, 37, 38, 39, 40, 41, 46, 49, 51, 53, 54, 58, 62, 71, 72, 73, 81, 82, 84, 100, 101, 102, 104, 109, 113, 114, 120, 121, 123, 124, 125, 126, 146, 147, 148, 149], "right": [2, 29, 30, 37, 38, 39, 40, 41, 46, 49, 51, 53, 54, 58, 62, 71, 72, 73, 81, 82, 84, 100, 101, 102, 104, 109, 113, 114, 120, 121, 123, 124, 125, 126, 146, 147, 148, 149], "wa": [2, 6, 9, 28, 35, 40, 41, 49, 51, 53, 54, 62, 71, 72, 73, 101], "solv": 2, "analyt": 2, "approxim": [2, 41, 49, 53, 62, 71, 73, 78, 82, 146, 147, 149], "via": [2, 6, 35, 36, 55], "euler": [2, 41, 49, 53, 62, 71, 73, 82], "method": [2, 5, 6, 8, 9, 11, 35, 36, 37, 39, 40, 41, 43, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 62, 67, 71, 73, 76, 77, 78, 82, 92, 94, 96, 104, 105, 107, 115], "both": [2, 6, 37, 101], "repres": [2, 6, 45, 48, 59, 64, 86, 90, 149], "select": [2, 9, 32, 33, 37, 39, 64, 94, 104], "model": [2, 3, 147], "term": [2, 37, 39, 73, 146, 148], "long": [2, 146], "live": [2, 6], "correspond": [2, 8, 35, 40, 41, 42, 47, 48, 49, 50, 51, 53, 54, 55, 59, 62, 67, 71, 72, 73, 83, 84, 90, 120, 121], "under": [2, 149], "relat": [2, 104, 144, 149], "ne": 2, "k": [2, 38, 71, 72, 73, 74, 75, 122, 124, 128, 130, 132, 134], "That": 2, "repeat": 2, "applic": [2, 100, 102, 103, 109, 111, 113, 114], "1": [2, 6, 9, 14, 16, 17, 19, 20, 22, 25, 27, 34, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 73, 74, 75, 76, 77, 78, 90, 99, 102, 116, 120, 121, 122, 144, 146, 147, 149, 151], "start": [2, 149], "To": [2, 6, 9, 10, 23, 26, 52, 76, 77, 98, 116, 135, 136, 147, 148], "outsid": [2, 104], "notion": 2, "life": 2, "we": [2, 8], "ln": 2, "b": [2, 27, 37, 38, 45, 46, 52, 56, 57, 58, 61, 71, 72, 73, 76, 77, 78, 79, 80, 94, 101, 115], "want": 2, "think": 2, "let": 2, "tau_b": 2, "Then": 2, "nb": 2, "express": [2, 122], "sometim": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22], "lambda": [2, 30, 38, 122, 148], "context": [2, 146, 147], "frequent": 2, "aris": 2, "care": [2, 67], "histori": [2, 9, 37, 39, 100, 102, 103, 104, 105, 109, 111, 113, 114], "activ": [2, 6], "formal": 2, "sum": [2, 37, 38, 39, 40, 41, 42, 51, 53, 87], "previou": [2, 29, 30, 31, 38, 47, 48, 94, 105, 111], "occur": [2, 6, 9, 10, 37, 38, 39, 44, 47, 48, 60, 94, 122, 147, 148, 149, 151], "howev": [2, 35, 37, 115], "purpos": [2, 37, 113, 114], "comparison": 2, "grow": 2, "complex": [2, 24, 25, 26, 27, 60, 99, 100, 109, 113, 114, 118, 119, 123, 124, 125, 126], "quadrat": [2, 53, 62, 82, 144], "respect": [2, 10, 37, 39, 42, 46, 55, 56, 57, 58, 68, 107], "interest": 2, "plausibl": 2, "benefit": 2, "feasibl": 2, "rather": [2, 34, 38, 42, 55, 63, 124, 126, 148], "than": [2, 34, 35, 38, 42, 55, 63, 76, 77, 78, 124, 126, 148, 149], "everi": [2, 35, 37, 39, 52, 55, 76, 77], "prior": [2, 9, 10, 28, 29, 30, 31, 32, 33, 37, 40, 41, 49, 50, 51, 53, 54, 59, 62, 90, 94, 100, 102, 103, 104, 105, 109, 111, 113, 114, 123, 124, 146], "leav": [2, 148], "tau_x": [2, 100, 109, 113, 114, 123, 124, 125, 126], "dx": 2, "x": [2, 16, 19, 22, 24, 25, 53, 56, 57, 58, 100, 102, 109, 113, 114, 119, 120, 121, 123, 124, 125, 126, 151], "sum_f": 2, "f": [2, 37, 39, 40, 41, 46, 49, 50, 51, 52, 53, 54, 61, 62, 76, 77, 78, 90, 146], "amplitud": [2, 100, 109, 113, 114, 123, 124, 125, 126], "set": [2, 6, 9, 23, 26, 35, 37, 39, 40, 41, 45, 46, 47, 48, 51, 52, 53, 55, 56, 57, 61, 66, 67, 71, 72, 73, 76, 77, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 109, 111, 113, 114, 116, 123, 125, 135, 136, 146, 148, 149], "construct": [2, 23, 26, 47, 48, 55, 64, 65, 98, 101, 106, 107, 108, 110, 115, 116, 135, 136], "evalu": [2, 6, 7, 10, 35, 40, 41, 51, 53, 106], "otherwis": [2, 8, 32, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 66, 90, 110, 124], "interpret": 2, "follow": [2, 3, 5, 7, 45, 61, 79, 80, 94, 102, 104, 120, 121, 148], "whenev": 2, "add": [2, 8, 35, 36, 37, 39, 42, 55, 63, 66, 100, 113, 123, 124, 126], "j": [2, 113, 114, 124, 126], "true": [2, 5, 7, 9, 10, 35, 37, 38, 39, 40, 41, 44, 45, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 66, 76, 77, 101, 106, 107, 110, 115, 122, 146], "event": [2, 103, 122], "sum_j": 2, "text": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 32, 34, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 120, 121, 122, 124, 146, 147, 148, 149, 151], "m": [2, 34, 37, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 64, 65, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 94, 147, 148, 149, 151], "most": [2, 9, 28, 29, 30, 31, 32, 33, 37, 39, 42, 45, 52, 76, 77, 100, 102, 103, 104, 105, 109, 111, 113, 114, 146, 147], "recent": [2, 9, 28, 29, 30, 31, 32, 33, 37, 39, 45, 100, 102, 103, 104, 105, 109, 111, 113, 114, 146], "runtim": 2, "cdot": [2, 9, 34, 38, 46, 52, 56, 57, 58, 61, 71, 72, 73, 76, 77, 78, 79, 80, 94, 104, 146], "iverson": [2, 146], "bracket": [2, 146], "inner": [2, 46, 56, 57, 58, 146], "statement": [2, 146], "fals": [2, 6, 9, 10, 34, 35, 37, 38, 39, 44, 45, 46, 47, 48, 52, 55, 56, 57, 58, 60, 61, 63, 68, 69, 70, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 101, 104, 106, 110, 115, 146], "begin": [2, 16, 19, 22, 25, 27, 32, 37, 39, 40, 41, 46, 47, 48, 49, 50, 51, 53, 54, 62, 90, 102, 109, 114, 124, 125, 126, 146, 147, 148, 149, 151], "neq": [2, 39, 151], "end": [2, 16, 19, 22, 25, 27, 32, 34, 37, 39, 40, 41, 46, 47, 48, 49, 50, 51, 53, 54, 62, 90, 102, 109, 114, 115, 124, 125, 126, 146, 147, 148, 149, 151], "further": [2, 5, 7], "new": [2, 6, 8, 9, 35, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 85, 87, 88, 89, 91, 92, 93, 96, 97, 100, 104, 109, 113, 114, 123, 124, 125, 126], "observ": [2, 28, 29, 30, 31, 32, 33, 37, 39, 43, 47, 48, 94, 100, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 114, 115, 120, 121, 123, 124, 125, 126], "h": [2, 46, 100, 109, 113, 114, 123, 124, 125, 126], "meet": 2, "criterion": [2, 103, 113, 114], "ad": [2, 6, 9, 35, 36, 37, 39, 42, 46, 52, 55, 60, 63, 67, 68, 69, 70, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 104], "so": [2, 8, 35, 37, 102, 151], "mid": [2, 120, 121, 122], "f_a": 2, "tradition": 2, "connect": [2, 36, 42, 43, 46, 55, 56, 57, 58, 63, 64, 65, 68, 69, 70, 146], "especi": [2, 42], "learn": [2, 37, 38, 39, 40, 41, 45, 46, 51, 53, 56, 57, 58], "contain": [2, 8, 27, 83, 84], "depress": [2, 14, 15, 16, 17, 18, 19, 37, 39, 146, 147], "compon": [2, 124, 126, 147, 148], "techniqu": 2, "limit": [2, 8, 12, 13, 14, 15, 16, 20, 21, 22, 37, 39, 40, 41, 47, 48, 51, 53, 87, 94], "rang": [2, 9, 44, 104], "align": [2, 9, 25, 27, 37, 40, 41, 46, 51, 53, 102, 146, 147, 148, 149], "a_": [2, 146], "v": 2, "v_": [2, 40, 41, 49, 51, 53, 54, 62, 71, 73, 81, 82, 83, 84, 147, 148, 149], "max": [2, 12, 17, 18, 19, 20, 21, 22, 37, 39, 40, 41, 42, 44, 51, 53, 73, 87, 117, 147], "mu_": [2, 15, 18, 21], "eta_": [2, 37, 39], "min": [2, 12, 14, 15, 16, 17, 18, 19, 42, 44, 117], "adjust": [2, 146], "magnitud": [2, 37, 146, 147], "ltp": [2, 37, 39, 146], "ltd": [2, 37, 39, 146], "being": [2, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 38, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 55, 61, 62, 63, 76, 77, 78, 79, 80, 86, 101, 106, 107, 110, 115], "upper": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 44], "lower": [2, 12, 13, 14, 15, 16, 17, 18, 19, 44, 73, 147], "origin": [2, 37, 39, 40, 41, 51, 53, 87, 104], "order": [2, 6, 8, 9, 36, 42, 60, 99, 104], "penal": 2, "penalti": 2, "control": [2, 37, 39, 51, 53, 62, 82, 84, 149], "refer": [2, 5, 6, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 39, 40, 41, 46, 47, 48, 49, 50, 51, 53, 54, 62, 67, 71, 72, 73, 107, 144], "power": [2, 14, 15, 17, 20, 21], "law": 2, "theta": [2, 16, 19, 22, 40, 51, 83, 84, 147, 148, 149], "nonneg": [2, 76, 77, 78, 79, 80], "filter": [2, 46, 101, 106, 110, 115], "ani": [2, 3, 5, 7, 8, 9, 10, 11, 35, 36, 37, 39, 43, 45, 48, 55, 58, 63, 68, 69, 101, 104, 105, 106, 107, 110, 115, 148, 149, 151], "would": [2, 6, 9, 10, 36], "move": [2, 36, 102], "beyond": 2, "hold": 2, "int_": 2, "infti": [2, 40, 51, 75, 147, 148, 149], "neg": [2, 6, 12, 17, 18, 19, 114, 126], "argument": [2, 5, 7, 10, 35, 36, 37, 38, 39, 42, 43, 45, 46, 55, 56, 57, 58, 63, 101, 104, 105, 107, 112, 115, 120, 121, 122], "posit": [2, 6, 12, 34, 37, 43, 55, 105], "geq": [2, 16, 19, 22, 83, 84], "deriv": [2, 92, 94, 96, 120, 149], "d": [2, 9, 94, 104, 147, 148], "And": [2, 46], "integr": [2, 40, 41, 49, 50, 51, 54, 59, 62, 64, 81, 82, 124, 126, 144, 151], "have": [3, 6, 34, 35, 43, 46, 55, 56, 57, 103, 104, 113, 114, 124, 126], "two": [3, 6, 28, 37, 42, 45, 46, 147, 149], "kind": 3, "absolut": [3, 40, 41, 49, 50, 51, 53, 54, 62, 71, 72, 73, 81, 82, 83, 84, 90, 100, 109, 123, 125], "arp": [3, 40, 41, 49, 50, 51, 53, 54, 62, 90], "rel": [3, 28, 29, 30, 31, 32, 33, 35, 37, 43, 100, 102, 103, 105, 109, 111, 113, 114, 120, 121], "rrp": 3, "cannot": [3, 6, 8, 9, 43, 85, 86, 147], "presynapt": [3, 37, 39, 40, 41, 47, 48, 49, 50, 51, 53, 54, 62, 74, 81, 82, 83, 84, 146, 147, 148, 151], "doe": [3, 6, 8, 9, 35, 42, 55, 63, 92, 96, 104, 122, 151], "depolar": [3, 149], "repolar": 3, "hyperpolar": 3, "mean": [3, 37, 39, 40, 41, 42, 51, 87, 101, 106, 107, 110, 115, 120, 121, 122], "difficult": 3, "fire": [3, 40, 41, 49, 50, 51, 54, 62, 75, 144, 146, 147], "imposs": 3, "time": [3, 6, 9, 10, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 94, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 122, 123, 124, 125, 126, 144, 147, 148, 149, 151], "voltag": [3, 40, 41, 43, 49, 50, 51, 53, 54, 59, 62, 71, 72, 73, 75, 81, 82, 83, 84, 91, 144, 148, 149], "reset": [3, 9, 37, 40, 41, 45, 47, 48, 49, 50, 51, 53, 54, 59, 62, 64, 73, 83, 84, 104, 147, 148, 149], "determin": [3, 11, 23, 26, 35, 46, 56, 57, 58, 79, 98, 100, 109, 116, 118, 135, 136], "strongli": 3, "constant": [3, 29, 37, 39, 40, 41, 49, 51, 53, 54, 62, 71, 72, 73, 81, 82, 100, 102, 109, 113, 114, 146, 147, 148, 149], "wherea": [3, 6, 9, 35], "other": [3, 8, 38, 42, 44, 55, 60, 63, 101, 106, 110, 115, 148], "parameter": [3, 61, 79, 80, 146], "class": [5, 6, 7, 8, 9, 10, 12, 13, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134], "prehook": [5, 7, 10, 101, 106, 107, 110, 115], "str": [5, 6, 7, 8, 9, 35, 36, 37, 39, 42, 43, 44, 45, 55, 59, 60, 63, 64, 66, 67, 101, 107, 108, 115, 120, 121, 122], "none": [5, 6, 7, 9, 10, 11, 12, 17, 18, 19, 23, 25, 26, 27, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 55, 56, 57, 58, 60, 61, 63, 66, 67, 68, 69, 71, 72, 73, 76, 77, 78, 79, 80, 83, 84, 87, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 135, 136], "posthook": [5, 7, 101, 106, 107, 110, 115], "prehook_kwarg": [5, 7, 107], "dict": [5, 6, 7, 8, 42, 43, 55, 63, 107, 120, 121, 122], "posthook_kwarg": [5, 7, 107], "train_upd": [5, 7, 10, 44, 60, 101, 106, 107, 110, 115], "bool": [5, 6, 7, 9, 10, 23, 26, 34, 35, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 68, 69, 70, 76, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 106, 107, 109, 110, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 135, 136], "eval_upd": [5, 7, 10, 44, 60, 101, 106, 107, 110, 115], "sourc": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "hook": [5, 10, 35, 44, 55, 60, 101, 107, 115], "provid": [5, 7, 8, 42, 63, 117], "forward": [5, 7, 10, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 101, 104, 106, 107, 110, 112, 115], "subclass": [5, 10, 35, 36, 37, 45, 55, 59, 64, 66, 105, 107], "manag": [5, 7, 67, 83, 84, 85, 86, 94], "safe": [5, 7, 55], "garbag": 5, "collector": 5, "without": [5, 9, 36, 107, 112, 124, 126, 147, 148, 149], "cyclic": 5, "option": [5, 6, 7, 9, 10, 23, 26, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 73, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 135, 136], "name": [5, 6, 8, 9, 35, 36, 37, 39, 42, 43, 44, 55, 60, 63, 67, 90, 92, 94, 96, 107, 115, 120, 121, 122], "execut": [5, 10, 107], "default": [5, 6, 7, 9, 10, 11, 23, 26, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 135, 136], "keyword": [5, 7, 35, 36, 37, 39, 42, 43, 45, 46, 55, 56, 57, 58, 63, 107], "register_forward_pre_hook": [5, 7, 107], "register_forward_hook": [5, 7, 107], "run": [5, 7, 10, 40, 41, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 59, 60, 62, 64, 101], "train": [5, 7, 10, 34, 35, 36, 37, 40, 41, 43, 44, 51, 52, 53, 60, 61, 76, 77, 78, 79, 80, 101, 106, 107, 110, 115, 144], "mode": [5, 7, 10, 35, 37, 39, 40, 41, 44, 47, 48, 51, 53, 59, 60, 101, 106, 107, 110, 115], "eval": [5, 7, 10, 44, 60, 101, 106, 107, 110, 115], "rais": [5, 6, 7, 8, 9, 10, 24, 35, 36, 37, 42, 43, 45, 55, 59, 63, 64, 66, 105, 107, 147], "runtimeerror": [5, 6, 7, 9, 35, 42, 43, 55, 63, 66, 107], "least": [5, 6, 7, 42], "one": [5, 7, 35, 37, 39, 40, 41, 42, 51, 53, 55, 57, 58, 63, 87, 129, 130, 131, 132, 133, 134, 147], "If": [5, 6, 7, 9, 11, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 49, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 66, 68, 71, 72, 73, 76, 77, 87, 101, 106, 107, 108, 110, 112], "signatur": [5, 7, 47, 48, 64, 101, 106, 107, 110, 115], "arg": [5, 7, 8, 12, 13, 28, 37, 42, 63, 64, 65, 105, 107, 108, 112, 127, 128, 129, 130, 131, 132, 133, 134], "Or": [5, 7], "with_kwarg": [5, 7], "kwarg": [5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 101, 104, 107, 108, 112, 127, 128, 129, 130, 131, 132, 133, 134], "see": [5, 7, 37, 39, 67, 98, 107, 135, 148, 149], "constraint": [6, 9, 85, 86, 104], "tupl": [6, 11, 23, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 83, 84, 86, 87, 98, 99, 101, 104, 106, 110, 115, 116, 117, 120, 121, 135, 136], "int": [6, 9, 23, 24, 25, 26, 27, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 76, 77, 79, 80, 85, 86, 87, 98, 99, 100, 109, 113, 114, 116, 117, 118, 119, 123, 124, 125, 126, 135, 136], "support": [6, 9, 46, 47, 48, 56, 57, 58, 64, 65, 146], "dimension": [6, 46], "constrain": [6, 9, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "buffer": [6, 8, 9, 85, 94], "dim": [6, 9, 40, 41, 49, 50, 51, 53, 54, 59, 60, 62, 64, 65, 85, 86, 99, 117], "attribut": [6, 8, 9, 35, 38, 43, 44, 47, 48, 55, 60, 66, 67, 86, 87, 90, 94, 101, 108, 115, 149], "valueerror": [6, 9, 35, 42, 55, 63], "persist": 6, "dictionari": [6, 8, 9, 36, 42, 55, 63], "themselv": 6, "uniqu": [6, 35, 42, 43], "element": [6, 9, 11, 37, 38, 40, 41, 42, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 63, 76, 77, 78, 79, 80, 86, 99, 100, 103, 109, 113, 114, 123, 124, 125, 126], "For": [6, 36, 37, 39, 40, 41, 47, 48, 49, 50, 51, 53, 54, 55, 62, 71, 72, 73, 74, 75, 100, 101, 102, 109, 113, 114, 115, 146], "place": [6, 36, 55], "tensor": [6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136], "three": [6, 42], "sinc": [6, 52, 76, 77, 103], "scalar": [6, 9, 11, 23, 26, 98, 116, 120, 121, 122, 135, 136], "ignor": [6, 7, 10, 101, 106, 110, 115], "compat": [6, 8, 9], "test": [6, 35, 100, 101, 103, 106, 109, 110, 113, 114, 115, 120, 121, 122, 124, 126], "torch": [6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 136], "return": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "type": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "classmethod": [6, 47, 48, 64, 101, 106, 107, 110, 115, 120, 121, 122], "compatible_": 6, "compatible_lik": 6, "iter": [6, 35, 42, 52, 55, 61, 77, 80], "creat": [6, 9, 35, 42, 46, 47, 48, 55, 56, 57, 63, 67, 68, 69, 70, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97], "shape": [6, 23, 26, 40, 41, 47, 48, 49, 50, 51, 53, 54, 59, 62, 64, 65, 86, 87, 98, 116, 118, 135, 136], "like": [6, 8, 9, 23, 26, 37, 39, 40, 41, 45, 46, 51, 53, 56, 57, 58, 64, 87, 98, 116, 118, 135, 136, 144], "nn": [6, 8, 10, 35, 36, 44, 60], "_description_": [6, 9, 78], "compatible_like_": 6, "suffici": 6, "made": [6, 8, 67, 104], "sort": 6, "result": [6, 9, 37, 38, 42, 45, 46, 63, 100, 102, 103, 104, 109, 111, 113, 114, 120, 121, 122], "first": [6, 9, 34, 42, 47, 48, 55, 63, 74, 75, 76, 78, 79, 148], "last": [6, 9, 34, 37, 39, 40, 41, 43, 45, 49, 50, 51, 53, 54, 59, 62, 71, 72, 73, 90, 103, 104, 105, 107, 151], "increas": [6, 40, 41, 49, 51, 53, 62, 71, 72, 82, 146, 147, 149], "deregister_constrain": [6, 9], "deregist": [6, 7, 9, 35], "isn": [6, 9], "call": [6, 7, 8, 9, 10, 35, 36, 37, 39, 43, 44, 45, 55, 60, 63, 68, 69, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 104, 106, 107, 110, 112, 115, 122, 146, 148, 149], "noth": [6, 9, 92, 96], "fulli": [6, 8, 9, 44, 60], "qualifi": [6, 8, 9, 44, 60], "string": [6, 8, 9, 36, 42, 44, 60], "regist": [6, 7, 8, 9, 10, 35, 44, 45, 46, 55, 56, 57, 60, 63, 68, 69, 70, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 101, 106, 107, 108, 110, 115], "number": [6, 9, 24, 34, 35, 38, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 67, 71, 72, 73, 76, 77, 78, 79, 80, 86, 94, 98, 104, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 135], "requir": [6, 8, 23, 26, 34, 36, 37, 39, 43, 46, 68, 69, 70, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 104, 116, 118, 124, 126, 135, 136], "dims_": 6, "extra_repr": [6, 45, 59, 64], "extra": [6, 8, 35, 45, 59, 64], "represent": [6, 55], "print": 6, "custom": [6, 37, 39, 40, 41, 42, 51, 53, 87], "you": [6, 8], "re": 6, "implement": [6, 8, 10, 35, 36, 37, 40, 41, 42, 45, 49, 53, 55, 59, 62, 63, 64, 66, 71, 73, 82, 83, 84, 105, 107, 144, 147, 148], "your": [6, 8], "own": [6, 35, 36, 43], "singl": [6, 10, 36, 42, 63, 110], "line": 6, "multi": 6, "accept": [6, 43, 104], "liveconstrain": [6, 9], "enforc": [6, 8, 104], "assign": [6, 8, 38, 40, 41, 47, 48, 51, 53, 58, 87], "reconstrain": [6, 9], "exist": [6, 8, 9, 34, 35, 38, 40, 42, 55, 63, 66, 67, 104, 107, 146], "ahead": [6, 9], "realloc": [6, 9], "remov": [6, 9, 35], "longer": [6, 9, 107], "valid": [6, 8, 9, 42, 45, 55, 63, 67, 107, 120, 121, 122], "self": [6, 9, 35, 37, 43, 104], "register_constrain": [6, 9], "invalid": [6, 8, 9, 37, 39, 67], "attributeerror": [6, 8, 9, 35, 42, 55, 63], "get_paramet": [6, 9], "point": [6, 34, 52, 76, 77, 122, 149], "callabl": [7, 11, 12, 13, 28, 37, 39, 40, 41, 42, 51, 53, 67, 87, 101, 104, 106, 110, 115, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134], "removablehandl": 7, "befor": [7, 8, 9, 37, 39, 42, 44, 46, 58, 60, 63, 94, 101, 104, 105, 106, 110, 115, 117, 147, 149], "still": [7, 35, 46, 52, 67, 76, 77, 100, 109, 123, 125], "evalexec": 7, "pytorch": [7, 8, 37, 39, 40, 41, 51, 53, 87, 122], "typeerror": [7, 8], "instanc": [7, 8, 35, 45, 66, 101, 115, 146], "warn": 7, "runtimewarn": 7, "alreadi": [7, 35, 42, 55, 63, 110, 115], "registr": [7, 55], "trainexec": 7, "extens": 8, "similar": [8, 37, 39, 40, 41, 51, 53, 87, 124, 126], "regular": 8, "enabl": 8, "simpl": [8, 25, 74, 75], "export": 8, "exact": [8, 9, 103], "kei": [8, 55], "insert": [8, 9, 42], "addition": [8, 147], "check": [8, 124, 126], "__setattr__": 8, "__init__": 8, "parent": [8, 67], "child": 8, "constructor": [8, 35, 37, 39, 46, 47, 48, 56, 57, 58, 64, 65, 68, 69, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 106, 107, 108, 110, 115], "get_extra": 8, "target": [8, 9, 55, 100, 101, 106, 107, 108, 109, 110, 115, 120, 121, 123, 125], "throw": 8, "error": [8, 42, 55, 63], "similarli": 8, "specif": [8, 45, 66, 120, 149], "get_submodul": 8, "look": 8, "referenc": [8, 43, 107], "path": [8, 35, 108], "termin": 8, "resolv": [8, 35], "someth": 8, "get_extra_st": 8, "state_dict": 8, "set_extra_st": 8, "store": [8, 9, 37, 38, 39, 58, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115], "build": 8, "picklabl": 8, "ensur": 8, "work": [8, 110, 144], "serial": 8, "backward": 8, "guarante": [8, 35], "break": 8, "pickl": 8, "register_extra": 8, "manner": [8, 37, 105], "register_buff": 8, "except": [8, 10, 42, 44, 60, 124, 126, 146, 148], "access": [8, 55, 63], "keyerror": 8, "empti": [8, 36, 37, 100, 102, 103, 105, 106, 109, 111, 113, 114], "dot": [8, 35, 43, 101, 115], "notat": [8, 101, 115], "python": [8, 42], "identifi": [8, 42, 43], "load_state_dict": 8, "within": [8, 9], "step_tim": [9, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 64, 65, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 100, 102, 103, 104, 105, 109, 111, 112, 113, 114, 149], "float": [9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 94, 99, 100, 102, 103, 104, 105, 109, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "dimensionalmodul": [9, 59, 85, 86, 88, 89, 90, 91], "index": [9, 45, 104], "restor": 9, "pointer": 9, "slice": [9, 52, 61, 77, 80], "overwrit": 9, "preserv": [9, 40, 41, 51, 53, 104], "latest_first": 9, "offset": [9, 43, 45], "full": [9, 118], "nativ": 9, "storag": [9, 104], "latest": [9, 25, 27, 109, 114, 123, 124, 125, 126], "roll": 9, "By": [9, 101], "zeroth": 9, "window": 9, "locat": [9, 120, 121], "oper": [9, 46, 101, 105], "overwritten": 9, "retriev": [9, 35, 94, 104], "increment": 9, "write": 9, "recordsz": 9, "interp": [9, 104], "interpol": [9, 29, 30, 31, 32, 33, 37, 47, 48, 94, 100, 102, 103, 104, 105, 109, 111, 113, 114], "toler": [9, 94, 100, 104, 109, 123, 124, 125, 126], "1e": [9, 60, 99, 104], "07": [9, 104, 147], "ever": 9, "attempt": [9, 40, 41, 51, 53, 87], "regardless": [9, 10, 35], "maximum": [9, 12, 13, 34, 37, 38, 39, 46, 47, 48, 52, 56, 57, 58, 61, 64, 65, 78, 94, 104, 117], "co": [9, 37, 39, 47, 48, 94], "7": [9, 104], "ldot": [9, 34, 38, 52, 56, 57, 58, 61, 71, 72, 73, 76, 77, 78, 79, 80, 104], "mimic": 9, "gather": [9, 38, 104], "thrown": 9, "avoid": [9, 63, 67], "clamp": [9, 35, 55, 78], "as_prehook": [10, 44, 60, 115], "prepend": [10, 36, 44, 60, 101, 106, 110, 115], "always_cal": [10, 44, 60], "contextualhook": [10, 107], "abc": [10, 36, 45, 55, 59, 64, 66, 105, 112], "interact": 10, "act": 10, "previous": [10, 44, 60, 104], "even": [10, 35, 37, 39, 42, 44, 55, 60, 63, 101, 115], "trigger": [10, 147, 148, 149], "here": [10, 35, 144], "ignore_mod": 10, "unregist": 10, "normal": [10, 38, 44, 117, 120, 151], "prevent": 10, "manual": [10, 63, 85, 86], "configur": 10, "abstract": [10, 36, 37, 45, 55, 59, 64, 66, 105, 112], "notimplementederror": [10, 35, 36, 37, 45, 55, 59, 64, 105, 107], "convers": 11, "convert": 11, "non": [11, 120, 121, 122], "leftmost": 11, "unspecifi": [11, 42], "protocol": [12, 13, 28, 65, 108, 127, 128, 129, 130, 131, 132, 133, 134], "param": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 66, 67], "po": [12, 17, 18, 19], "part": 12, "scale": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 37, 38, 39, 52, 60, 61, 79, 80, 99, 113, 114, 120, 121, 124, 126, 146], "partial": [13, 35, 46, 47, 48, 56, 57, 58, 64, 101, 106, 107, 110, 115], "depend": [14, 15, 16, 17, 18, 19, 20, 21, 22, 36, 37, 39, 40, 45, 72, 73, 75, 85, 86, 110, 144, 148], "soft": [14, 15, 17, 18, 20, 21], "equival": [14, 17, 20, 104, 146, 148], "expon": [14, 15, 17, 18, 20, 21], "u_": [14, 15, 16, 17, 18, 19, 20, 21, 22], "p": [14, 15, 16, 17, 18, 19, 20, 21, 22, 60, 99, 120, 121, 122, 146], "p_": [14, 15, 16, 17, 18, 19, 20, 21, 22], "sharp": [16, 22, 41, 49, 149], "hard": [16, 19, 22], "u": [17, 18, 19], "upper_pow": 18, "lower_pow": 18, "dtype": [23, 26, 98, 103, 113, 114, 116, 118, 120, 121, 122, 135, 136], "layout": [23, 26, 98, 116, 118, 135, 136], "devic": [23, 26, 36, 98, 116, 118, 135, 136], "requires_grad": [23, 26, 68, 69, 70, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 116, 118, 135, 136], "uniniti": 23, "overrid": [23, 26, 35, 37, 38, 39, 98, 116, 118, 135, 136], "gradient": [23, 26, 68, 69, 70, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 116, 118, 135, 136], "ndarrai": [24, 119], "agnost": [24, 119], "exponenti": [24, 25, 27, 29, 30, 37, 39, 40, 41, 49, 51, 52, 53, 54, 62, 71, 72, 73, 76, 77, 81, 82, 100, 102, 109, 113, 114, 123, 124, 125, 126, 144, 147], "y": [24, 56, 57, 58, 119, 148], "numpi": [24, 119], "ob": [25, 27, 37, 100, 102, 103, 109, 111, 113, 114], "level": [25, 27], "alpha": [25, 27, 102], "smooth": [25, 27, 102], "s_0": [25, 27, 102], "x_0": [25, 27, 102], "s_": [25, 27, 102], "x_": [25, 27, 37, 39, 102, 124, 146], "s_t": [25, 27, 102], "factor": [25, 27, 102, 149], "revis": [25, 27], "fill": [26, 37, 98, 100, 102, 103, 105, 109, 111, 113, 114, 116, 118, 135, 136], "trend": 27, "beta": 27, "holt": 27, "linear": [27, 36, 40, 56, 57, 58, 71, 72, 73, 74, 75, 81, 102, 144, 149], "b_0": 27, "x_1": 27, "b_": 27, "b_t": 27, "prev_data": [28, 29, 30, 31, 32, 33, 37, 100, 102, 103, 105, 109, 111, 113, 114], "next_data": [28, 29, 30, 31, 32, 33, 37, 100, 102, 103, 105, 109, 111, 113, 114], "subsequ": [28, 29, 30, 31, 32, 33, 37, 48, 100, 102, 103, 105, 109, 111, 113, 114], "sample_at": [28, 29, 30, 31, 32, 33, 37, 100, 102, 103, 105, 109, 111, 113, 114], "measur": [28, 104], "time_const": [29, 37, 49, 50, 54, 62, 71, 72, 81, 82, 100, 109, 113, 114], "decai": [29, 30, 37, 38, 39, 40, 41, 49, 51, 53, 54, 62, 71, 72, 73, 81, 82, 100, 109, 113, 114, 123, 124, 125, 126, 147, 148], "d_": [29, 30, 31, 32, 33, 146], "ubsequ": [29, 30, 31, 32, 33], "decay_r": [30, 38], "linearlli": 31, "time_first": 34, "transform": [34, 42, 56, 57, 58, 63], "inter": [34, 36, 52, 76, 77, 94], "interv": [34, 46, 52, 56, 57, 58, 61, 76, 77, 79, 80], "pad": [34, 42, 46], "nan": 34, "could": 34, "fewer": 34, "final": [34, 37, 42, 104, 105], "calcul": [34, 37, 38, 39, 47, 48, 101, 105, 146, 148], "interspik": 34, "c": [34, 42, 46], "popul": 34, "etc": [34, 55], "amongst": [34, 35], "trainer": [35, 36, 37], "layer": [35, 36, 37, 39, 42, 43, 63], "monitor": [35, 36, 37, 39, 43, 55, 101, 106, 108, 110, 115, 147], "alter": [35, 36, 37, 46, 56, 57, 104], "likewis": [35, 36, 146], "add_cel": [35, 37, 42, 55, 63], "auxiliari": [35, 36, 37], "add_monitor": 35, "attr": [35, 43, 44, 45, 60, 101, 108, 115], "monitorconstructor": [35, 101, 106, 107, 110, 115], "tag": 35, "trainabl": [35, 36, 37, 39, 45, 67], "seper": [35, 43], "alias": 35, "pool": [35, 43], "off": [35, 90], "bypass": 35, "less": [35, 76, 77], "cours": 35, "delet": [35, 37, 42, 45, 55, 63, 66, 67], "yield": [35, 52, 55, 61, 77, 80], "clear": [35, 37, 40, 41, 45, 47, 48, 49, 50, 51, 53, 54, 55, 59, 62, 64, 66, 67, 101, 104, 107, 112], "addit": [35, 37, 45, 46, 51, 52, 56, 57, 58, 66, 76, 77, 84, 124, 126, 147, 148], "overridden": [35, 37, 39, 107, 112], "well": [35, 37, 69, 144], "doesn": [35, 37, 42, 55, 63, 71, 72, 73], "del_cel": [35, 42, 55, 63], "strictli": [35, 122], "again": [35, 42], "associ": [35, 52, 55, 61, 66], "del_monitor": 35, "get_cel": [35, 55], "get": [35, 36, 52, 55, 76, 77], "get_monitor": 35, "togeth": [35, 146], "possibl": [35, 38, 104], "named_cel": [35, 55], "named_monitor": 35, "named_monitors_of": 35, "associt": 35, "put": 35, "cumul": [35, 37, 39, 55, 100, 113, 120, 121, 122, 146], "onc": 35, "celltrain": 36, "register_cel": [36, 39], "register_lay": 36, "prefix": 36, "alif": [36, 144], "l0": 36, "moduledict": 36, "alongsid": 36, "lr_post": [37, 39], "lr_pre": [37, 39], "tc_post": [37, 39], "tc_pre": [37, 39], "tc_elig": 37, "delai": [37, 39, 43, 45, 46, 47, 48, 56, 57, 58, 64, 65, 68, 94, 144], "interp_toler": [37, 39], "batch_reduct": [37, 39, 40, 41, 51, 53, 87], "layerwisetrain": [37, 39], "plastic": [37, 39, 144], "elig": [37, 144], "trace": [37, 39, 100, 109, 113, 114, 123, 124, 125, 126, 144], "w": [37, 39, 46, 56, 57, 58, 146], "delta": [37, 39, 40, 41, 47, 48, 49, 51, 52, 53, 54, 61, 62, 71, 72, 73, 76, 77, 78, 81, 82, 100, 102, 109, 113, 114, 123, 124, 125, 126, 144, 146, 147, 148, 149], "gamma": [37, 122, 146], "r": [37, 120, 121, 122, 146, 148], "z_": 37, "post": [37, 39, 45, 46, 56, 57, 58, 101, 146], "pre": [37, 39, 45, 46, 56, 57, 58, 101, 146], "tau_z": [37, 146], "t_": [37, 40, 41, 49, 50, 51, 53, 54, 62, 90, 146], "tau_": [37, 39, 146], "t_n": [37, 39, 146], "sign": [37, 39], "expand": [37, 46], "reinforc": 37, "split": 37, "sgn": [37, 39], "hebbian": [37, 39, 144], "anti": [37, 39, 146], "postsynapt": [37, 39, 40, 41, 45, 49, 50, 51, 53, 54, 59, 62, 71, 72, 73, 90, 146, 147], "assum": [37, 39, 40, 41, 42, 45, 51, 53, 63, 87, 101], "trace_mod": [37, 39], "liter": [37, 39, 42, 47, 48], "nearest": [37, 39, 47, 48, 104, 109, 114], "desir": [37, 39, 60, 99, 115, 120, 121], "expect": [37, 39, 46, 52, 55, 56, 57, 58, 61, 76, 77, 78, 79, 80, 104, 110, 120, 121, 122], "basi": [37, 39], "keep": [37, 39, 40, 41, 51, 53, 87], "visit": [37, 39, 40, 41, 47, 48, 49, 50, 51, 53, 54, 62, 71, 72, 73, 74, 75], "zoo": [37, 39, 40, 41, 47, 48, 49, 50, 51, 53, 54, 62, 71, 72, 73, 74, 75], "eligibilitytracereduc": 37, "foldingreduc": [37, 100, 102, 103, 109, 111, 113, 114], "fold": [37, 100, 102, 103, 105, 109, 111, 113, 114], "cond": 37, "initi": [37, 39, 43, 46, 56, 57, 58, 59, 67, 68, 69, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 100, 102, 103, 104, 105, 109, 111, 112, 113, 114], "incorpor": [37, 100, 102, 103, 104, 105, 109, 111, 112, 113, 114, 123, 124, 125, 126, 148, 149], "step_data": [37, 100, 102, 103, 105, 109, 111, 113, 114], "stdp": [37, 144], "reward": [37, 146], "num_class": 38, "classifi": 38, "per": [38, 46, 94], "intern": [38, 47, 48, 58, 86], "multipli": [38, 124, 126, 148], "them": [38, 42, 90, 101, 106, 107, 110, 115, 144], "b_k": [38, 41, 53, 71, 73, 147, 149], "group": [38, 40, 41, 42, 45, 47, 48, 49, 50, 51, 53, 54, 59, 62, 63, 64, 65, 71, 72, 73, 86], "total": [38, 147, 148, 149, 151], "logit": 38, "label": 38, "infer": 38, "ground": 38, "truth": 38, "predict": 38, "were": [38, 42], "averag": [38, 71, 72, 73, 102], "nclass": 38, "ndim": 38, "exclud": [38, 40, 41, 45, 46, 49, 50, 51, 53, 54, 56, 57, 58, 59, 62, 64, 65, 86], "l_1": 38, "raw": 38, "recalcul": 38, "bigl": 39, "f_": [39, 40, 41, 49, 50, 51, 53, 54, 62, 90, 124, 146], "bigr": 39, "x_n": 39, "tau_n": 39, "rest_v": [40, 41, 49, 50, 51, 53, 54, 62, 71, 73, 81, 82, 84], "reset_v": [40, 41, 49, 50, 53, 54, 62, 83], "thresh_eq_v": [40, 51, 149], "refrac_t": [40, 41, 49, 50, 51, 53, 54, 62, 83, 84, 90], "tc_membran": [40, 41, 51, 53], "tc_adapt": [40, 41, 53], "spike_incr": [40, 41, 51, 53, 71, 72], "resist": [40, 41, 49, 50, 51, 53, 54, 62, 81, 82, 148], "batch_siz": [40, 41, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 62, 64, 65, 85, 86], "adaptationmixin": [40, 41, 51, 53], "voltagemixin": [40, 41, 49, 50, 51, 53, 54, 62], "spikerefractorymixin": [40, 41, 49, 50, 51, 53, 54, 62], "leaki": [40, 50, 51, 54, 144], "dynam": [40, 41, 47, 48, 49, 50, 51, 53, 54, 59, 62, 64, 67, 81, 82, 83, 84, 147, 148, 149], "v_m": [40, 41, 49, 51, 53, 54, 62, 71, 73, 81, 82, 83, 84, 147, 148, 149], "rest": [40, 41, 47, 48, 49, 50, 51, 53, 54, 59, 62, 64, 71, 73, 81, 82, 84, 147, 148, 149], "r_mi": [40, 41, 49, 51, 53, 54, 62, 81, 82, 148, 149], "tau_m": [40, 41, 49, 51, 53, 54, 62, 81, 82, 148, 149], "theta_": [40, 51, 73, 75, 147, 148, 149], "sum_k": [40, 41, 51, 53, 147, 148, 149], "theta_k": [40, 51, 72, 73, 75, 147, 148], "tau_k": [40, 41, 53, 71, 72, 147, 148, 149], "leftarrow": [40, 41, 49, 51, 53, 54, 62, 71, 72, 73, 83, 84, 147, 148, 149], "d_k": [40, 51, 53, 147, 148, 149], "equilibrium": [40, 41, 49, 51, 53, 54, 62, 71, 73, 75, 81, 82, 84, 147, 148, 149], "mv": [40, 41, 49, 51, 53, 54, 62, 71, 72, 73, 75, 81, 82, 83, 84, 91, 147, 148, 149], "refractori": [40, 41, 49, 50, 51, 52, 53, 54, 59, 62, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90], "period": [40, 41, 49, 50, 51, 52, 53, 54, 59, 62, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 89, 90], "r_m": [40, 41, 49, 51, 53, 54, 62, 81, 82, 148], "omega": [40, 41, 49, 51, 53, 54, 62, 81, 82, 148], "keep_adapt": [40, 41, 51, 53], "refrac_lock": [40, 41, 49, 50, 51, 53, 54, 62], "na": [40, 41, 49, 50, 51, 53, 54, 62, 71, 74, 81, 82, 83, 84, 88, 92, 93, 95, 147, 148, 149, 151], "additon": [40, 41, 51, 53, 87], "lead": [40, 41, 51, 53, 87], "unreduc": [40, 41, 51, 53, 87], "batchedshap": [40, 41, 49, 50, 51, 53, 54, 62, 86], "batchsz": [40, 41, 45, 49, 50, 51, 53, 54, 59, 62, 85, 86], "count": [40, 41, 49, 50, 51, 53, 54, 62, 86, 100, 109, 122, 123, 125], "replic": [40, 41, 49, 50, 51, 53, 54, 61, 62, 79, 80, 86], "refrac": [40, 41, 49, 50, 51, 52, 53, 54, 59, 62, 71, 72, 73, 76, 77, 83, 84, 89, 90], "millivolt": [40, 41, 43, 49, 50, 51, 53, 54, 59, 62, 91], "rheobase_v": [41, 49], "thresh_v": [41, 49, 50, 53, 54, 62, 83, 84, 149], "voltage_coupl": [41, 53, 71], "delta_t": [41, 49, 149], "v_t": [41, 49, 149], "i_x": [41, 48, 53, 147, 149, 151], "w_k": [41, 53, 71, 74, 147, 149], "a_k": [41, 71, 72, 73, 147, 149], "approach": [41, 49, 149], "rapidli": [41, 49], "steep": [41, 49, 149], "natur": [41, 49, 53, 62, 82, 120, 121, 122], "abov": [41, 49, 147, 149], "rheobas": [41, 49, 149], "strength": [41, 53, 62, 71, 82], "coupl": [41, 53, 71, 147, 149], "mu": [41, 53, 71, 120, 121, 147, 148, 149], "onetoon": [42, 46, 56, 57, 58, 63, 83, 84, 103, 104, 113, 114], "combin": 42, "stack": 42, "prod": [42, 56, 57, 58], "complet": 42, "bipartit": 42, "graph": 42, "second": [42, 55, 63, 148], "third": 42, "take": [42, 78, 92, 96, 110, 119, 127, 128, 129, 130, 131, 132, 133, 134], "reshap": [42, 45, 46, 56, 57, 58], "einop": 42, "produc": [42, 43], "receiv": [42, 63, 106, 146], "ouput": 42, "__call__": [42, 55], "captur": [42, 63], "py": [42, 45, 46, 55, 56, 57, 58, 63], "meth": [42, 45, 46, 56, 57, 58, 63], "specifyi": [42, 55, 63], "add_connect": [42, 55, 63], "add_neuron": [42, 55, 63], "hasn": [42, 55, 63], "been": [42, 55, 63, 104], "pair": [42, 43, 55, 63], "del_connect": [42, 55, 63], "del_neuron": [42, 55, 63], "wire": [42, 55, 63, 146], "logic": [42, 55, 63, 83, 84, 104, 124, 126], "topologi": [42, 63], "ident": [42, 63, 106], "submodul": [43, 108], "compos": [43, 45, 101], "local_remap": 43, "local": 43, "remap": 43, "alia": [43, 50], "callback": 43, "realign": 43, "postspik": 43, "postvoltag": 43, "precurr": 43, "syncurr": [43, 45], "synapt": [43, 45, 46, 47, 48, 56, 57, 58, 64, 92, 93, 94, 95, 96], "prespik": 43, "synspik": [43, 45], "statehook": [44, 60], "batched_inshap": 45, "batched_outshap": [45, 56, 57, 58], "bia": [45, 46, 56, 57, 58, 68, 69], "learnabl": [45, 46, 56, 57, 58, 68, 69, 70], "clearabl": 45, "defaultupdat": [45, 66], "exclude_weight": 45, "exclude_bia": 45, "exclude_delai": 45, "delayedbi": 45, "newli": [45, 65, 108], "maxmimum": 45, "inshap": [45, 46, 56, 57, 58], "insiz": 45, "cach": 45, "refresh": 45, "like_input": [45, 46, 56, 57, 58], "like_synapt": [45, 46, 56, 57, 58], "outshap": [45, 46, 56, 57, 58], "outsiz": 45, "postsyn_recept": [45, 46, 56, 57, 58], "l": 45, "presyn_recept": [45, 46, 56, 57, 58], "selector": [45, 46, 47, 48, 56, 57, 58, 64, 94], "height": 46, "width": 46, "channel": 46, "kernel": 46, "stride": 46, "dilat": 46, "synapseconstructor": [46, 47, 48, 56, 57, 58, 64], "weight_init": [46, 56, 57, 58], "bias_init": [46, 56, 57, 58], "delay_init": [46, 56, 57, 58], "weightbiasdelaymixin": [46, 56, 57, 58], "convolut": 46, "spatial": 46, "plane": 46, "kh": 46, "kw": 46, "delay_": [46, 56, 57, 68], "effect": [46, 56, 57, 147, 149], "unless": [46, 56, 57, 107, 112], "later": [46, 56, 57], "uniform": [46, 56, 57, 58], "random": [46, 56, 57, 58, 98, 120, 121, 122, 135], "rand": [46, 56, 57, 58, 135], "anoth": [46, 94], "h_": 46, "w_": 46, "formula": 46, "document": 46, "lfloor": [46, 122], "2": [46, 51, 120, 121, 122, 144, 149], "p_h": 46, "d_h": 46, "k_h": 46, "s_h": 46, "rfloor": [46, 122], "p_w": 46, "d_w": 46, "k_w": 46, "s_w": 46, "ph": 46, "pw": 46, "side": [46, 148], "dh": 46, "dw": [46, 146], "sh": [46, 113, 114, 124, 126], "sw": 46, "reli": 46, "upon": [46, 149], "consequenti": 46, "memori": [46, 52, 61], "spike_q": [47, 48], "interp_mod": [47, 48], "interp_tol": [47, 48], "current_overbound": [47, 48], "spike_overbound": [47, 48], "delayedspikecurrentaccessormixin": [47, 48], "spikederivedcurrentmixin": 47, "memoryless": [47, 48], "respond": [47, 48, 147], "instantan": [47, 48], "q": [47, 48, 151], "charg": [47, 48, 151], "carri": [47, 48, 151], "pc": [47, 48, 151], "replac": [47, 48, 94], "cuba": [47, 48, 144], "variant": [47, 48, 144], "getter": [47, 48], "recordmodul": [47, 48, 64, 92, 93, 94, 95, 96, 97, 112], "partialconstructor": [47, 48, 64, 101, 106, 107, 110, 115], "spikecurrentmixin": 48, "passthrough": [48, 111], "inject": 48, "glif": [50, 51, 144, 147, 148], "lif": [50, 144], "reset_v_add": 51, "reset_v_mul": 51, "rc_adapt": 51, "lambda_k": [51, 148], "m_v": [51, 84, 148], "b_v": [51, 84, 148], "unitless": [51, 53, 62, 82, 84, 123, 124, 125, 126, 149], "frequenc": [52, 61, 76, 77, 78, 79, 80, 147], "compens": [52, 76, 77, 79, 80, 122], "generatormixin": [52, 61], "refractorystepmixin": 52, "encod": [52, 61], "poisson": [52, 61, 76, 77, 78, 79, 80], "distribut": [52, 61, 76, 77, 78, 79, 80, 120, 121, 122], "randomli": [52, 76, 77], "hz": [52, 61, 76, 77, 78, 79, 80], "pseudorandom": [52, 61, 76, 77, 79, 80, 98, 120, 121, 122, 135], "allow": [52, 76, 77, 100, 104, 109, 123, 125, 147], "distanc": [52, 76, 77], "th": [52, 71, 72, 73, 76, 77], "onlin": [52, 61], "intens": [52, 61], "faster": [52, 61], "hertz": [52, 61], "pin": 52, "crit_v": [53, 62, 82], "affin": [53, 62, 82], "crit": [53, 62, 82, 149], "drift": [53, 62, 82], "toward": [53, 62, 82, 148, 149], "awai": [53, 62, 82, 149], "simultan": 55, "proxi": 55, "connection_nam": [55, 63], "neuron_nam": [55, 63], "neither": 55, "nor": 55, "reassign": 55, "primarili": 55, "connection_kwarg": [55, 63], "neuron_kwarg": [55, 63], "capture_intermedi": [55, 63], "turn": [55, 101, 115], "unpack": [55, 104, 106], "get_connect": 55, "get_neuron": 55, "named_connect": 55, "named_neuron": 55, "named_synaps": 55, "accumul": [55, 66, 67], "in_shap": 56, "out_shap": 56, "interc": [56, 58], "m_0": 56, "unbatch": [56, 57, 58], "odot": [57, 58], "inputoutput": [57, 58], "i_n": 58, "lineardens": 58, "creation": 58, "mask": [58, 81, 82, 124, 126], "shapemixin": [59, 64], "epsilon": [60, 99, 100, 109, 123, 125], "12": [60, 99, 147], "norm": [60, 99], "demonin": [60, 99], "stepmixin": 61, "bindsnet": [61, 79, 80], "invers": [61, 79, 80, 148, 151], "wrap": [63, 101, 110, 115], "serial_c": 63, "serial_n": 63, "conveni": 63, "nanoamper": [64, 88, 93, 94, 96], "current_at": [64, 94], "spike_at": [64, 94], "boolean": 64, "updatesom": 66, "reduct": 67, "taken": 67, "collis": 67, "although": [67, 122, 146, 149], "small": 67, "_get_": 67, "_set_": 67, "_del_": 67, "weakli": 67, "weightbiasmixin": 68, "mixin": [68, 69, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "inherit": [68, 69, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "weight_": [68, 69, 70], "bias_": [68, 69], "weightmixin": 69, "maintain": [71, 72, 73, 83, 84], "adapt_r": 73, "rebound_r": 73, "adapt_reset_min": 73, "permit": [73, 124, 126], "adap": [74, 75], "i_": 74, "optioon": [76, 77], "nonsens": [76, 77], "1000": [76, 77], "inhomogen": 78, "exce": 78, "greater": 78, "never": [79, 80], "masked_input": [81, 82], "held": [83, 84], "v_slope": 84, "v_intercept": 84, "batchmixin": 86, "concept": 86, "__shape": 86, "adaptation_": 87, "adapt_batchreduc": 87, "current_": [88, 92, 93, 94, 95], "refrac_": [89, 90], "refractorymixin": 90, "driven": 91, "voltage_": 91, "currentmixin": [92, 95], "therefrom": [92, 96], "_to_spik": [92, 94], "primit": [93, 95, 97], "primitive_curr": 94, "primitive_spik": 94, "current_interp": 94, "spike_interp": 94, "current_overv": 94, "spike_overv": 94, "_to_curr": [94, 96], "spike_": [94, 95, 96, 97], "alwai": 94, "_current_interp": 94, "_spike_interp": 94, "_current_ob_v": 94, "_spike_ob_v": 94, "_primitive_curr": 94, "_primitive_spik": 94, "_interp_tol": 94, "spikemixin": [95, 96], "randn": 98, "lvert": [100, 109, 113, 123, 124, 125], "rvert": [100, 109, 123, 125], "leq": [100, 109, 120, 121, 122, 123, 125], "entir": [100, 102, 103, 109, 111, 113, 114], "filter_": [101, 106, 110, 115], "map_": [101, 106, 110, 115], "op_": 101, "nest": [101, 108, 115], "map": [101, 104, 106, 110, 115], "minu": 101, "op": 101, "ti": [101, 115], "reject": 101, "compar": 101, "reiniti": [101, 104, 107, 112], "decoupl": 102, "datatyp": [103, 113, 114, 124, 126], "infin": 103, "fold_fn": 104, "just": 104, "whatev": 104, "situat": 104, "keepshap": 104, "histor": 104, "dump": [104, 107, 112], "tempor": 104, "oldest": 104, "push": [104, 112], "peek": [104, 107, 112], "view": [104, 107, 112], "fail": 104, "fall": 104, "foldreduc": 105, "sent": 106, "0th": 106, "directli": [107, 111], "peekvalu": [107, 112], "weak": 107, "did": 107, "sens": 108, "sensibl": 108, "reduer": [110, 115], "resmin": 117, "resmax": 117, "srcmin": 117, "srcmax": 117, "unchang": 117, "amin": 117, "amax": 117, "shortcut": 118, "squar": 119, "root": 119, "continuousdistribut": [120, 121], "log": [120, 121, 122], "probabl": [120, 121, 122], "mathbb": [120, 121, 122], "sigma": [120, 121], "_": [120, 121, 122, 146], "cdf": [120, 121, 122], "loc": [120, 121], "erf": [120, 121], "sqrt": [120, 121], "standard": [120, 121], "deviat": [120, 121], "logcdf": [120, 121, 122], "logarithm": [120, 121, 122], "logpdf": [120, 121], "densiti": [120, 121], "pi": [120, 121], "likelihood": [120, 121], "sim": [120, 121, 122], "params_mv": [120, 121], "varianc": [120, 121, 122], "mu_x": [120, 121], "sigma_x": [120, 121], "qquad": [120, 121], "pdf": [120, 121], "variat": [120, 121, 122], "mathcal": [120, 121, 146], "sample_mv": [120, 121], "var": [120, 121, 122], "lnormal": 121, "discretedistribut": 122, "_0": 122, "logpmf": 122, "mass": 122, "pmf": 122, "metal": 122, "shader": 122, "accordingli": 122, "degener": 122, "init": [123, 124, 125, 126], "condit": [123, 124, 125, 126, 149], "matchfn": [124, 126], "trace_cumul": 124, "predic": [124, 126], "sf": 124, "x_t": 124, "trace_nearest": 126, "arbitrari": [127, 128, 129, 130, 131, 132], "uniformli": 135, "depth": 144, "academ": 144, "plan": 144, "futur": 144, "3": [144, 149], "4": [144, 147, 149], "5": [144, 149], "nonlinear": 144, "qif": 144, "izhikevich": 144, "eif": 144, "adex": 144, "conduct": [144, 148], "coba": 144, "mstdp": 144, "mstdpet": 144, "triplet": 144, "resum": 144, "tbd": 145, "summar": 146, "afterward": 146, "causal": 146, "phrase": [146, 148], "revers": 146, "direct": 146, "below": [146, 147, 149], "written": 146, "commonli": 146, "sum_": 146, "With": [146, 147, 148, 149], "dirac": [146, 151], "w_t": 146, "pp": 146, "neighbor": 146, "xi": 146, "phi_": 146, "dp": 146, "phi_n": 146, "_n": 146, "zeta": 146, "10": [146, 147, 148, 149], "1162": [146, 147], "neco": [146, 147], "2007": 146, "19": 146, "6": [146, 147, 149], "1468": 146, "z": 146, "dz": 146, "impos": 147, "regard": 147, "impli": 147, "steadi": 147, "give": 147, "degre": 147, "freedom": 147, "modif": 147, "dampen": 147, "amplifi": 147, "said": 147, "latter": [147, 149], "goe": 147, "dw_k": [147, 149], "approx": [147, 149], "subthreshold": [147, 149], "doi": [147, 148, 149], "1017": [147, 148, 149], "cbo9781107447615": [147, 148, 149], "1152": 147, "jn": 147, "00686": 147, "2005": 147, "Be": [147, 148], "1038": [147, 148], "s41467": [147, 148], "017": [147, 148], "02717": [147, 148], "allen": [147, 148], "institut": [147, 148], "whitepap": [147, 148], "rebound": 147, "2008": 147, "680": 147, "neco_a_00196": 147, "1803": 147, "09574": 147, "021": 147, "24427": 147, "8": [147, 149], "00234": 147, "2019": 147, "dv_m": [148, 149], "basic": 148, "rule": 148, "back": 148, "slope": [148, 149], "field": [148, 149], "show": [148, 149], "v_r": [148, 149], "60": [148, 149], "plot": [148, 149], "c_m": 148, "g_l": 148, "capacit": 148, "nf": 148, "leak": 148, "expos": 148, "isbn": [148, 149, 151], "9780262548083": [148, 149, 151], "020": 148, "17236": 148, "fraction": 148, "intercept": 148, "convent": 148, "conting": 148, "reach": 148, "critic": 149, "tendenc": 149, "stabl": 149, "unstabl": 149, "attract": 149, "repel": 149, "v_c": 149, "50": 149, "depeend": 149, "3390": 149, "brainsci12070863": 149, "7551": 149, "mitpress": 149, "2526": 149, "001": 149, "0001": 149, "close": 149, "rapid": 149, "upsw": 149, "rightarrow": 149, "easi": 149, "confus": 149, "unrel": 149, "occasion": 149, "denot": 149, "vartheta_": 149, "rh": 149, "thresh": 149, "usual": 149, "simuat": 149, "illustr": 149, "4249": 149, "scholarpedia": 149, "8427": 149, "1523": 149, "jneurosci": 149, "23": 149, "37": 149, "11628": 149, "2003": 149, "t_f": 151, "extern": 151, "veri": 151, "role": 151, "deliv": 151, "dramat": 151}, "objects": {"inferno": [[5, 0, 1, "", "ContextualHook"], [6, 0, 1, "", "DimensionalModule"], [7, 0, 1, "", "Hook"], [8, 0, 1, "", "Module"], [9, 0, 1, "", "RecordModule"], [10, 0, 1, "", "StateHook"], [11, 3, 1, "", "astensors"], [23, 3, 1, "", "empty"], [24, 3, 1, "", "exp"], [25, 3, 1, "", "exponential_smoothing"], [26, 3, 1, "", "full"], [27, 3, 1, "", "holt_linear_smoothing"], [34, 3, 1, "", "isi"], [139, 4, 0, "-", "learn"], [140, 4, 0, "-", "neural"], [98, 3, 1, "", "normal"], [99, 3, 1, "", "normalize"], [116, 3, 1, "", "ones"], [117, 3, 1, "", "rescale"], [118, 3, 1, "", "scalar"], [119, 3, 1, "", "sqrt"], [143, 4, 0, "-", "stats"], [123, 3, 1, "", "trace_cumulative"], [124, 3, 1, "", "trace_cumulative_scaled"], [125, 3, 1, "", "trace_nearest"], [126, 3, 1, "", "trace_nearest_scaled"], [135, 3, 1, "", "uniform"], [136, 3, 1, "", "zeros"]], "inferno.DimensionalModule": [[6, 1, 1, "", "compatible"], [6, 1, 1, "", "compatible_"], [6, 1, 1, "", "compatible_like"], [6, 1, 1, "", "compatible_like_"], [6, 2, 1, "", "constraints"], [6, 1, 1, "", "deregister_constrained"], [6, 2, 1, "", "dims"], [6, 1, 1, "", "dims_"], [6, 1, 1, "", "extra_repr"], [6, 2, 1, "", "liveconstrain"], [6, 1, 1, "", "reconstrain"], [6, 1, 1, "", "register_constrained"], [6, 1, 1, "", "validate"]], "inferno.Hook": [[7, 1, 1, "", "deregister"], [7, 2, 1, "", "evalexec"], [7, 1, 1, "", "register"], [7, 2, 1, "", "registered"], [7, 2, 1, "", "trainexec"]], "inferno.Module": [[8, 1, 1, "", "get_extra"], [8, 1, 1, "", "get_extra_state"], [8, 1, 1, "", "register_extra"], [8, 1, 1, "", "set_extra_state"]], "inferno.RecordModule": [[9, 1, 1, "", "aligned"], [9, 1, 1, "", "deregister_constrained"], [9, 2, 1, "", "dt"], [9, 2, 1, "", "duration"], [9, 1, 1, "", "latest"], [9, 1, 1, "", "reconstrain"], [9, 1, 1, "", "record"], [9, 2, 1, "", "recordsz"], [9, 1, 1, "", "register_constrained"], [9, 1, 1, "", "reset"], [9, 1, 1, "", "select"]], "inferno.StateHook": [[10, 1, 1, "", "forward"], [10, 1, 1, "", "hook"], [10, 2, 1, "", "module"], [10, 1, 1, "", "register"]], "inferno.bounding": [[12, 0, 1, "", "FullBounding"], [13, 0, 1, "", "HalfBounding"], [14, 3, 1, "", "lower_multiplicative"], [15, 3, 1, "", "lower_power"], [16, 3, 1, "", "lower_sharp"], [17, 3, 1, "", "multiplicative"], [18, 3, 1, "", "power"], [19, 3, 1, "", "sharp"], [20, 3, 1, "", "upper_multiplicative"], [21, 3, 1, "", "upper_power"], [22, 3, 1, "", "upper_sharp"]], "inferno.interpolation": [[28, 0, 1, "", "Interpolation"], [29, 3, 1, "", "expdecay"], [30, 3, 1, "", "expratedecay"], [31, 3, 1, "", "linear"], [32, 3, 1, "", "nearest"], [33, 3, 1, "", "previous"]], "inferno.learn": [[35, 0, 1, "", "CellTrainer"], [36, 0, 1, "", "LayerwiseTrainer"], [37, 0, 1, "", "MSTDPET"], [38, 0, 1, "", "MaxRateClassifier"], [39, 0, 1, "", "STDP"]], "inferno.learn.CellTrainer": [[35, 1, 1, "", "add_cell"], [35, 1, 1, "", "add_monitor"], [35, 2, 1, "", "cells"], [35, 1, 1, "", "clear"], [35, 1, 1, "", "del_cell"], [35, 1, 1, "", "del_monitor"], [35, 1, 1, "", "forward"], [35, 1, 1, "", "get_cell"], [35, 1, 1, "", "get_monitor"], [35, 2, 1, "", "monitors"], [35, 2, 1, "", "named_cells"], [35, 2, 1, "", "named_monitors"], [35, 1, 1, "", "named_monitors_of"], [35, 1, 1, "", "train"], [35, 1, 1, "", "update"]], "inferno.learn.LayerwiseTrainer": [[36, 1, 1, "", "register_cell"], [36, 1, 1, "", "register_layer"], [36, 1, 1, "", "unit"]], "inferno.learn.MSTDPET": [[37, 0, 1, "", "EligibilityTraceReducer"], [37, 0, 1, "", "State"], [37, 1, 1, "", "add_cell"], [37, 1, 1, "", "clear"], [37, 1, 1, "", "forward"]], "inferno.learn.MSTDPET.EligibilityTraceReducer": [[37, 2, 1, "", "dt"], [37, 1, 1, "", "fold"], [37, 1, 1, "", "initialize"], [37, 1, 1, "", "interpolate"]], "inferno.learn.MaxRateClassifier": [[38, 2, 1, "", "assignments"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "infer"], [38, 1, 1, "", "learn"], [38, 2, 1, "", "nclass"], [38, 2, 1, "", "ndim"], [38, 2, 1, "", "occurances"], [38, 2, 1, "", "proportional"], [38, 2, 1, "", "proportions"], [38, 2, 1, "", "rates"], [38, 2, 1, "", "shape"]], "inferno.learn.STDP": [[39, 1, 1, "", "forward"], [39, 1, 1, "", "register_cell"]], "inferno.neural": [[40, 0, 1, "", "ALIF"], [41, 0, 1, "", "AdEx"], [42, 0, 1, "", "Biclique"], [43, 0, 1, "", "Cell"], [44, 0, 1, "", "Clamping"], [45, 0, 1, "", "Connection"], [46, 0, 1, "", "Conv2D"], [47, 0, 1, "", "DeltaCurrent"], [48, 0, 1, "", "DeltaPlusCurrent"], [49, 0, 1, "", "EIF"], [50, 0, 1, "", "GLIF1"], [51, 0, 1, "", "GLIF2"], [52, 0, 1, "", "HomogeneousPoissonEncoder"], [53, 0, 1, "", "Izhikevich"], [54, 0, 1, "", "LIF"], [55, 0, 1, "", "Layer"], [56, 0, 1, "", "LinearDense"], [57, 0, 1, "", "LinearDirect"], [58, 0, 1, "", "LinearLateral"], [59, 0, 1, "", "Neuron"], [60, 0, 1, "", "Normalization"], [61, 0, 1, "", "PoissonIntervalEncoder"], [62, 0, 1, "", "QIF"], [63, 0, 1, "", "Serial"], [64, 0, 1, "", "Synapse"], [65, 0, 1, "", "SynapseConstructor"], [66, 0, 1, "", "Updatable"], [67, 0, 1, "", "Updater"], [141, 4, 0, "-", "functional"]], "inferno.neural.ALIF": [[40, 2, 1, "", "adaptation"], [40, 2, 1, "", "batchedshape"], [40, 2, 1, "", "batchsz"], [40, 1, 1, "", "clear"], [40, 2, 1, "", "count"], [40, 2, 1, "", "dt"], [40, 1, 1, "", "forward"], [40, 2, 1, "", "refrac"], [40, 2, 1, "", "shape"], [40, 2, 1, "", "spike"], [40, 2, 1, "", "voltage"]], "inferno.neural.AdEx": [[41, 2, 1, "", "adaptation"], [41, 2, 1, "", "batchedshape"], [41, 2, 1, "", "batchsz"], [41, 1, 1, "", "clear"], [41, 2, 1, "", "count"], [41, 2, 1, "", "dt"], [41, 1, 1, "", "forward"], [41, 2, 1, "", "refrac"], [41, 2, 1, "", "shape"], [41, 2, 1, "", "spike"], [41, 2, 1, "", "voltage"]], "inferno.neural.Biclique": [[42, 1, 1, "", "add_cell"], [42, 1, 1, "", "add_connection"], [42, 1, 1, "", "add_neuron"], [42, 1, 1, "", "del_cell"], [42, 1, 1, "", "del_connection"], [42, 1, 1, "", "del_neuron"], [42, 1, 1, "", "wiring"]], "inferno.neural.Cell": [[43, 2, 1, "", "connection"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "local_remap"], [43, 2, 1, "", "neuron"], [43, 2, 1, "", "postspike"], [43, 2, 1, "", "postvoltage"], [43, 2, 1, "", "precurrent"], [43, 2, 1, "", "prespike"], [43, 2, 1, "", "synapse"], [43, 2, 1, "", "updater"]], "inferno.neural.Clamping": [[44, 1, 1, "", "hook"]], "inferno.neural.Connection": [[45, 2, 1, "", "batched_inshape"], [45, 2, 1, "", "batched_outshape"], [45, 2, 1, "", "batchsz"], [45, 2, 1, "", "bias"], [45, 2, 1, "", "biased"], [45, 1, 1, "", "clear"], [45, 1, 1, "", "defaultupdater"], [45, 2, 1, "", "delay"], [45, 2, 1, "", "delayedby"], [45, 2, 1, "", "dt"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "forward"], [45, 2, 1, "", "inshape"], [45, 1, 1, "", "insize"], [45, 1, 1, "", "like_input"], [45, 1, 1, "", "like_synaptic"], [45, 2, 1, "", "outshape"], [45, 1, 1, "", "outsize"], [45, 1, 1, "", "postsyn_receptive"], [45, 1, 1, "", "presyn_receptive"], [45, 2, 1, "", "selector"], [45, 2, 1, "", "synapse"], [45, 2, 1, "", "syncurrent"], [45, 2, 1, "", "synspike"], [45, 2, 1, "", "weight"]], "inferno.neural.Conv2D": [[46, 1, 1, "", "forward"], [46, 2, 1, "", "inshape"], [46, 1, 1, "", "like_input"], [46, 1, 1, "", "like_synaptic"], [46, 2, 1, "", "outshape"], [46, 1, 1, "", "postsyn_receptive"], [46, 1, 1, "", "presyn_receptive"], [46, 2, 1, "", "selector"]], "inferno.neural.DeltaCurrent": [[47, 1, 1, "", "clear"], [47, 2, 1, "", "dt"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "partialconstructor"]], "inferno.neural.DeltaPlusCurrent": [[48, 1, 1, "", "clear"], [48, 2, 1, "", "dt"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "partialconstructor"]], "inferno.neural.EIF": [[49, 2, 1, "", "batchedshape"], [49, 2, 1, "", "batchsz"], [49, 1, 1, "", "clear"], [49, 2, 1, "", "count"], [49, 2, 1, "", "dt"], [49, 1, 1, "", "forward"], [49, 2, 1, "", "refrac"], [49, 2, 1, "", "shape"], [49, 2, 1, "", "spike"], [49, 2, 1, "", "voltage"]], "inferno.neural.GLIF1": [[50, 2, 1, "", "batchedshape"], [50, 2, 1, "", "batchsz"], [50, 1, 1, "", "clear"], [50, 2, 1, "", "count"], [50, 2, 1, "", "dt"], [50, 1, 1, "", "forward"], [50, 2, 1, "", "refrac"], [50, 2, 1, "", "shape"], [50, 2, 1, "", "spike"], [50, 2, 1, "", "voltage"]], "inferno.neural.GLIF2": [[51, 2, 1, "", "adaptation"], [51, 2, 1, "", "batchedshape"], [51, 2, 1, "", "batchsz"], [51, 1, 1, "", "clear"], [51, 2, 1, "", "count"], [51, 2, 1, "", "dt"], [51, 1, 1, "", "forward"], [51, 2, 1, "", "refrac"], [51, 2, 1, "", "shape"], [51, 2, 1, "", "spike"], [51, 2, 1, "", "voltage"]], "inferno.neural.HomogeneousPoissonEncoder": [[52, 2, 1, "", "compensated"], [52, 1, 1, "", "forward"], [52, 2, 1, "", "frequency"], [52, 2, 1, "", "refrac"]], "inferno.neural.Izhikevich": [[53, 2, 1, "", "adaptation"], [53, 2, 1, "", "batchedshape"], [53, 2, 1, "", "batchsz"], [53, 1, 1, "", "clear"], [53, 2, 1, "", "count"], [53, 2, 1, "", "dt"], [53, 1, 1, "", "forward"], [53, 2, 1, "", "refrac"], [53, 2, 1, "", "shape"], [53, 2, 1, "", "spike"], [53, 2, 1, "", "voltage"]], "inferno.neural.LIF": [[54, 2, 1, "", "batchedshape"], [54, 2, 1, "", "batchsz"], [54, 1, 1, "", "clear"], [54, 2, 1, "", "count"], [54, 2, 1, "", "dt"], [54, 1, 1, "", "forward"], [54, 2, 1, "", "refrac"], [54, 2, 1, "", "shape"], [54, 2, 1, "", "spike"], [54, 2, 1, "", "voltage"]], "inferno.neural.Layer": [[55, 1, 1, "", "add_cell"], [55, 1, 1, "", "add_connection"], [55, 1, 1, "", "add_neuron"], [55, 2, 1, "", "cells"], [55, 2, 1, "", "connections"], [55, 1, 1, "", "del_cell"], [55, 1, 1, "", "del_connection"], [55, 1, 1, "", "del_neuron"], [55, 1, 1, "", "forward"], [55, 1, 1, "", "get_cell"], [55, 1, 1, "", "get_connection"], [55, 1, 1, "", "get_neuron"], [55, 2, 1, "", "named_cells"], [55, 2, 1, "", "named_connections"], [55, 2, 1, "", "named_neurons"], [55, 2, 1, "", "named_synapses"], [55, 2, 1, "", "neurons"], [55, 1, 1, "", "update"], [55, 1, 1, "", "wiring"]], "inferno.neural.LinearDense": [[56, 1, 1, "", "forward"], [56, 2, 1, "", "inshape"], [56, 1, 1, "", "like_input"], [56, 1, 1, "", "like_synaptic"], [56, 2, 1, "", "outshape"], [56, 1, 1, "", "postsyn_receptive"], [56, 1, 1, "", "presyn_receptive"], [56, 2, 1, "", "selector"]], "inferno.neural.LinearDirect": [[57, 1, 1, "", "forward"], [57, 2, 1, "", "inshape"], [57, 1, 1, "", "like_input"], [57, 1, 1, "", "like_synaptic"], [57, 2, 1, "", "outshape"], [57, 1, 1, "", "postsyn_receptive"], [57, 1, 1, "", "presyn_receptive"], [57, 2, 1, "", "selector"]], "inferno.neural.LinearLateral": [[58, 2, 1, "", "delay"], [58, 1, 1, "", "forward"], [58, 2, 1, "", "inshape"], [58, 1, 1, "", "like_input"], [58, 1, 1, "", "like_synaptic"], [58, 2, 1, "", "outshape"], [58, 1, 1, "", "postsyn_receptive"], [58, 1, 1, "", "presyn_receptive"], [58, 2, 1, "", "selector"], [58, 2, 1, "", "weight"]], "inferno.neural.Neuron": [[59, 2, 1, "", "batchsz"], [59, 1, 1, "", "clear"], [59, 2, 1, "", "dt"], [59, 1, 1, "", "extra_repr"], [59, 1, 1, "", "forward"], [59, 2, 1, "", "refrac"], [59, 2, 1, "", "spike"], [59, 2, 1, "", "voltage"]], "inferno.neural.Normalization": [[60, 1, 1, "", "hook"]], "inferno.neural.PoissonIntervalEncoder": [[61, 1, 1, "", "forward"], [61, 2, 1, "", "frequency"]], "inferno.neural.QIF": [[62, 2, 1, "", "batchedshape"], [62, 2, 1, "", "batchsz"], [62, 1, 1, "", "clear"], [62, 2, 1, "", "count"], [62, 2, 1, "", "dt"], [62, 1, 1, "", "forward"], [62, 2, 1, "", "refrac"], [62, 2, 1, "", "shape"], [62, 2, 1, "", "spike"], [62, 2, 1, "", "voltage"]], "inferno.neural.Serial": [[63, 1, 1, "", "add_cell"], [63, 1, 1, "", "add_connection"], [63, 1, 1, "", "add_neuron"], [63, 2, 1, "", "cell"], [63, 2, 1, "", "connection"], [63, 1, 1, "", "del_cell"], [63, 1, 1, "", "del_connection"], [63, 1, 1, "", "del_neuron"], [63, 1, 1, "", "forward"], [63, 2, 1, "", "neuron"], [63, 2, 1, "", "synapse"], [63, 2, 1, "", "updater"], [63, 1, 1, "", "wiring"]], "inferno.neural.Synapse": [[64, 1, 1, "", "clear"], [64, 2, 1, "", "current"], [64, 1, 1, "", "current_at"], [64, 2, 1, "", "delay"], [64, 2, 1, "", "dt"], [64, 1, 1, "", "extra_repr"], [64, 1, 1, "", "forward"], [64, 1, 1, "", "partialconstructor"], [64, 2, 1, "", "spike"], [64, 1, 1, "", "spike_at"]], "inferno.neural.Updatable": [[66, 1, 1, "", "clear"], [66, 1, 1, "", "defaultupdater"], [66, 2, 1, "", "updatable"], [66, 1, 1, "", "update"], [66, 2, 1, "", "updater"], [66, 1, 1, "", "updatesome"]], "inferno.neural.Updater": [[67, 1, 1, "", "clear"], [67, 1, 1, "", "forward"], [67, 2, 1, "", "names"], [67, 2, 1, "", "parent"]], "inferno.neural.connections.mixins": [[68, 0, 1, "", "WeightBiasDelayMixin"], [69, 0, 1, "", "WeightBiasMixin"], [70, 0, 1, "", "WeightMixin"]], "inferno.neural.connections.mixins.WeightBiasDelayMixin": [[68, 2, 1, "", "delay"]], "inferno.neural.connections.mixins.WeightBiasMixin": [[69, 2, 1, "", "bias"]], "inferno.neural.connections.mixins.WeightMixin": [[70, 2, 1, "", "weight"]], "inferno.neural.functional": [[71, 3, 1, "", "adaptive_currents_linear"], [72, 3, 1, "", "adaptive_thresholds_linear_spike"], [73, 3, 1, "", "adaptive_thresholds_linear_voltage"], [74, 3, 1, "", "apply_adaptive_currents"], [75, 3, 1, "", "apply_adaptive_thresholds"], [76, 3, 1, "", "enc_homogeneous_poisson_exp_interval"], [77, 3, 1, "", "enc_homogeneous_poisson_exp_interval_online"], [78, 3, 1, "", "enc_inhomogenous_poisson_bernoulli_approx"], [79, 3, 1, "", "enc_poisson_interval"], [80, 3, 1, "", "enc_poisson_interval_online"], [81, 3, 1, "", "voltage_integration_linear"], [82, 3, 1, "", "voltage_integration_quadratic"], [83, 3, 1, "", "voltage_thresholding_constant"], [84, 3, 1, "", "voltage_thresholding_linear"]], "inferno.neural.mixins": [[85, 0, 1, "", "BatchMixin"], [86, 0, 1, "", "ShapeMixin"]], "inferno.neural.mixins.BatchMixin": [[85, 2, 1, "", "batchsz"]], "inferno.neural.mixins.ShapeMixin": [[86, 2, 1, "", "batchedshape"], [86, 2, 1, "", "count"], [86, 2, 1, "", "shape"]], "inferno.neural.neurons.mixins": [[87, 0, 1, "", "AdaptationMixin"], [88, 0, 1, "", "CurrentMixin"], [89, 0, 1, "", "RefractoryMixin"], [90, 0, 1, "", "SpikeRefractoryMixin"], [91, 0, 1, "", "VoltageMixin"]], "inferno.neural.neurons.mixins.AdaptationMixin": [[87, 2, 1, "", "adaptation"]], "inferno.neural.neurons.mixins.CurrentMixin": [[88, 2, 1, "", "current"]], "inferno.neural.neurons.mixins.RefractoryMixin": [[89, 2, 1, "", "refrac"]], "inferno.neural.neurons.mixins.SpikeRefractoryMixin": [[90, 2, 1, "", "spike"]], "inferno.neural.neurons.mixins.VoltageMixin": [[91, 2, 1, "", "voltage"]], "inferno.neural.synapses.mixins": [[92, 0, 1, "", "CurrentDerivedSpikeMixin"], [93, 0, 1, "", "CurrentMixin"], [94, 0, 1, "", "DelayedSpikeCurrentAccessorMixin"], [95, 0, 1, "", "SpikeCurrentMixin"], [96, 0, 1, "", "SpikeDerivedCurrentMixin"], [97, 0, 1, "", "SpikeMixin"]], "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin": [[92, 2, 1, "", "spike"]], "inferno.neural.synapses.mixins.CurrentMixin": [[93, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin": [[94, 1, 1, "", "current_at"], [94, 1, 1, "", "spike_at"]], "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin": [[96, 2, 1, "", "current"]], "inferno.neural.synapses.mixins.SpikeMixin": [[97, 2, 1, "", "spike"]], "inferno.observe": [[100, 0, 1, "", "CumulativeTraceReducer"], [101, 0, 1, "", "DifferenceMonitor"], [102, 0, 1, "", "EMAReducer"], [103, 0, 1, "", "EventReducer"], [104, 0, 1, "", "FoldReducer"], [105, 0, 1, "", "FoldingReducer"], [106, 0, 1, "", "InputMonitor"], [107, 0, 1, "", "Monitor"], [108, 0, 1, "", "MonitorConstructor"], [109, 0, 1, "", "NearestTraceReducer"], [110, 0, 1, "", "OutputMonitor"], [111, 0, 1, "", "PassthroughReducer"], [112, 0, 1, "", "Reducer"], [113, 0, 1, "", "ScaledCumulativeTraceReducer"], [114, 0, 1, "", "ScaledNearestTraceReducer"], [115, 0, 1, "", "StateMonitor"]], "inferno.observe.CumulativeTraceReducer": [[100, 2, 1, "", "dt"], [100, 1, 1, "", "fold"], [100, 1, 1, "", "initialize"], [100, 1, 1, "", "interpolate"]], "inferno.observe.DifferenceMonitor": [[101, 1, 1, "", "clear"], [101, 1, 1, "", "partialconstructor"]], "inferno.observe.EMAReducer": [[102, 1, 1, "", "fold"], [102, 1, 1, "", "initialize"], [102, 1, 1, "", "interpolate"]], "inferno.observe.EventReducer": [[103, 1, 1, "", "fold"], [103, 1, 1, "", "initialize"], [103, 1, 1, "", "interpolate"]], "inferno.observe.FoldReducer": [[104, 1, 1, "", "clear"], [104, 2, 1, "", "data"], [104, 2, 1, "", "dt"], [104, 1, 1, "", "dump"], [104, 2, 1, "", "duration"], [104, 1, 1, "", "forward"], [104, 1, 1, "", "peek"], [104, 1, 1, "", "push"], [104, 1, 1, "", "view"]], "inferno.observe.FoldingReducer": [[105, 1, 1, "", "fold"], [105, 1, 1, "", "initialize"], [105, 1, 1, "", "interpolate"]], "inferno.observe.InputMonitor": [[106, 1, 1, "", "partialconstructor"]], "inferno.observe.Monitor": [[107, 1, 1, "", "clear"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "partialconstructor"], [107, 1, 1, "", "peek"], [107, 2, 1, "", "peekvalue"], [107, 2, 1, "", "reducer"], [107, 1, 1, "", "register"], [107, 1, 1, "", "view"]], "inferno.observe.NearestTraceReducer": [[109, 2, 1, "", "dt"], [109, 1, 1, "", "fold"], [109, 1, 1, "", "initialize"], [109, 1, 1, "", "interpolate"]], "inferno.observe.OutputMonitor": [[110, 1, 1, "", "partialconstructor"]], "inferno.observe.PassthroughReducer": [[111, 1, 1, "", "fold"], [111, 1, 1, "", "initialize"], [111, 1, 1, "", "interpolate"]], "inferno.observe.Reducer": [[112, 1, 1, "", "clear"], [112, 1, 1, "", "dump"], [112, 1, 1, "", "forward"], [112, 1, 1, "", "peek"], [112, 2, 1, "", "peekvalue"], [112, 1, 1, "", "push"], [112, 1, 1, "", "view"]], "inferno.observe.ScaledCumulativeTraceReducer": [[113, 2, 1, "", "dt"], [113, 1, 1, "", "fold"], [113, 1, 1, "", "initialize"], [113, 1, 1, "", "interpolate"]], "inferno.observe.ScaledNearestTraceReducer": [[114, 2, 1, "", "dt"], [114, 1, 1, "", "fold"], [114, 1, 1, "", "initialize"], [114, 1, 1, "", "interpolate"]], "inferno.observe.StateMonitor": [[115, 1, 1, "", "partialconstructor"]], "inferno.stats": [[120, 0, 1, "", "LogNormal"], [121, 0, 1, "", "Normal"], [122, 0, 1, "", "Poisson"]], "inferno.stats.LogNormal": [[120, 1, 1, "", "cdf"], [120, 1, 1, "", "logcdf"], [120, 1, 1, "", "logpdf"], [120, 1, 1, "", "mean"], [120, 1, 1, "", "params_mv"], [120, 1, 1, "", "pdf"], [120, 1, 1, "", "sample"], [120, 1, 1, "", "sample_mv"], [120, 1, 1, "", "validate"], [120, 1, 1, "", "variance"]], "inferno.stats.Normal": [[121, 1, 1, "", "cdf"], [121, 1, 1, "", "logcdf"], [121, 1, 1, "", "logpdf"], [121, 1, 1, "", "mean"], [121, 1, 1, "", "params_mv"], [121, 1, 1, "", "pdf"], [121, 1, 1, "", "sample"], [121, 1, 1, "", "sample_mv"], [121, 1, 1, "", "validate"], [121, 1, 1, "", "variance"]], "inferno.stats.Poisson": [[122, 1, 1, "", "cdf"], [122, 1, 1, "", "logcdf"], [122, 1, 1, "", "logpmf"], [122, 1, 1, "", "mean"], [122, 1, 1, "", "pmf"], [122, 1, 1, "", "sample"], [122, 1, 1, "", "validate"], [122, 1, 1, "", "variance"]], "inferno.types": [[127, 0, 1, "", "ManyToMany"], [128, 0, 1, "", "ManyToManyMethod"], [129, 0, 1, "", "ManyToOne"], [130, 0, 1, "", "ManyToOneMethod"], [131, 0, 1, "", "OneToMany"], [132, 0, 1, "", "OneToManyMethod"], [133, 0, 1, "", "OneToOne"], [134, 0, 1, "", "OneToOneMethod"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"]}, "titleterms": {"pragmat": 0, "consider": 0, "minibatch": 0, "discret": 0, "time": [0, 2, 139, 146], "simul": 0, "refractori": [0, 3], "period": [0, 3], "model": [0, 140, 144, 148, 149, 150, 151], "save": 0, "restor": 0, "guidebook": 1, "mathemat": 2, "note": 2, "exponenti": [2, 149], "decai": 2, "constant": 2, "trace": [2, 138, 146], "cumul": 2, "nearest": [2, 32], "scale": 2, "paramet": [2, 120, 121, 122, 138], "depend": [2, 139, 146, 147], "soft": 2, "hard": 2, "dirac": 2, "delta": [2, 150, 151], "heavisid": 2, "step": 2, "function": [2, 141], "relationship": 2, "neuron": [3, 59, 140, 141, 144, 147, 148, 149], "system": 3, "dynam": [3, 141], "welcom": 4, "inferno": [4, 138, 139, 140, 141, 142, 143], "": 4, "document": 4, "contextualhook": 5, "dimensionalmodul": 6, "hook": [7, 140], "modul": [8, 146], "recordmodul": 9, "shape": [9, 34, 37, 38, 45, 46, 52, 56, 57, 58, 61, 71, 72, 73, 76, 77, 78, 79, 80, 94, 104], "statehook": 10, "astensor": 11, "fullbound": 12, "halfbound": 13, "lower_multipl": 14, "lower_pow": 15, "lower_sharp": 16, "multipl": 17, "power": 18, "sharp": 19, "upper_multipl": 20, "upper_pow": 21, "upper_sharp": 22, "empti": 23, "exp": 24, "exponential_smooth": 25, "full": 26, "holt_linear_smooth": 27, "interpol": [28, 138], "expdecai": 29, "expratedecai": 30, "linear": [31, 147, 148], "previou": 33, "isi": 34, "celltrain": 35, "layerwisetrain": 36, "mstdpet": [37, 146], "maxrateclassifi": 38, "stdp": [39, 146], "alif": [40, 148], "adex": [41, 149], "bicliqu": 42, "cell": 43, "clamp": 44, "connect": [45, 140], "conv2d": 46, "deltacurr": 47, "deltapluscurr": 48, "eif": [49, 149], "glif1": [50, 148], "glif2": [51, 148], "homogeneouspoissonencod": 52, "izhikevich": [53, 149], "lif": [54, 148], "layer": 55, "lineardens": 56, "lineardirect": 57, "linearlater": 58, "normal": [60, 98, 99, 121], "poissonintervalencod": 61, "qif": [62, 149], "serial": 63, "synaps": [64, 140, 144, 150, 151], "synapseconstructor": 65, "updat": [66, 67, 139], "weightbiasdelaymixin": 68, "weightbiasmixin": 69, "weightmixin": 70, "adaptive_currents_linear": 71, "adaptive_thresholds_linear_spik": 72, "adaptive_thresholds_linear_voltag": 73, "apply_adaptive_curr": 74, "apply_adaptive_threshold": 75, "enc_homogeneous_poisson_exp_interv": 76, "enc_homogeneous_poisson_exp_interval_onlin": 77, "enc_inhomogenous_poisson_bernoulli_approx": 78, "enc_poisson_interv": 79, "enc_poisson_interval_onlin": 80, "voltage_integration_linear": 81, "voltage_integration_quadrat": 82, "voltage_thresholding_const": 83, "voltage_thresholding_linear": 84, "batchmixin": 85, "shapemixin": 86, "adaptationmixin": 87, "currentmixin": [88, 93], "refractorymixin": 89, "spikerefractorymixin": 90, "voltagemixin": 91, "currentderivedspikemixin": 92, "delayedspikecurrentaccessormixin": 94, "spikecurrentmixin": 95, "spikederivedcurrentmixin": 96, "spikemixin": 97, "cumulativetracereduc": 100, "differencemonitor": 101, "emareduc": 102, "eventreduc": 103, "foldreduc": 104, "foldingreduc": 105, "inputmonitor": 106, "monitor": [107, 142], "monitorconstructor": 108, "nearesttracereduc": 109, "outputmonitor": 110, "passthroughreduc": 111, "reduc": [112, 142], "scaledcumulativetracereduc": 113, "scalednearesttracereduc": 114, "statemonitor": 115, "ones": 116, "rescal": 117, "scalar": 118, "sqrt": 119, "lognorm": 120, "support": [120, 121, 122], "poisson": 122, "trace_cumul": 123, "trace_cumulative_sc": 124, "trace_nearest": 125, "trace_nearest_sc": 126, "manytomani": 127, "manytomanymethod": 128, "manytoon": 129, "manytoonemethod": 130, "onetomani": 131, "onetomanymethod": 132, "onetoon": 133, "onetoonemethod": 134, "uniform": 135, "zero": 136, "api": 137, "refer": [137, 146, 147, 148, 149, 151], "infrastructur": 138, "tensor": 138, "creation": 138, "math": 138, "oper": 138, "spike": [138, 139, 146, 147], "bound": 138, "type": [138, 140], "learn": [139, 144, 145, 146], "compon": [139, 140, 142], "plastic": [139, 146], "classifi": 139, "neural": [140, 141], "encod": [140, 141], "mixin": 140, "observ": 142, "stat": 143, "distribut": 143, "method": [144, 145, 146], "zoo": 144, "overview": [144, 145, 147], "resum": 145, "like": [145, 146], "hebbian": 146, "formul": [146, 147, 148, 149, 150, 151], "delai": 146, "mstdp": 146, "descript": [146, 148, 149, 151], "elig": 146, "triplet": 146, "adapt": [147, 148, 149], "current": [147, 151], "threshold": 147, "voltag": 147, "leaki": 148, "integr": [148, 149], "fire": [148, 149], "altern": 148, "gener": 148, "1": 148, "2": 148, "3": 148, "glif3": 148, "4": 148, "glif4": 148, "5": 148, "glif5": 148, "nonlinear": 149, "quadrat": 149, "conduct": 150, "base": [150, 151], "coba": 150, "variant": [150, 151], "cuba": 151}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Pragmatic Considerations": [[0, "pragmatic-considerations"]], "Minibatching": [[0, "minibatching"]], "Discrete Time Simulations": [[0, "discrete-time-simulations"]], "Refractory Periods": [[0, "refractory-periods"], [3, "refractory-periods"]], "Model Saving and Restoring": [[0, "model-saving-and-restoring"]], "Guidebook": [[1, "guidebook"]], "Mathematical Notes": [[2, "mathematical-notes"]], "Exponential Decay and Time Constants": [[2, "exponential-decay-and-time-constants"]], "Trace": [[2, "trace"]], "Cumulative Trace": [[2, "cumulative-trace"]], "Nearest Trace": [[2, "nearest-trace"]], "Scaling Trace": [[2, "scaling-trace"]], "Parameter Dependence": [[2, "parameter-dependence"]], "Soft Dependence": [[2, "soft-dependence"]], "Hard Dependence": [[2, "hard-dependence"]], "Dirac Delta and Heaviside Step Functions": [[2, "dirac-delta-and-heaviside-step-functions"]], "Dirac Delta Function": [[2, "dirac-delta-function"]], "Heaviside Step Function": [[2, "heaviside-step-function"]], "Relationship": [[2, "relationship"]], "Neurons and Neuronal Systems": [[3, "neurons-and-neuronal-systems"]], "Dynamics of a Neuron": [[3, "dynamics-of-a-neuron"]], "": [[3, "id1"]], "Welcome to Inferno\u2019s documentation!": [[4, "welcome-to-infernos-documentation"]], "ContextualHook": [[5, "contextualhook"]], "DimensionalModule": [[6, "dimensionalmodule"]], "Hook": [[7, "hook"]], "Module": [[8, "module"]], "RecordModule": [[9, "recordmodule"]], "Shape": [[9, null], [34, null], [37, null], [38, null], [38, null], [38, null], [38, null], [38, null], [38, null], [38, null], [45, null], [45, null], [45, null], [45, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [52, null], [56, null], [56, null], [56, null], [56, null], [56, null], [56, null], [56, null], [57, null], [57, null], [57, null], [57, null], [57, null], [57, null], [57, null], [58, null], [58, null], [58, null], [58, null], [58, null], [58, null], [58, null], [61, null], [71, null], [72, null], [73, null], [76, null], [77, null], [78, null], [79, null], [80, null], [94, null], [94, null], [104, null]], "StateHook": [[10, "statehook"]], "astensors": [[11, "astensors"]], "FullBounding": [[12, "fullbounding"]], "HalfBounding": [[13, "halfbounding"]], "lower_multiplicative": [[14, "lower-multiplicative"]], "lower_power": [[15, "lower-power"]], "lower_sharp": [[16, "lower-sharp"]], "multiplicative": [[17, "multiplicative"]], "power": [[18, "power"]], "sharp": [[19, "sharp"]], "upper_multiplicative": [[20, "upper-multiplicative"]], "upper_power": [[21, "upper-power"]], "upper_sharp": [[22, "upper-sharp"]], "empty": [[23, "empty"]], "exp": [[24, "exp"]], "exponential_smoothing": [[25, "exponential-smoothing"]], "full": [[26, "full"]], "holt_linear_smoothing": [[27, "holt-linear-smoothing"]], "Interpolation": [[28, "interpolation"], [138, "interpolation"]], "expdecay": [[29, "expdecay"]], "expratedecay": [[30, "expratedecay"]], "linear": [[31, "linear"]], "nearest": [[32, "nearest"]], "previous": [[33, "previous"]], "isi": [[34, "isi"]], "CellTrainer": [[35, "celltrainer"]], "LayerwiseTrainer": [[36, "layerwisetrainer"]], "MSTDPET": [[37, "mstdpet"]], "MaxRateClassifier": [[38, "maxrateclassifier"]], "STDP": [[39, "stdp"]], "ALIF": [[40, "alif"]], "AdEx": [[41, "adex"]], "Biclique": [[42, "biclique"]], "Cell": [[43, "cell"]], "Clamping": [[44, "clamping"]], "Connection": [[45, "connection"]], "Conv2D": [[46, "conv2d"]], "DeltaCurrent": [[47, "deltacurrent"]], "DeltaPlusCurrent": [[48, "deltapluscurrent"]], "EIF": [[49, "eif"]], "GLIF1": [[50, "glif1"]], "GLIF2": [[51, "glif2"]], "HomogeneousPoissonEncoder": [[52, "homogeneouspoissonencoder"]], "Izhikevich": [[53, "izhikevich"]], "LIF": [[54, "lif"]], "Layer": [[55, "layer"]], "LinearDense": [[56, "lineardense"]], "LinearDirect": [[57, "lineardirect"]], "LinearLateral": [[58, "linearlateral"]], "Neuron": [[59, "neuron"]], "Normalization": [[60, "normalization"]], "PoissonIntervalEncoder": [[61, "poissonintervalencoder"]], "QIF": [[62, "qif"]], "Serial": [[63, "serial"]], "Synapse": [[64, "synapse"]], "SynapseConstructor": [[65, "synapseconstructor"]], "Updatable": [[66, "updatable"]], "Updater": [[67, "updater"]], "WeightBiasDelayMixin": [[68, "weightbiasdelaymixin"]], "WeightBiasMixin": [[69, "weightbiasmixin"]], "WeightMixin": [[70, "weightmixin"]], "adaptive_currents_linear": [[71, "adaptive-currents-linear"]], "adaptive_thresholds_linear_spike": [[72, "adaptive-thresholds-linear-spike"]], "adaptive_thresholds_linear_voltage": [[73, "adaptive-thresholds-linear-voltage"]], "apply_adaptive_currents": [[74, "apply-adaptive-currents"]], "apply_adaptive_thresholds": [[75, "apply-adaptive-thresholds"]], "enc_homogeneous_poisson_exp_interval": [[76, "enc-homogeneous-poisson-exp-interval"]], "enc_homogeneous_poisson_exp_interval_online": [[77, "enc-homogeneous-poisson-exp-interval-online"]], "enc_inhomogenous_poisson_bernoulli_approx": [[78, "enc-inhomogenous-poisson-bernoulli-approx"]], "enc_poisson_interval": [[79, "enc-poisson-interval"]], "enc_poisson_interval_online": [[80, "enc-poisson-interval-online"]], "voltage_integration_linear": [[81, "voltage-integration-linear"]], "voltage_integration_quadratic": [[82, "voltage-integration-quadratic"]], "voltage_thresholding_constant": [[83, "voltage-thresholding-constant"]], "voltage_thresholding_linear": [[84, "voltage-thresholding-linear"]], "BatchMixin": [[85, "batchmixin"]], "ShapeMixin": [[86, "shapemixin"]], "AdaptationMixin": [[87, "adaptationmixin"]], "CurrentMixin": [[88, "currentmixin"], [93, "currentmixin"]], "RefractoryMixin": [[89, "refractorymixin"]], "SpikeRefractoryMixin": [[90, "spikerefractorymixin"]], "VoltageMixin": [[91, "voltagemixin"]], "CurrentDerivedSpikeMixin": [[92, "currentderivedspikemixin"]], "DelayedSpikeCurrentAccessorMixin": [[94, "delayedspikecurrentaccessormixin"]], "SpikeCurrentMixin": [[95, "spikecurrentmixin"]], "SpikeDerivedCurrentMixin": [[96, "spikederivedcurrentmixin"]], "SpikeMixin": [[97, "spikemixin"]], "normal": [[98, "normal"]], "normalize": [[99, "normalize"]], "CumulativeTraceReducer": [[100, "cumulativetracereducer"]], "DifferenceMonitor": [[101, "differencemonitor"]], "EMAReducer": [[102, "emareducer"]], "EventReducer": [[103, "eventreducer"]], "FoldReducer": [[104, "foldreducer"]], "FoldingReducer": [[105, "foldingreducer"]], "InputMonitor": [[106, "inputmonitor"]], "Monitor": [[107, "monitor"]], "MonitorConstructor": [[108, "monitorconstructor"]], "NearestTraceReducer": [[109, "nearesttracereducer"]], "OutputMonitor": [[110, "outputmonitor"]], "PassthroughReducer": [[111, "passthroughreducer"]], "Reducer": [[112, "reducer"]], "ScaledCumulativeTraceReducer": [[113, "scaledcumulativetracereducer"]], "ScaledNearestTraceReducer": [[114, "scalednearesttracereducer"]], "StateMonitor": [[115, "statemonitor"]], "ones": [[116, "ones"]], "rescale": [[117, "rescale"]], "scalar": [[118, "scalar"]], "sqrt": [[119, "sqrt"]], "LogNormal": [[120, "lognormal"]], "Parameters": [[120, null], [121, null], [122, null]], "Support": [[120, null], [121, null], [122, null]], "Normal": [[121, "normal"]], "Poisson": [[122, "poisson"]], "trace_cumulative": [[123, "trace-cumulative"]], "trace_cumulative_scaled": [[124, "trace-cumulative-scaled"]], "trace_nearest": [[125, "trace-nearest"]], "trace_nearest_scaled": [[126, "trace-nearest-scaled"]], "ManyToMany": [[127, "manytomany"]], "ManyToManyMethod": [[128, "manytomanymethod"]], "ManyToOne": [[129, "manytoone"]], "ManyToOneMethod": [[130, "manytoonemethod"]], "OneToMany": [[131, "onetomany"]], "OneToManyMethod": [[132, "onetomanymethod"]], "OneToOne": [[133, "onetoone"]], "OneToOneMethod": [[134, "onetoonemethod"]], "uniform": [[135, "uniform"]], "zeros": [[136, "zeros"]], "API Reference": [[137, "api-reference"]], "inferno": [[138, "inferno"]], "Infrastructure": [[138, "infrastructure"]], "Tensor Creation": [[138, "tensor-creation"]], "Math Operations": [[138, "math-operations"]], "Spike Trace": [[138, "spike-trace"]], "Parameter Bounding": [[138, "parameter-bounding"]], "Types": [[138, "types"], [140, "types"]], "inferno.learn": [[139, "module-inferno.learn"]], "Components": [[139, "components"], [140, "components"], [142, "components"]], "Updaters, Spike-Timing Dependent Plasticity": [[139, "updaters-spike-timing-dependent-plasticity"]], "Classifiers": [[139, "classifiers"]], "inferno.neural": [[140, "module-inferno.neural"]], "Modeling": [[140, "modeling"]], "Neurons": [[140, "neurons"], [144, "neurons"]], "Synapses": [[140, "synapses"], [144, "synapses"]], "Connections": [[140, "connections"]], "Encoders": [[140, "encoders"]], "Hooks": [[140, "hooks"]], "Mixins": [[140, "mixins"]], "inferno.neural.functional": [[141, "module-inferno.neural.functional"]], "Encodings": [[141, "encodings"]], "Neuronal Dynamics": [[141, "neuronal-dynamics"]], "inferno.observe": [[142, "inferno-observe"]], "Monitors": [[142, "monitors"]], "Reducers": [[142, "reducers"]], "inferno.stats": [[143, "module-inferno.stats"]], "Distributions": [[143, "distributions"]], "Model and Method Zoo": [[144, "model-and-method-zoo"]], "Overview": [[144, "overview"], [145, "overview"], [147, "overview"]], "Learning Methods": [[144, "learning-methods"]], "ReSuMe-Like Learning Methods": [[145, "resume-like-learning-methods"]], "STDP-Like Learning Methods": [[146, "stdp-like-learning-methods"]], "Hebbian Learning": [[146, "hebbian-learning"]], "Spike Timing-Dependent Plasticity (STDP)": [[146, "spike-timing-dependent-plasticity-stdp"]], "Formulation": [[146, "formulation"], [146, "id1"], [146, "id2"], [147, "formulation"], [147, "id1"], [147, "id3"], [147, "id5"], [148, "formulation"], [148, "id1"], [148, "id4"], [149, "formulation"], [149, "id1"], [149, "id4"], [149, "id7"], [150, "formulation"], [151, "formulation"]], "Delayed Spike Timing-Dependent Plasticity (Delayed STDP)": [[146, "delayed-spike-timing-dependent-plasticity-delayed-stdp"]], "Modulated Spike-Timing Dependent Plasticity (MSTDP)": [[146, "modulated-spike-timing-dependent-plasticity-mstdp"]], "Description": [[146, "description"], [148, "description"], [148, "id2"], [148, "id5"], [149, "description"], [149, "id2"], [149, "id5"], [149, "id8"], [151, "description"]], "References": [[146, "references"], [146, "id3"], [147, "references"], [147, "id2"], [147, "id4"], [147, "id6"], [148, "references"], [148, "id3"], [148, "id6"], [149, "references"], [149, "id3"], [149, "id6"], [149, "id9"], [151, "references"]], "Modulated Spike-Timing Dependent Plasticity with Eligibility Trace (MSTDPET)": [[146, "modulated-spike-timing-dependent-plasticity-with-eligibility-trace-mstdpet"]], "Triplet Spike-Timing Dependent Plasticity (STDP)": [[146, "triplet-spike-timing-dependent-plasticity-stdp"]], "Neuronal Adaptation": [[147, "neuronal-adaptation"]], "Adaptive Current, Linear": [[147, "adaptive-current-linear"]], "Adaptive Current, Linear Spike-Dependent": [[147, "adaptive-current-linear-spike-dependent"]], "Adaptive Threshold, Linear Voltage-Dependent": [[147, "adaptive-threshold-linear-voltage-dependent"]], "Adaptive Threshold, Linear Spike-Dependent": [[147, "adaptive-threshold-linear-spike-dependent"]], "Neuron Models, Linear": [[148, "neuron-models-linear"]], "Leaky Integrate-and-Fire (LIF)": [[148, "leaky-integrate-and-fire-lif"]], "Alternative Formulations": [[148, "alternative-formulations"]], "Adaptive Leaky Integrate-and-Fire (ALIF)": [[148, "adaptive-leaky-integrate-and-fire-alif"]], "Generalized Leaky Integrate-and-Fire 1 (GLIF1)": [[148, "generalized-leaky-integrate-and-fire-1-glif1"]], "Generalized Leaky Integrate-and-Fire 2 (GLIF2)": [[148, "generalized-leaky-integrate-and-fire-2-glif2"]], "Generalized Leaky Integrate-and-Fire 3 (GLIF3)": [[148, "generalized-leaky-integrate-and-fire-3-glif3"]], "Generalized Leaky Integrate-and-Fire 4 (GLIF4)": [[148, "generalized-leaky-integrate-and-fire-4-glif4"]], "Generalized Leaky Integrate-and-Fire 5 (GLIF5)": [[148, "generalized-leaky-integrate-and-fire-5-glif5"]], "Neuron Models, Nonlinear": [[149, "neuron-models-nonlinear"]], "Quadratic Integrate-and-Fire (QIF)": [[149, "quadratic-integrate-and-fire-qif"]], "Izhikevich (Adaptive Quadratic)": [[149, "izhikevich-adaptive-quadratic"]], "Exponential Integrate-and-Fire (EIF)": [[149, "exponential-integrate-and-fire-eif"]], "Adaptive Exponential Integrate-and-Fire (AdEx)": [[149, "adaptive-exponential-integrate-and-fire-adex"]], "Synapse Models, Conductance-Based": [[150, "synapse-models-conductance-based"]], "Delta (COBA Variant)": [[150, "delta-coba-variant"]], "Synapse Models, Current-Based": [[151, "synapse-models-current-based"]], "Delta (CUBA Variant)": [[151, "delta-cuba-variant"]]}, "indexentries": {"contextualhook (class in inferno)": [[5, "inferno.ContextualHook"]], "dimensionalmodule (class in inferno)": [[6, "inferno.DimensionalModule"]], "compatible() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.compatible"]], "compatible_() (dimensionalmodule class method)": [[6, "inferno.DimensionalModule.compatible_"]], "compatible_like() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.compatible_like"]], "compatible_like_() (dimensionalmodule class method)": [[6, "inferno.DimensionalModule.compatible_like_"]], "constraints (dimensionalmodule property)": [[6, "inferno.DimensionalModule.constraints"]], "deregister_constrained() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.deregister_constrained"]], "dims (dimensionalmodule property)": [[6, "inferno.DimensionalModule.dims"]], "dims_() (dimensionalmodule class method)": [[6, "inferno.DimensionalModule.dims_"]], "extra_repr() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.extra_repr"]], "liveconstrain (dimensionalmodule property)": [[6, "inferno.DimensionalModule.liveconstrain"]], "reconstrain() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.reconstrain"]], "register_constrained() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.register_constrained"]], "validate() (dimensionalmodule method)": [[6, "inferno.DimensionalModule.validate"]], "hook (class in inferno)": [[7, "inferno.Hook"]], "deregister() (hook method)": [[7, "inferno.Hook.deregister"]], "evalexec (hook property)": [[7, "inferno.Hook.evalexec"]], "register() (hook method)": [[7, "inferno.Hook.register"]], "registered (hook property)": [[7, "inferno.Hook.registered"]], "trainexec (hook property)": [[7, "inferno.Hook.trainexec"]], "module (class in inferno)": [[8, "inferno.Module"]], "get_extra() (module method)": [[8, "inferno.Module.get_extra"]], "get_extra_state() (module method)": [[8, "inferno.Module.get_extra_state"]], "register_extra() (module method)": [[8, "inferno.Module.register_extra"]], "set_extra_state() (module method)": [[8, "inferno.Module.set_extra_state"]], "recordmodule (class in inferno)": [[9, "inferno.RecordModule"]], "aligned() (recordmodule method)": [[9, "inferno.RecordModule.aligned"]], "deregister_constrained() (recordmodule method)": [[9, "inferno.RecordModule.deregister_constrained"]], "dt (recordmodule property)": [[9, "inferno.RecordModule.dt"]], "duration (recordmodule property)": [[9, "inferno.RecordModule.duration"]], "latest() (recordmodule method)": [[9, "inferno.RecordModule.latest"]], "reconstrain() (recordmodule method)": [[9, "inferno.RecordModule.reconstrain"]], "record() (recordmodule method)": [[9, "inferno.RecordModule.record"]], "recordsz (recordmodule property)": [[9, "inferno.RecordModule.recordsz"]], "register_constrained() (recordmodule method)": [[9, "inferno.RecordModule.register_constrained"]], "reset() (recordmodule method)": [[9, "inferno.RecordModule.reset"]], "select() (recordmodule method)": [[9, "inferno.RecordModule.select"]], "statehook (class in inferno)": [[10, "inferno.StateHook"]], "forward() (statehook method)": [[10, "inferno.StateHook.forward"]], "hook() (statehook method)": [[10, "inferno.StateHook.hook"]], "module (statehook property)": [[10, "inferno.StateHook.module"]], "register() (statehook method)": [[10, "inferno.StateHook.register"]], "astensors() (in module inferno)": [[11, "inferno.astensors"]], "fullbounding (class in inferno.bounding)": [[12, "inferno.bounding.FullBounding"]], "halfbounding (class in inferno.bounding)": [[13, "inferno.bounding.HalfBounding"]], "lower_multiplicative() (in module inferno.bounding)": [[14, "inferno.bounding.lower_multiplicative"]], "lower_power() (in module inferno.bounding)": [[15, "inferno.bounding.lower_power"]], "lower_sharp() (in module inferno.bounding)": [[16, "inferno.bounding.lower_sharp"]], "multiplicative() (in module inferno.bounding)": [[17, "inferno.bounding.multiplicative"]], "power() (in module inferno.bounding)": [[18, "inferno.bounding.power"]], "sharp() (in module inferno.bounding)": [[19, "inferno.bounding.sharp"]], "upper_multiplicative() (in module inferno.bounding)": [[20, "inferno.bounding.upper_multiplicative"]], "upper_power() (in module inferno.bounding)": [[21, "inferno.bounding.upper_power"]], "upper_sharp() (in module inferno.bounding)": [[22, "inferno.bounding.upper_sharp"]], "empty() (in module inferno)": [[23, "inferno.empty"]], "exp() (in module inferno)": [[24, "inferno.exp"]], "exponential_smoothing() (in module inferno)": [[25, "inferno.exponential_smoothing"]], "full() (in module inferno)": [[26, "inferno.full"]], "holt_linear_smoothing() (in module inferno)": [[27, "inferno.holt_linear_smoothing"]], "interpolation (class in inferno.interpolation)": [[28, "inferno.interpolation.Interpolation"]], "expdecay() (in module inferno.interpolation)": [[29, "inferno.interpolation.expdecay"]], "expratedecay() (in module inferno.interpolation)": [[30, "inferno.interpolation.expratedecay"]], "linear() (in module inferno.interpolation)": [[31, "inferno.interpolation.linear"]], "nearest() (in module inferno.interpolation)": [[32, "inferno.interpolation.nearest"]], "previous() (in module inferno.interpolation)": [[33, "inferno.interpolation.previous"]], "isi() (in module inferno)": [[34, "inferno.isi"]], "celltrainer (class in inferno.learn)": [[35, "inferno.learn.CellTrainer"]], "add_cell() (celltrainer method)": [[35, "inferno.learn.CellTrainer.add_cell"]], "add_monitor() (celltrainer method)": [[35, "inferno.learn.CellTrainer.add_monitor"]], "cells (celltrainer property)": [[35, "inferno.learn.CellTrainer.cells"]], "clear() (celltrainer method)": [[35, "inferno.learn.CellTrainer.clear"]], "del_cell() (celltrainer method)": [[35, "inferno.learn.CellTrainer.del_cell"]], "del_monitor() (celltrainer method)": [[35, "inferno.learn.CellTrainer.del_monitor"]], "forward() (celltrainer method)": [[35, "inferno.learn.CellTrainer.forward"]], "get_cell() (celltrainer method)": [[35, "inferno.learn.CellTrainer.get_cell"]], "get_monitor() (celltrainer method)": [[35, "inferno.learn.CellTrainer.get_monitor"]], "monitors (celltrainer property)": [[35, "inferno.learn.CellTrainer.monitors"]], "named_cells (celltrainer property)": [[35, "inferno.learn.CellTrainer.named_cells"]], "named_monitors (celltrainer property)": [[35, "inferno.learn.CellTrainer.named_monitors"]], "named_monitors_of() (celltrainer method)": [[35, "inferno.learn.CellTrainer.named_monitors_of"]], "train() (celltrainer method)": [[35, "inferno.learn.CellTrainer.train"]], "update() (celltrainer method)": [[35, "inferno.learn.CellTrainer.update"]], "layerwisetrainer (class in inferno.learn)": [[36, "inferno.learn.LayerwiseTrainer"]], "register_cell() (layerwisetrainer method)": [[36, "inferno.learn.LayerwiseTrainer.register_cell"]], "register_layer() (layerwisetrainer method)": [[36, "inferno.learn.LayerwiseTrainer.register_layer"]], "unit() (layerwisetrainer method)": [[36, "inferno.learn.LayerwiseTrainer.unit"]], "mstdpet (class in inferno.learn)": [[37, "inferno.learn.MSTDPET"]], "mstdpet.eligibilitytracereducer (class in inferno.learn)": [[37, "inferno.learn.MSTDPET.EligibilityTraceReducer"]], "mstdpet.state (class in inferno.learn)": [[37, "inferno.learn.MSTDPET.State"]], "add_cell() (mstdpet method)": [[37, "inferno.learn.MSTDPET.add_cell"]], "clear() (mstdpet method)": [[37, "inferno.learn.MSTDPET.clear"]], "dt (mstdpet.eligibilitytracereducer property)": [[37, "inferno.learn.MSTDPET.EligibilityTraceReducer.dt"]], "fold() (mstdpet.eligibilitytracereducer method)": [[37, "inferno.learn.MSTDPET.EligibilityTraceReducer.fold"]], "forward() (mstdpet method)": [[37, "inferno.learn.MSTDPET.forward"]], "initialize() (mstdpet.eligibilitytracereducer method)": [[37, "inferno.learn.MSTDPET.EligibilityTraceReducer.initialize"]], "interpolate() (mstdpet.eligibilitytracereducer method)": [[37, "inferno.learn.MSTDPET.EligibilityTraceReducer.interpolate"]], "maxrateclassifier (class in inferno.learn)": [[38, "inferno.learn.MaxRateClassifier"]], "assignments (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.assignments"]], "forward() (maxrateclassifier method)": [[38, "inferno.learn.MaxRateClassifier.forward"]], "infer() (maxrateclassifier method)": [[38, "inferno.learn.MaxRateClassifier.infer"]], "learn() (maxrateclassifier method)": [[38, "inferno.learn.MaxRateClassifier.learn"]], "nclass (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.nclass"]], "ndim (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.ndim"]], "occurances (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.occurances"]], "proportional (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.proportional"]], "proportions (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.proportions"]], "rates (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.rates"]], "shape (maxrateclassifier property)": [[38, "inferno.learn.MaxRateClassifier.shape"]], "stdp (class in inferno.learn)": [[39, "inferno.learn.STDP"]], "forward() (stdp method)": [[39, "inferno.learn.STDP.forward"]], "register_cell() (stdp method)": [[39, "inferno.learn.STDP.register_cell"]], "alif (class in inferno.neural)": [[40, "inferno.neural.ALIF"]], "adaptation (alif property)": [[40, "inferno.neural.ALIF.adaptation"]], "batchedshape (alif property)": [[40, "inferno.neural.ALIF.batchedshape"]], "batchsz (alif property)": [[40, "inferno.neural.ALIF.batchsz"]], "clear() (alif method)": [[40, "inferno.neural.ALIF.clear"]], "count (alif property)": [[40, "inferno.neural.ALIF.count"]], "dt (alif property)": [[40, "inferno.neural.ALIF.dt"]], "forward() (alif method)": [[40, "inferno.neural.ALIF.forward"]], "refrac (alif property)": [[40, "inferno.neural.ALIF.refrac"]], "shape (alif property)": [[40, "inferno.neural.ALIF.shape"]], "spike (alif property)": [[40, "inferno.neural.ALIF.spike"]], "voltage (alif property)": [[40, "inferno.neural.ALIF.voltage"]], "adex (class in inferno.neural)": [[41, "inferno.neural.AdEx"]], "adaptation (adex property)": [[41, "inferno.neural.AdEx.adaptation"]], "batchedshape (adex property)": [[41, "inferno.neural.AdEx.batchedshape"]], "batchsz (adex property)": [[41, "inferno.neural.AdEx.batchsz"]], "clear() (adex method)": [[41, "inferno.neural.AdEx.clear"]], "count (adex property)": [[41, "inferno.neural.AdEx.count"]], "dt (adex property)": [[41, "inferno.neural.AdEx.dt"]], "forward() (adex method)": [[41, "inferno.neural.AdEx.forward"]], "refrac (adex property)": [[41, "inferno.neural.AdEx.refrac"]], "shape (adex property)": [[41, "inferno.neural.AdEx.shape"]], "spike (adex property)": [[41, "inferno.neural.AdEx.spike"]], "voltage (adex property)": [[41, "inferno.neural.AdEx.voltage"]], "biclique (class in inferno.neural)": [[42, "inferno.neural.Biclique"]], "add_cell() (biclique method)": [[42, "inferno.neural.Biclique.add_cell"]], "add_connection() (biclique method)": [[42, "inferno.neural.Biclique.add_connection"]], "add_neuron() (biclique method)": [[42, "inferno.neural.Biclique.add_neuron"]], "del_cell() (biclique method)": [[42, "inferno.neural.Biclique.del_cell"]], "del_connection() (biclique method)": [[42, "inferno.neural.Biclique.del_connection"]], "del_neuron() (biclique method)": [[42, "inferno.neural.Biclique.del_neuron"]], "wiring() (biclique method)": [[42, "inferno.neural.Biclique.wiring"]], "cell (class in inferno.neural)": [[43, "inferno.neural.Cell"]], "connection (cell property)": [[43, "inferno.neural.Cell.connection"]], "forward() (cell method)": [[43, "inferno.neural.Cell.forward"]], "local_remap() (cell method)": [[43, "inferno.neural.Cell.local_remap"]], "neuron (cell property)": [[43, "inferno.neural.Cell.neuron"]], "postspike (cell property)": [[43, "inferno.neural.Cell.postspike"]], "postvoltage (cell property)": [[43, "inferno.neural.Cell.postvoltage"]], "precurrent (cell property)": [[43, "inferno.neural.Cell.precurrent"]], "prespike (cell property)": [[43, "inferno.neural.Cell.prespike"]], "synapse (cell property)": [[43, "inferno.neural.Cell.synapse"]], "updater (cell property)": [[43, "inferno.neural.Cell.updater"]], "clamping (class in inferno.neural)": [[44, "inferno.neural.Clamping"]], "hook() (clamping method)": [[44, "inferno.neural.Clamping.hook"]], "connection (class in inferno.neural)": [[45, "inferno.neural.Connection"]], "batched_inshape (connection property)": [[45, "inferno.neural.Connection.batched_inshape"]], "batched_outshape (connection property)": [[45, "inferno.neural.Connection.batched_outshape"]], "batchsz (connection property)": [[45, "inferno.neural.Connection.batchsz"]], "bias (connection property)": [[45, "inferno.neural.Connection.bias"]], "biased (connection property)": [[45, "inferno.neural.Connection.biased"]], "clear() (connection method)": [[45, "inferno.neural.Connection.clear"]], "defaultupdater() (connection method)": [[45, "inferno.neural.Connection.defaultupdater"]], "delay (connection property)": [[45, "inferno.neural.Connection.delay"]], "delayedby (connection property)": [[45, "inferno.neural.Connection.delayedby"]], "dt (connection property)": [[45, "inferno.neural.Connection.dt"]], "extra_repr() (connection method)": [[45, "inferno.neural.Connection.extra_repr"]], "forward() (connection method)": [[45, "inferno.neural.Connection.forward"]], "inshape (connection property)": [[45, "inferno.neural.Connection.inshape"]], "insize() (connection method)": [[45, "inferno.neural.Connection.insize"]], "like_input() (connection method)": [[45, "inferno.neural.Connection.like_input"]], "like_synaptic() (connection method)": [[45, "inferno.neural.Connection.like_synaptic"]], "outshape (connection property)": [[45, "inferno.neural.Connection.outshape"]], "outsize() (connection method)": [[45, "inferno.neural.Connection.outsize"]], "postsyn_receptive() (connection method)": [[45, "inferno.neural.Connection.postsyn_receptive"]], "presyn_receptive() (connection method)": [[45, "inferno.neural.Connection.presyn_receptive"]], "selector (connection property)": [[45, "inferno.neural.Connection.selector"]], "synapse (connection property)": [[45, "inferno.neural.Connection.synapse"]], "syncurrent (connection property)": [[45, "inferno.neural.Connection.syncurrent"]], "synspike (connection property)": [[45, "inferno.neural.Connection.synspike"]], "weight (connection property)": [[45, "inferno.neural.Connection.weight"]], "conv2d (class in inferno.neural)": [[46, "inferno.neural.Conv2D"]], "forward() (conv2d method)": [[46, "inferno.neural.Conv2D.forward"]], "inshape (conv2d property)": [[46, "inferno.neural.Conv2D.inshape"]], "like_input() (conv2d method)": [[46, "inferno.neural.Conv2D.like_input"]], "like_synaptic() (conv2d method)": [[46, "inferno.neural.Conv2D.like_synaptic"]], "outshape (conv2d property)": [[46, "inferno.neural.Conv2D.outshape"]], "postsyn_receptive() (conv2d method)": [[46, "inferno.neural.Conv2D.postsyn_receptive"]], "presyn_receptive() (conv2d method)": [[46, "inferno.neural.Conv2D.presyn_receptive"]], "selector (conv2d property)": [[46, "inferno.neural.Conv2D.selector"]], "deltacurrent (class in inferno.neural)": [[47, "inferno.neural.DeltaCurrent"]], "clear() (deltacurrent method)": [[47, "inferno.neural.DeltaCurrent.clear"]], "dt (deltacurrent property)": [[47, "inferno.neural.DeltaCurrent.dt"]], "forward() (deltacurrent method)": [[47, "inferno.neural.DeltaCurrent.forward"]], "partialconstructor() (deltacurrent class method)": [[47, "inferno.neural.DeltaCurrent.partialconstructor"]], "deltapluscurrent (class in inferno.neural)": [[48, "inferno.neural.DeltaPlusCurrent"]], "clear() (deltapluscurrent method)": [[48, "inferno.neural.DeltaPlusCurrent.clear"]], "dt (deltapluscurrent property)": [[48, "inferno.neural.DeltaPlusCurrent.dt"]], "forward() (deltapluscurrent method)": [[48, "inferno.neural.DeltaPlusCurrent.forward"]], "partialconstructor() (deltapluscurrent class method)": [[48, "inferno.neural.DeltaPlusCurrent.partialconstructor"]], "eif (class in inferno.neural)": [[49, "inferno.neural.EIF"]], "batchedshape (eif property)": [[49, "inferno.neural.EIF.batchedshape"]], "batchsz (eif property)": [[49, "inferno.neural.EIF.batchsz"]], "clear() (eif method)": [[49, "inferno.neural.EIF.clear"]], "count (eif property)": [[49, "inferno.neural.EIF.count"]], "dt (eif property)": [[49, "inferno.neural.EIF.dt"]], "forward() (eif method)": [[49, "inferno.neural.EIF.forward"]], "refrac (eif property)": [[49, "inferno.neural.EIF.refrac"]], "shape (eif property)": [[49, "inferno.neural.EIF.shape"]], "spike (eif property)": [[49, "inferno.neural.EIF.spike"]], "voltage (eif property)": [[49, "inferno.neural.EIF.voltage"]], "glif1 (class in inferno.neural)": [[50, "inferno.neural.GLIF1"]], "batchedshape (glif1 property)": [[50, "inferno.neural.GLIF1.batchedshape"]], "batchsz (glif1 property)": [[50, "inferno.neural.GLIF1.batchsz"]], "clear() (glif1 method)": [[50, "inferno.neural.GLIF1.clear"]], "count (glif1 property)": [[50, "inferno.neural.GLIF1.count"]], "dt (glif1 property)": [[50, "inferno.neural.GLIF1.dt"]], "forward() (glif1 method)": [[50, "inferno.neural.GLIF1.forward"]], "refrac (glif1 property)": [[50, "inferno.neural.GLIF1.refrac"]], "shape (glif1 property)": [[50, "inferno.neural.GLIF1.shape"]], "spike (glif1 property)": [[50, "inferno.neural.GLIF1.spike"]], "voltage (glif1 property)": [[50, "inferno.neural.GLIF1.voltage"]], "glif2 (class in inferno.neural)": [[51, "inferno.neural.GLIF2"]], "adaptation (glif2 property)": [[51, "inferno.neural.GLIF2.adaptation"]], "batchedshape (glif2 property)": [[51, "inferno.neural.GLIF2.batchedshape"]], "batchsz (glif2 property)": [[51, "inferno.neural.GLIF2.batchsz"]], "clear() (glif2 method)": [[51, "inferno.neural.GLIF2.clear"]], "count (glif2 property)": [[51, "inferno.neural.GLIF2.count"]], "dt (glif2 property)": [[51, "inferno.neural.GLIF2.dt"]], "forward() (glif2 method)": [[51, "inferno.neural.GLIF2.forward"]], "refrac (glif2 property)": [[51, "inferno.neural.GLIF2.refrac"]], "shape (glif2 property)": [[51, "inferno.neural.GLIF2.shape"]], "spike (glif2 property)": [[51, "inferno.neural.GLIF2.spike"]], "voltage (glif2 property)": [[51, "inferno.neural.GLIF2.voltage"]], "homogeneouspoissonencoder (class in inferno.neural)": [[52, "inferno.neural.HomogeneousPoissonEncoder"]], "compensated (homogeneouspoissonencoder property)": [[52, "inferno.neural.HomogeneousPoissonEncoder.compensated"]], "forward() (homogeneouspoissonencoder method)": [[52, "inferno.neural.HomogeneousPoissonEncoder.forward"]], "frequency (homogeneouspoissonencoder property)": [[52, "inferno.neural.HomogeneousPoissonEncoder.frequency"]], "refrac (homogeneouspoissonencoder property)": [[52, "inferno.neural.HomogeneousPoissonEncoder.refrac"]], "izhikevich (class in inferno.neural)": [[53, "inferno.neural.Izhikevich"]], "adaptation (izhikevich property)": [[53, "inferno.neural.Izhikevich.adaptation"]], "batchedshape (izhikevich property)": [[53, "inferno.neural.Izhikevich.batchedshape"]], "batchsz (izhikevich property)": [[53, "inferno.neural.Izhikevich.batchsz"]], "clear() (izhikevich method)": [[53, "inferno.neural.Izhikevich.clear"]], "count (izhikevich property)": [[53, "inferno.neural.Izhikevich.count"]], "dt (izhikevich property)": [[53, "inferno.neural.Izhikevich.dt"]], "forward() (izhikevich method)": [[53, "inferno.neural.Izhikevich.forward"]], "refrac (izhikevich property)": [[53, "inferno.neural.Izhikevich.refrac"]], "shape (izhikevich property)": [[53, "inferno.neural.Izhikevich.shape"]], "spike (izhikevich property)": [[53, "inferno.neural.Izhikevich.spike"]], "voltage (izhikevich property)": [[53, "inferno.neural.Izhikevich.voltage"]], "lif (class in inferno.neural)": [[54, "inferno.neural.LIF"]], "batchedshape (lif property)": [[54, "inferno.neural.LIF.batchedshape"]], "batchsz (lif property)": [[54, "inferno.neural.LIF.batchsz"]], "clear() (lif method)": [[54, "inferno.neural.LIF.clear"]], "count (lif property)": [[54, "inferno.neural.LIF.count"]], "dt (lif property)": [[54, "inferno.neural.LIF.dt"]], "forward() (lif method)": [[54, "inferno.neural.LIF.forward"]], "refrac (lif property)": [[54, "inferno.neural.LIF.refrac"]], "shape (lif property)": [[54, "inferno.neural.LIF.shape"]], "spike (lif property)": [[54, "inferno.neural.LIF.spike"]], "voltage (lif property)": [[54, "inferno.neural.LIF.voltage"]], "layer (class in inferno.neural)": [[55, "inferno.neural.Layer"]], "add_cell() (layer method)": [[55, "inferno.neural.Layer.add_cell"]], "add_connection() (layer method)": [[55, "inferno.neural.Layer.add_connection"]], "add_neuron() (layer method)": [[55, "inferno.neural.Layer.add_neuron"]], "cells (layer property)": [[55, "inferno.neural.Layer.cells"]], "connections (layer property)": [[55, "inferno.neural.Layer.connections"]], "del_cell() (layer method)": [[55, "inferno.neural.Layer.del_cell"]], "del_connection() (layer method)": [[55, "inferno.neural.Layer.del_connection"]], "del_neuron() (layer method)": [[55, "inferno.neural.Layer.del_neuron"]], "forward() (layer method)": [[55, "inferno.neural.Layer.forward"]], "get_cell() (layer method)": [[55, "inferno.neural.Layer.get_cell"]], "get_connection() (layer method)": [[55, "inferno.neural.Layer.get_connection"]], "get_neuron() (layer method)": [[55, "inferno.neural.Layer.get_neuron"]], "named_cells (layer property)": [[55, "inferno.neural.Layer.named_cells"]], "named_connections (layer property)": [[55, "inferno.neural.Layer.named_connections"]], "named_neurons (layer property)": [[55, "inferno.neural.Layer.named_neurons"]], "named_synapses (layer property)": [[55, "inferno.neural.Layer.named_synapses"]], "neurons (layer property)": [[55, "inferno.neural.Layer.neurons"]], "update() (layer method)": [[55, "inferno.neural.Layer.update"]], "wiring() (layer method)": [[55, "inferno.neural.Layer.wiring"]], "lineardense (class in inferno.neural)": [[56, "inferno.neural.LinearDense"]], "forward() (lineardense method)": [[56, "inferno.neural.LinearDense.forward"]], "inshape (lineardense property)": [[56, "inferno.neural.LinearDense.inshape"]], "like_input() (lineardense method)": [[56, "inferno.neural.LinearDense.like_input"]], "like_synaptic() (lineardense method)": [[56, "inferno.neural.LinearDense.like_synaptic"]], "outshape (lineardense property)": [[56, "inferno.neural.LinearDense.outshape"]], "postsyn_receptive() (lineardense method)": [[56, "inferno.neural.LinearDense.postsyn_receptive"]], "presyn_receptive() (lineardense method)": [[56, "inferno.neural.LinearDense.presyn_receptive"]], "selector (lineardense property)": [[56, "inferno.neural.LinearDense.selector"]], "lineardirect (class in inferno.neural)": [[57, "inferno.neural.LinearDirect"]], "forward() (lineardirect method)": [[57, "inferno.neural.LinearDirect.forward"]], "inshape (lineardirect property)": [[57, "inferno.neural.LinearDirect.inshape"]], "like_input() (lineardirect method)": [[57, "inferno.neural.LinearDirect.like_input"]], "like_synaptic() (lineardirect method)": [[57, "inferno.neural.LinearDirect.like_synaptic"]], "outshape (lineardirect property)": [[57, "inferno.neural.LinearDirect.outshape"]], "postsyn_receptive() (lineardirect method)": [[57, "inferno.neural.LinearDirect.postsyn_receptive"]], "presyn_receptive() (lineardirect method)": [[57, "inferno.neural.LinearDirect.presyn_receptive"]], "selector (lineardirect property)": [[57, "inferno.neural.LinearDirect.selector"]], "linearlateral (class in inferno.neural)": [[58, "inferno.neural.LinearLateral"]], "delay (linearlateral property)": [[58, "inferno.neural.LinearLateral.delay"]], "forward() (linearlateral method)": [[58, "inferno.neural.LinearLateral.forward"]], "inshape (linearlateral property)": [[58, "inferno.neural.LinearLateral.inshape"]], "like_input() (linearlateral method)": [[58, "inferno.neural.LinearLateral.like_input"]], "like_synaptic() (linearlateral method)": [[58, "inferno.neural.LinearLateral.like_synaptic"]], "outshape (linearlateral property)": [[58, "inferno.neural.LinearLateral.outshape"]], "postsyn_receptive() (linearlateral method)": [[58, "inferno.neural.LinearLateral.postsyn_receptive"]], "presyn_receptive() (linearlateral method)": [[58, "inferno.neural.LinearLateral.presyn_receptive"]], "selector (linearlateral property)": [[58, "inferno.neural.LinearLateral.selector"]], "weight (linearlateral property)": [[58, "inferno.neural.LinearLateral.weight"]], "neuron (class in inferno.neural)": [[59, "inferno.neural.Neuron"]], "batchsz (neuron property)": [[59, "inferno.neural.Neuron.batchsz"]], "clear() (neuron method)": [[59, "inferno.neural.Neuron.clear"]], "dt (neuron property)": [[59, "inferno.neural.Neuron.dt"]], "extra_repr() (neuron method)": [[59, "inferno.neural.Neuron.extra_repr"]], "forward() (neuron method)": [[59, "inferno.neural.Neuron.forward"]], "refrac (neuron property)": [[59, "inferno.neural.Neuron.refrac"]], "spike (neuron property)": [[59, "inferno.neural.Neuron.spike"]], "voltage (neuron property)": [[59, "inferno.neural.Neuron.voltage"]], "normalization (class in inferno.neural)": [[60, "inferno.neural.Normalization"]], "hook() (normalization method)": [[60, "inferno.neural.Normalization.hook"]], "poissonintervalencoder (class in inferno.neural)": [[61, "inferno.neural.PoissonIntervalEncoder"]], "forward() (poissonintervalencoder method)": [[61, "inferno.neural.PoissonIntervalEncoder.forward"]], "frequency (poissonintervalencoder property)": [[61, "inferno.neural.PoissonIntervalEncoder.frequency"]], "qif (class in inferno.neural)": [[62, "inferno.neural.QIF"]], "batchedshape (qif property)": [[62, "inferno.neural.QIF.batchedshape"]], "batchsz (qif property)": [[62, "inferno.neural.QIF.batchsz"]], "clear() (qif method)": [[62, "inferno.neural.QIF.clear"]], "count (qif property)": [[62, "inferno.neural.QIF.count"]], "dt (qif property)": [[62, "inferno.neural.QIF.dt"]], "forward() (qif method)": [[62, "inferno.neural.QIF.forward"]], "refrac (qif property)": [[62, "inferno.neural.QIF.refrac"]], "shape (qif property)": [[62, "inferno.neural.QIF.shape"]], "spike (qif property)": [[62, "inferno.neural.QIF.spike"]], "voltage (qif property)": [[62, "inferno.neural.QIF.voltage"]], "serial (class in inferno.neural)": [[63, "inferno.neural.Serial"]], "add_cell() (serial method)": [[63, "inferno.neural.Serial.add_cell"]], "add_connection() (serial method)": [[63, "inferno.neural.Serial.add_connection"]], "add_neuron() (serial method)": [[63, "inferno.neural.Serial.add_neuron"]], "cell (serial property)": [[63, "inferno.neural.Serial.cell"]], "connection (serial property)": [[63, "inferno.neural.Serial.connection"]], "del_cell() (serial method)": [[63, "inferno.neural.Serial.del_cell"]], "del_connection() (serial method)": [[63, "inferno.neural.Serial.del_connection"]], "del_neuron() (serial method)": [[63, "inferno.neural.Serial.del_neuron"]], "forward() (serial method)": [[63, "inferno.neural.Serial.forward"]], "neuron (serial property)": [[63, "inferno.neural.Serial.neuron"]], "synapse (serial property)": [[63, "inferno.neural.Serial.synapse"]], "updater (serial property)": [[63, "inferno.neural.Serial.updater"]], "wiring() (serial method)": [[63, "inferno.neural.Serial.wiring"]], "synapse (class in inferno.neural)": [[64, "inferno.neural.Synapse"]], "clear() (synapse method)": [[64, "inferno.neural.Synapse.clear"]], "current (synapse property)": [[64, "inferno.neural.Synapse.current"]], "current_at() (synapse method)": [[64, "inferno.neural.Synapse.current_at"]], "delay (synapse property)": [[64, "inferno.neural.Synapse.delay"]], "dt (synapse property)": [[64, "inferno.neural.Synapse.dt"]], "extra_repr() (synapse method)": [[64, "inferno.neural.Synapse.extra_repr"]], "forward() (synapse method)": [[64, "inferno.neural.Synapse.forward"]], "partialconstructor() (synapse class method)": [[64, "inferno.neural.Synapse.partialconstructor"]], "spike (synapse property)": [[64, "inferno.neural.Synapse.spike"]], "spike_at() (synapse method)": [[64, "inferno.neural.Synapse.spike_at"]], "synapseconstructor (class in inferno.neural)": [[65, "inferno.neural.SynapseConstructor"]], "updatable (class in inferno.neural)": [[66, "inferno.neural.Updatable"]], "clear() (updatable method)": [[66, "inferno.neural.Updatable.clear"]], "defaultupdater() (updatable method)": [[66, "inferno.neural.Updatable.defaultupdater"]], "updatable (updatable property)": [[66, "inferno.neural.Updatable.updatable"]], "update() (updatable method)": [[66, "inferno.neural.Updatable.update"]], "updater (updatable property)": [[66, "inferno.neural.Updatable.updater"]], "updatesome() (updatable method)": [[66, "inferno.neural.Updatable.updatesome"]], "updater (class in inferno.neural)": [[67, "inferno.neural.Updater"]], "clear() (updater method)": [[67, "inferno.neural.Updater.clear"]], "forward() (updater method)": [[67, "inferno.neural.Updater.forward"]], "names (updater property)": [[67, "inferno.neural.Updater.names"]], "parent (updater property)": [[67, "inferno.neural.Updater.parent"]], "weightbiasdelaymixin (class in inferno.neural.connections.mixins)": [[68, "inferno.neural.connections.mixins.WeightBiasDelayMixin"]], "delay (weightbiasdelaymixin property)": [[68, "inferno.neural.connections.mixins.WeightBiasDelayMixin.delay"]], "weightbiasmixin (class in inferno.neural.connections.mixins)": [[69, "inferno.neural.connections.mixins.WeightBiasMixin"]], "bias (weightbiasmixin property)": [[69, "inferno.neural.connections.mixins.WeightBiasMixin.bias"]], "weightmixin (class in inferno.neural.connections.mixins)": [[70, "inferno.neural.connections.mixins.WeightMixin"]], "weight (weightmixin property)": [[70, "inferno.neural.connections.mixins.WeightMixin.weight"]], "adaptive_currents_linear() (in module inferno.neural.functional)": [[71, "inferno.neural.functional.adaptive_currents_linear"]], "adaptive_thresholds_linear_spike() (in module inferno.neural.functional)": [[72, "inferno.neural.functional.adaptive_thresholds_linear_spike"]], "adaptive_thresholds_linear_voltage() (in module inferno.neural.functional)": [[73, "inferno.neural.functional.adaptive_thresholds_linear_voltage"]], "apply_adaptive_currents() (in module inferno.neural.functional)": [[74, "inferno.neural.functional.apply_adaptive_currents"]], "apply_adaptive_thresholds() (in module inferno.neural.functional)": [[75, "inferno.neural.functional.apply_adaptive_thresholds"]], "enc_homogeneous_poisson_exp_interval() (in module inferno.neural.functional)": [[76, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval"]], "enc_homogeneous_poisson_exp_interval_online() (in module inferno.neural.functional)": [[77, "inferno.neural.functional.enc_homogeneous_poisson_exp_interval_online"]], "enc_inhomogenous_poisson_bernoulli_approx() (in module inferno.neural.functional)": [[78, "inferno.neural.functional.enc_inhomogenous_poisson_bernoulli_approx"]], "enc_poisson_interval() (in module inferno.neural.functional)": [[79, "inferno.neural.functional.enc_poisson_interval"]], "enc_poisson_interval_online() (in module inferno.neural.functional)": [[80, "inferno.neural.functional.enc_poisson_interval_online"]], "voltage_integration_linear() (in module inferno.neural.functional)": [[81, "inferno.neural.functional.voltage_integration_linear"]], "voltage_integration_quadratic() (in module inferno.neural.functional)": [[82, "inferno.neural.functional.voltage_integration_quadratic"]], "voltage_thresholding_constant() (in module inferno.neural.functional)": [[83, "inferno.neural.functional.voltage_thresholding_constant"]], "voltage_thresholding_linear() (in module inferno.neural.functional)": [[84, "inferno.neural.functional.voltage_thresholding_linear"]], "batchmixin (class in inferno.neural.mixins)": [[85, "inferno.neural.mixins.BatchMixin"]], "batchsz (batchmixin property)": [[85, "inferno.neural.mixins.BatchMixin.batchsz"]], "shapemixin (class in inferno.neural.mixins)": [[86, "inferno.neural.mixins.ShapeMixin"]], "batchedshape (shapemixin property)": [[86, "inferno.neural.mixins.ShapeMixin.batchedshape"]], "count (shapemixin property)": [[86, "inferno.neural.mixins.ShapeMixin.count"]], "shape (shapemixin property)": [[86, "inferno.neural.mixins.ShapeMixin.shape"]], "adaptationmixin (class in inferno.neural.neurons.mixins)": [[87, "inferno.neural.neurons.mixins.AdaptationMixin"]], "adaptation (adaptationmixin property)": [[87, "inferno.neural.neurons.mixins.AdaptationMixin.adaptation"]], "currentmixin (class in inferno.neural.neurons.mixins)": [[88, "inferno.neural.neurons.mixins.CurrentMixin"]], "current (currentmixin property)": [[88, "inferno.neural.neurons.mixins.CurrentMixin.current"], [93, "inferno.neural.synapses.mixins.CurrentMixin.current"]], "refractorymixin (class in inferno.neural.neurons.mixins)": [[89, "inferno.neural.neurons.mixins.RefractoryMixin"]], "refrac (refractorymixin property)": [[89, "inferno.neural.neurons.mixins.RefractoryMixin.refrac"]], "spikerefractorymixin (class in inferno.neural.neurons.mixins)": [[90, "inferno.neural.neurons.mixins.SpikeRefractoryMixin"]], "spike (spikerefractorymixin property)": [[90, "inferno.neural.neurons.mixins.SpikeRefractoryMixin.spike"]], "voltagemixin (class in inferno.neural.neurons.mixins)": [[91, "inferno.neural.neurons.mixins.VoltageMixin"]], "voltage (voltagemixin property)": [[91, "inferno.neural.neurons.mixins.VoltageMixin.voltage"]], "currentderivedspikemixin (class in inferno.neural.synapses.mixins)": [[92, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin"]], "spike (currentderivedspikemixin property)": [[92, "inferno.neural.synapses.mixins.CurrentDerivedSpikeMixin.spike"]], "currentmixin (class in inferno.neural.synapses.mixins)": [[93, "inferno.neural.synapses.mixins.CurrentMixin"]], "delayedspikecurrentaccessormixin (class in inferno.neural.synapses.mixins)": [[94, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin"]], "current_at() (delayedspikecurrentaccessormixin method)": [[94, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.current_at"]], "spike_at() (delayedspikecurrentaccessormixin method)": [[94, "inferno.neural.synapses.mixins.DelayedSpikeCurrentAccessorMixin.spike_at"]], "spikecurrentmixin (class in inferno.neural.synapses.mixins)": [[95, "inferno.neural.synapses.mixins.SpikeCurrentMixin"]], "spikederivedcurrentmixin (class in inferno.neural.synapses.mixins)": [[96, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin"]], "current (spikederivedcurrentmixin property)": [[96, "inferno.neural.synapses.mixins.SpikeDerivedCurrentMixin.current"]], "spikemixin (class in inferno.neural.synapses.mixins)": [[97, "inferno.neural.synapses.mixins.SpikeMixin"]], "spike (spikemixin property)": [[97, "inferno.neural.synapses.mixins.SpikeMixin.spike"]], "normal() (in module inferno)": [[98, "inferno.normal"]], "normalize() (in module inferno)": [[99, "inferno.normalize"]], "cumulativetracereducer (class in inferno.observe)": [[100, "inferno.observe.CumulativeTraceReducer"]], "dt (cumulativetracereducer property)": [[100, "inferno.observe.CumulativeTraceReducer.dt"]], "fold() (cumulativetracereducer method)": [[100, "inferno.observe.CumulativeTraceReducer.fold"]], "initialize() (cumulativetracereducer method)": [[100, "inferno.observe.CumulativeTraceReducer.initialize"]], "interpolate() (cumulativetracereducer method)": [[100, "inferno.observe.CumulativeTraceReducer.interpolate"]], "differencemonitor (class in inferno.observe)": [[101, "inferno.observe.DifferenceMonitor"]], "clear() (differencemonitor method)": [[101, "inferno.observe.DifferenceMonitor.clear"]], "partialconstructor() (differencemonitor class method)": [[101, "inferno.observe.DifferenceMonitor.partialconstructor"]], "emareducer (class in inferno.observe)": [[102, "inferno.observe.EMAReducer"]], "fold() (emareducer method)": [[102, "inferno.observe.EMAReducer.fold"]], "initialize() (emareducer method)": [[102, "inferno.observe.EMAReducer.initialize"]], "interpolate() (emareducer method)": [[102, "inferno.observe.EMAReducer.interpolate"]], "eventreducer (class in inferno.observe)": [[103, "inferno.observe.EventReducer"]], "fold() (eventreducer method)": [[103, "inferno.observe.EventReducer.fold"]], "initialize() (eventreducer method)": [[103, "inferno.observe.EventReducer.initialize"]], "interpolate() (eventreducer method)": [[103, "inferno.observe.EventReducer.interpolate"]], "foldreducer (class in inferno.observe)": [[104, "inferno.observe.FoldReducer"]], "clear() (foldreducer method)": [[104, "inferno.observe.FoldReducer.clear"]], "data (foldreducer property)": [[104, "inferno.observe.FoldReducer.data"]], "dt (foldreducer property)": [[104, "inferno.observe.FoldReducer.dt"]], "dump() (foldreducer method)": [[104, "inferno.observe.FoldReducer.dump"]], "duration (foldreducer property)": [[104, "inferno.observe.FoldReducer.duration"]], "forward() (foldreducer method)": [[104, "inferno.observe.FoldReducer.forward"]], "peek() (foldreducer method)": [[104, "inferno.observe.FoldReducer.peek"]], "push() (foldreducer method)": [[104, "inferno.observe.FoldReducer.push"]], "view() (foldreducer method)": [[104, "inferno.observe.FoldReducer.view"]], "foldingreducer (class in inferno.observe)": [[105, "inferno.observe.FoldingReducer"]], "fold() (foldingreducer method)": [[105, "inferno.observe.FoldingReducer.fold"]], "initialize() (foldingreducer method)": [[105, "inferno.observe.FoldingReducer.initialize"]], "interpolate() (foldingreducer method)": [[105, "inferno.observe.FoldingReducer.interpolate"]], "inputmonitor (class in inferno.observe)": [[106, "inferno.observe.InputMonitor"]], "partialconstructor() (inputmonitor class method)": [[106, "inferno.observe.InputMonitor.partialconstructor"]], "monitor (class in inferno.observe)": [[107, "inferno.observe.Monitor"]], "clear() (monitor method)": [[107, "inferno.observe.Monitor.clear"]], "dump() (monitor method)": [[107, "inferno.observe.Monitor.dump"]], "partialconstructor() (monitor class method)": [[107, "inferno.observe.Monitor.partialconstructor"]], "peek() (monitor method)": [[107, "inferno.observe.Monitor.peek"]], "peekvalue (monitor property)": [[107, "inferno.observe.Monitor.peekvalue"]], "reducer (monitor property)": [[107, "inferno.observe.Monitor.reducer"]], "register() (monitor method)": [[107, "inferno.observe.Monitor.register"]], "view() (monitor method)": [[107, "inferno.observe.Monitor.view"]], "monitorconstructor (class in inferno.observe)": [[108, "inferno.observe.MonitorConstructor"]], "nearesttracereducer (class in inferno.observe)": [[109, "inferno.observe.NearestTraceReducer"]], "dt (nearesttracereducer property)": [[109, "inferno.observe.NearestTraceReducer.dt"]], "fold() (nearesttracereducer method)": [[109, "inferno.observe.NearestTraceReducer.fold"]], "initialize() (nearesttracereducer method)": [[109, "inferno.observe.NearestTraceReducer.initialize"]], "interpolate() (nearesttracereducer method)": [[109, "inferno.observe.NearestTraceReducer.interpolate"]], "outputmonitor (class in inferno.observe)": [[110, "inferno.observe.OutputMonitor"]], "partialconstructor() (outputmonitor class method)": [[110, "inferno.observe.OutputMonitor.partialconstructor"]], "passthroughreducer (class in inferno.observe)": [[111, "inferno.observe.PassthroughReducer"]], "fold() (passthroughreducer method)": [[111, "inferno.observe.PassthroughReducer.fold"]], "initialize() (passthroughreducer method)": [[111, "inferno.observe.PassthroughReducer.initialize"]], "interpolate() (passthroughreducer method)": [[111, "inferno.observe.PassthroughReducer.interpolate"]], "reducer (class in inferno.observe)": [[112, "inferno.observe.Reducer"]], "clear() (reducer method)": [[112, "inferno.observe.Reducer.clear"]], "dump() (reducer method)": [[112, "inferno.observe.Reducer.dump"]], "forward() (reducer method)": [[112, "inferno.observe.Reducer.forward"]], "peek() (reducer method)": [[112, "inferno.observe.Reducer.peek"]], "peekvalue (reducer property)": [[112, "inferno.observe.Reducer.peekvalue"]], "push() (reducer method)": [[112, "inferno.observe.Reducer.push"]], "view() (reducer method)": [[112, "inferno.observe.Reducer.view"]], "scaledcumulativetracereducer (class in inferno.observe)": [[113, "inferno.observe.ScaledCumulativeTraceReducer"]], "dt (scaledcumulativetracereducer property)": [[113, "inferno.observe.ScaledCumulativeTraceReducer.dt"]], "fold() (scaledcumulativetracereducer method)": [[113, "inferno.observe.ScaledCumulativeTraceReducer.fold"]], "initialize() (scaledcumulativetracereducer method)": [[113, "inferno.observe.ScaledCumulativeTraceReducer.initialize"]], "interpolate() (scaledcumulativetracereducer method)": [[113, "inferno.observe.ScaledCumulativeTraceReducer.interpolate"]], "scalednearesttracereducer (class in inferno.observe)": [[114, "inferno.observe.ScaledNearestTraceReducer"]], "dt (scalednearesttracereducer property)": [[114, "inferno.observe.ScaledNearestTraceReducer.dt"]], "fold() (scalednearesttracereducer method)": [[114, "inferno.observe.ScaledNearestTraceReducer.fold"]], "initialize() (scalednearesttracereducer method)": [[114, "inferno.observe.ScaledNearestTraceReducer.initialize"]], "interpolate() (scalednearesttracereducer method)": [[114, "inferno.observe.ScaledNearestTraceReducer.interpolate"]], "statemonitor (class in inferno.observe)": [[115, "inferno.observe.StateMonitor"]], "partialconstructor() (statemonitor class method)": [[115, "inferno.observe.StateMonitor.partialconstructor"]], "ones() (in module inferno)": [[116, "inferno.ones"]], "rescale() (in module inferno)": [[117, "inferno.rescale"]], "scalar() (in module inferno)": [[118, "inferno.scalar"]], "sqrt() (in module inferno)": [[119, "inferno.sqrt"]], "lognormal (class in inferno.stats)": [[120, "inferno.stats.LogNormal"]], "cdf() (lognormal class method)": [[120, "inferno.stats.LogNormal.cdf"]], "logcdf() (lognormal class method)": [[120, "inferno.stats.LogNormal.logcdf"]], "logpdf() (lognormal class method)": [[120, "inferno.stats.LogNormal.logpdf"]], "mean() (lognormal class method)": [[120, "inferno.stats.LogNormal.mean"]], "params_mv() (lognormal class method)": [[120, "inferno.stats.LogNormal.params_mv"]], "pdf() (lognormal class method)": [[120, "inferno.stats.LogNormal.pdf"]], "sample() (lognormal class method)": [[120, "inferno.stats.LogNormal.sample"]], "sample_mv() (lognormal class method)": [[120, "inferno.stats.LogNormal.sample_mv"]], "validate() (lognormal class method)": [[120, "inferno.stats.LogNormal.validate"]], "variance() (lognormal class method)": [[120, "inferno.stats.LogNormal.variance"]], "normal (class in inferno.stats)": [[121, "inferno.stats.Normal"]], "cdf() (normal class method)": [[121, "inferno.stats.Normal.cdf"]], "logcdf() (normal class method)": [[121, "inferno.stats.Normal.logcdf"]], "logpdf() (normal class method)": [[121, "inferno.stats.Normal.logpdf"]], "mean() (normal class method)": [[121, "inferno.stats.Normal.mean"]], "params_mv() (normal class method)": [[121, "inferno.stats.Normal.params_mv"]], "pdf() (normal class method)": [[121, "inferno.stats.Normal.pdf"]], "sample() (normal class method)": [[121, "inferno.stats.Normal.sample"]], "sample_mv() (normal class method)": [[121, "inferno.stats.Normal.sample_mv"]], "validate() (normal class method)": [[121, "inferno.stats.Normal.validate"]], "variance() (normal class method)": [[121, "inferno.stats.Normal.variance"]], "poisson (class in inferno.stats)": [[122, "inferno.stats.Poisson"]], "cdf() (poisson class method)": [[122, "inferno.stats.Poisson.cdf"]], "logcdf() (poisson class method)": [[122, "inferno.stats.Poisson.logcdf"]], "logpmf() (poisson class method)": [[122, "inferno.stats.Poisson.logpmf"]], "mean() (poisson class method)": [[122, "inferno.stats.Poisson.mean"]], "pmf() (poisson class method)": [[122, "inferno.stats.Poisson.pmf"]], "sample() (poisson class method)": [[122, "inferno.stats.Poisson.sample"]], "validate() (poisson class method)": [[122, "inferno.stats.Poisson.validate"]], "variance() (poisson class method)": [[122, "inferno.stats.Poisson.variance"]], "trace_cumulative() (in module inferno)": [[123, "inferno.trace_cumulative"]], "trace_cumulative_scaled() (in module inferno)": [[124, "inferno.trace_cumulative_scaled"]], "trace_nearest() (in module inferno)": [[125, "inferno.trace_nearest"]], "trace_nearest_scaled() (in module inferno)": [[126, "inferno.trace_nearest_scaled"]], "manytomany (class in inferno.types)": [[127, "inferno.types.ManyToMany"]], "manytomanymethod (class in inferno.types)": [[128, "inferno.types.ManyToManyMethod"]], "manytoone (class in inferno.types)": [[129, "inferno.types.ManyToOne"]], "manytoonemethod (class in inferno.types)": [[130, "inferno.types.ManyToOneMethod"]], "onetomany (class in inferno.types)": [[131, "inferno.types.OneToMany"]], "onetomanymethod (class in inferno.types)": [[132, "inferno.types.OneToManyMethod"]], "onetoone (class in inferno.types)": [[133, "inferno.types.OneToOne"]], "onetoonemethod (class in inferno.types)": [[134, "inferno.types.OneToOneMethod"]], "uniform() (in module inferno)": [[135, "inferno.uniform"]], "zeros() (in module inferno)": [[136, "inferno.zeros"]], "inferno.learn": [[139, "module-inferno.learn"]], "module": [[139, "module-inferno.learn"], [140, "module-inferno.neural"], [141, "module-inferno.neural.functional"], [143, "module-inferno.stats"]], "inferno.neural": [[140, "module-inferno.neural"]], "inferno.neural.functional": [[141, "module-inferno.neural.functional"]], "inferno.stats": [[143, "module-inferno.stats"]]}})